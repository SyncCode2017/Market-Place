{
  "address": "0x5FbDB2315678afecb367f032d93F642f64180aa3",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_feeAccount",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_feePercent",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "Marketplace__NotOwner",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "seller",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "buyer",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "item",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "qtty_bought",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "price",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "timestamp",
          "type": "uint256"
        }
      ],
      "name": "CancelFilledOrder",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "seller",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "item",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "qtty_to_sell",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "price",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "timestamp",
          "type": "uint256"
        }
      ],
      "name": "CancelOpenOrder",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "bal",
          "type": "uint256"
        }
      ],
      "name": "Deposit",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "seller",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "item",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "qtty_to_sell",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "price",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "timestamp",
          "type": "uint256"
        }
      ],
      "name": "OrderCreated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "seller",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "buyer",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "item",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "qtty_bought",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "price",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "timestamp",
          "type": "uint256"
        }
      ],
      "name": "OrderDelivered",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "seller",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "buyer",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "item",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "qtty_bought",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "price",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "timestamp",
          "type": "uint256"
        }
      ],
      "name": "OrderFilled",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "bal",
          "type": "uint256"
        }
      ],
      "name": "Withdraw",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "Buyers",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_id",
          "type": "uint256"
        }
      ],
      "name": "OrderReceived",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_item",
          "type": "string"
        }
      ],
      "name": "addAllowedItems",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "allowedItems",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_id",
          "type": "uint256"
        }
      ],
      "name": "cancelFilledOrder",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_id",
          "type": "uint256"
        }
      ],
      "name": "cancelOpenOrder",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "depositEther",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "feeAccount",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "feePercent",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_id",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_quantity",
          "type": "uint256"
        }
      ],
      "name": "fillOrder",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "filledAmount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "filledQuantity",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getAllowedItems",
      "outputs": [
        {
          "internalType": "string[]",
          "name": "",
          "type": "string[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "getBal",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "name": "goods",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "i_owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "item",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_item",
          "type": "string"
        }
      ],
      "name": "itemIsAllowed",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_item",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "_quantity",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_price",
          "type": "uint256"
        }
      ],
      "name": "makeOrder",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "myBalance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "open_order",
      "outputs": [
        {
          "internalType": "uint256[]",
          "name": "idOrder",
          "type": "uint256[]"
        },
        {
          "internalType": "string[]",
          "name": "_item",
          "type": "string[]"
        },
        {
          "internalType": "uint256[]",
          "name": "_qty",
          "type": "uint256[]"
        },
        {
          "internalType": "uint256[]",
          "name": "_prc",
          "type": "uint256[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "orderCancelled",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "orderCount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "orderCreated",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "orderDelivered",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "orderFilled",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "orderStatus",
      "outputs": [
        {
          "internalType": "enum Marketplace.ORDER_STATE",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "orders",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "seller",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "item",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "qtty_to_sell",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "price",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "timestamp",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "withdrawEther",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0xef1c82d4c8b7ab18dabad0bbb48e63e845c09548a6e1589e87e84f71d686acd6",
  "receipt": {
    "to": null,
    "from": "0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266",
    "contractAddress": "0x5FbDB2315678afecb367f032d93F642f64180aa3",
    "transactionIndex": 0,
    "gasUsed": "3237801",
    "logsBloom": "0x
    "blockHash": "0x4c6d4da96558cc8f803d6fd785a6acf6103998e16202a07ce8650203bf1068b0",
    "transactionHash": "0xef1c82d4c8b7ab18dabad0bbb48e63e845c09548a6e1589e87e84f71d686acd6",
    "logs": [],
    "blockNumber": 1,
    "cumulativeGasUsed": "3237801",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266",
    5
  ],
  "numDeployments": 1,
  "solcInputHash": "9790b7ed7351c12e799a367a665482bf",
  "metadata": "{\"compiler\":{\"version\":\"0.8.8+commit.dddeac2f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_feeAccount\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_feePercent\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"Marketplace__NotOwner\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"seller\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"buyer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"item\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"qtty_bought\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"CancelFilledOrder\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"seller\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"item\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"qtty_to_sell\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"CancelOpenOrder\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"bal\",\"type\":\"uint256\"}],\"name\":\"Deposit\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"seller\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"item\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"qtty_to_sell\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"OrderCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"seller\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"buyer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"item\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"qtty_bought\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"OrderDelivered\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"seller\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"buyer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"item\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"qtty_bought\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"OrderFilled\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"bal\",\"type\":\"uint256\"}],\"name\":\"Withdraw\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"Buyers\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_id\",\"type\":\"uint256\"}],\"name\":\"OrderReceived\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_item\",\"type\":\"string\"}],\"name\":\"addAllowedItems\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"allowedItems\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_id\",\"type\":\"uint256\"}],\"name\":\"cancelFilledOrder\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_id\",\"type\":\"uint256\"}],\"name\":\"cancelOpenOrder\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"depositEther\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"feeAccount\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"feePercent\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_quantity\",\"type\":\"uint256\"}],\"name\":\"fillOrder\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"filledAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"filledQuantity\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getAllowedItems\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"\",\"type\":\"string[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"getBal\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"goods\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"i_owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"item\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_item\",\"type\":\"string\"}],\"name\":\"itemIsAllowed\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_item\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"_quantity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_price\",\"type\":\"uint256\"}],\"name\":\"makeOrder\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"myBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"open_order\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"idOrder\",\"type\":\"uint256[]\"},{\"internalType\":\"string[]\",\"name\":\"_item\",\"type\":\"string[]\"},{\"internalType\":\"uint256[]\",\"name\":\"_qty\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"_prc\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"orderCancelled\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"orderCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"orderCreated\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"orderDelivered\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"orderFilled\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"orderStatus\",\"outputs\":[{\"internalType\":\"enum Marketplace.ORDER_STATE\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"orders\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"seller\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"item\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"qtty_to_sell\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"withdrawEther\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Abolaji\",\"kind\":\"dev\",\"methods\":{},\"title\":\"A contract for buying and selling items\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Marketplace.sol\":\"Marketplace\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (access/Ownable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    constructor() {\\n        _transferOwnership(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby removing any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0x24e0364e503a9bbde94c715d26573a76f14cd2a202d45f96f52134ab806b67b9\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\"},\"contracts/Marketplace.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.8;\\npragma experimental ABIEncoderV2;\\n\\nimport \\\"@openzeppelin/contracts/access/Ownable.sol\\\";\\n\\nerror Marketplace__NewItemExist();\\nerror Marketplace__NotOwner();\\n\\n/** @title A contract for buying and selling items\\n *  @author Abolaji\\n *  @dev\\n */\\n\\ncontract Marketplace {\\n    //Variables\\n    address public immutable feeAccount;\\n    uint256 public immutable feePercent;\\n    address public immutable i_owner;\\n    string public item;\\n    address payable internal user;\\n    uint256 public orderCount;\\n\\n    struct _order {\\n        uint256 id;\\n        address seller;\\n        string item;\\n        uint256 qtty_to_sell;\\n        uint256 price;\\n        uint256 timestamp;\\n    }\\n\\n    mapping(address => mapping(string => uint256)) public goods;\\n\\n    // store the order\\n    mapping(address => uint256) public getBal;\\n    mapping(uint256 => _order) public orders;\\n    mapping(uint256 => ORDER_STATE) public orderStatus;\\n    mapping(uint256 => bool) public orderCancelled;\\n    mapping(uint256 => bool) public orderFilled;\\n    mapping(uint256 => bool) public orderCreated;\\n    mapping(uint256 => bool) public orderDelivered;\\n    mapping(uint256 => address) public Buyers;\\n    mapping(uint256 => uint256) public filledAmount;\\n    mapping(uint256 => uint256) public filledQuantity;\\n    //_order[] public OpenOrder;\\n    string[] public allowedItems;\\n\\n    //Events\\n    event Deposit(address user, uint256 amount, uint256 bal);\\n    event Withdraw(address user, uint256 amount, uint256 bal);\\n    event OrderCreated(\\n        uint256 id,\\n        address seller,\\n        string item,\\n        uint256 qtty_to_sell,\\n        uint256 price,\\n        uint256 timestamp\\n    );\\n    event OrderFilled(\\n        uint256 id,\\n        address seller,\\n        address buyer,\\n        string item,\\n        uint256 qtty_bought,\\n        uint256 price,\\n        uint256 timestamp\\n    );\\n    event OrderDelivered(\\n        uint256 id,\\n        address seller,\\n        address buyer,\\n        string item,\\n        uint256 qtty_bought,\\n        uint256 price,\\n        uint256 timestamp\\n    );\\n    event CancelOpenOrder(\\n        uint256 id,\\n        address seller,\\n        string item,\\n        uint256 qtty_to_sell,\\n        uint256 price,\\n        uint256 timestamp\\n    );\\n    event CancelFilledOrder(\\n        uint256 id,\\n        address seller,\\n        address buyer,\\n        string item,\\n        uint256 qtty_bought,\\n        uint256 price,\\n        uint256 timestamp\\n    );\\n\\n    enum ORDER_STATE {\\n        OPEN,\\n        FILLED,\\n        CLOSED\\n    }\\n\\n    constructor(address _feeAccount, uint256 _feePercent) {\\n        feeAccount = _feeAccount;\\n        feePercent = _feePercent;\\n        i_owner = msg.sender;\\n    }\\n\\n    function depositEther() public payable {\\n        getBal[msg.sender] = getBal[msg.sender] + msg.value;\\n\\n        emit Deposit(msg.sender, msg.value, getBal[msg.sender]);\\n    }\\n\\n    modifier onlyOwner() {\\n        // require(msg.sender == i_owner);\\n        if (msg.sender != i_owner) revert Marketplace__NotOwner();\\n        _;\\n    }\\n\\n    // //Fallback: reverts if Ether is sent to this smart contract by mistake\\n    // function() external {\\n    //     revert();\\n    // }\\n\\n    function withdrawEther(uint256 _amount) public {\\n        user = payable(msg.sender);\\n        require(getBal[msg.sender] >= _amount);\\n        getBal[msg.sender] = getBal[msg.sender] - _amount;\\n        user.transfer(_amount);\\n        emit Withdraw(msg.sender, _amount, getBal[msg.sender]);\\n    }\\n\\n    function myBalance() public view returns (uint256) {\\n        return getBal[msg.sender];\\n    }\\n\\n    // Create an order\\n    function makeOrder(\\n        string memory _item,\\n        uint256 _quantity,\\n        uint256 _price\\n    ) public {\\n        require(itemIsAllowed(_item), \\\"Item is currently not allowed\\\");\\n        orderCount = orderCount + 1;\\n        //orderStatus[orderCount] = ORDER_STATE.CLOSED;\\n        orders[orderCount] = _order(\\n            orderCount,\\n            msg.sender,\\n            _item,\\n            _quantity,\\n            _price,\\n            block.timestamp\\n        );\\n        orderStatus[orderCount] = ORDER_STATE.OPEN;\\n        goods[msg.sender][_item] = _quantity;\\n        emit OrderCreated(\\n            orderCount,\\n            msg.sender,\\n            _item,\\n            _quantity,\\n            _price,\\n            block.timestamp\\n        );\\n    }\\n\\n    // Fill an order as a buyer\\n    function fillOrder(uint256 _id, uint256 _quantity) public {\\n        require(_id > 0 && _id <= orderCount);\\n        require(orderStatus[_id] == ORDER_STATE.OPEN);\\n\\n        address _buyer = msg.sender;\\n\\n        // Fetch the order\\n        _order memory order = orders[_id];\\n        require(_quantity <= order.qtty_to_sell, \\\"Reduce the quantity\\\");\\n        uint256 amount = _quantity * order.price;\\n        require(getBal[_buyer] >= amount, \\\"You need more eth\\\");\\n\\n        _orderBond(_id, _buyer, _quantity, amount);\\n\\n        // Mark order as filled\\n        orderFilled[_id] = true;\\n        orderStatus[_id] = ORDER_STATE.FILLED;\\n        Buyers[_id] = _buyer;\\n        filledAmount[_id] = amount;\\n        filledQuantity[_id] = _quantity;\\n\\n        emit OrderFilled(\\n            _id,\\n            order.seller,\\n            _buyer,\\n            order.item,\\n            _quantity,\\n            order.price,\\n            block.timestamp\\n        );\\n    }\\n\\n    //_order[]  public memory OpenOrder;\\n    //Getting orders that are still for buying\\n    function open_order()\\n        public\\n        view\\n        returns (\\n            uint256[] memory idOrder,\\n            string[] memory _item,\\n            uint256[] memory _qty,\\n            uint256[] memory _prc\\n        )\\n    {\\n        idOrder = new uint256[](orderCount);\\n        _item = new string[](orderCount);\\n        _qty = new uint256[](orderCount);\\n        _prc = new uint256[](orderCount);\\n        for (uint256 i = 1; i <= orderCount; i++) {\\n            if (orderStatus[i] == ORDER_STATE.OPEN) {\\n                //OpenOrder[i-1] = orders[i];\\n                idOrder[i - 1] = orders[i].id;\\n                _item[i - 1] = orders[i].item;\\n                _qty[i - 1] = orders[i].qtty_to_sell;\\n                _prc[i - 1] = orders[i].price / (10**15);\\n            }\\n        }\\n        return (idOrder, _item, _qty, _prc);\\n        //return OpenOrder;\\n    }\\n\\n    // When the buyer confirms the receipt of the items, the money is released to the seller\\n    function OrderReceived(uint256 _id) public {\\n        address _buyer = Buyers[_id];\\n        _order memory order = orders[_id];\\n        require(orderStatus[_id] == ORDER_STATE.FILLED);\\n        require(msg.sender == _buyer, \\\"Not your order\\\");\\n        uint256 amount = filledAmount[_id];\\n        uint256 quantity = filledQuantity[_id];\\n\\n        _orderCompleted(_id, _buyer, quantity, amount);\\n        orderStatus[_id] = ORDER_STATE.CLOSED;\\n        emit OrderDelivered(\\n            _id,\\n            order.seller,\\n            _buyer,\\n            order.item,\\n            quantity,\\n            order.price,\\n            block.timestamp\\n        );\\n    }\\n\\n    function cancelOpenOrder(uint256 _id) public {\\n        _order memory order = orders[_id];\\n        require(order.seller == msg.sender, \\\"Not your order\\\"); // must be \\\"my\\\" order\\n        require(orderStatus[_id] == ORDER_STATE.OPEN);\\n\\n        orderCancelled[_id] = true;\\n        orderStatus[_id] == ORDER_STATE.CLOSED;\\n        emit CancelOpenOrder(\\n            _id,\\n            order.seller,\\n            order.item,\\n            order.qtty_to_sell,\\n            order.price,\\n            block.timestamp\\n        );\\n    }\\n\\n    function cancelFilledOrder(uint256 _id) public {\\n        _order memory order = orders[_id];\\n        address _buyer = Buyers[_id];\\n        require(\\n            order.seller == msg.sender || _buyer == msg.sender,\\n            \\\"Not your order\\\"\\n        ); // must be \\\"my\\\" order\\n        require(orderStatus[_id] == ORDER_STATE.FILLED);\\n        uint256 _amount = filledAmount[_id];\\n        uint256 _quantity = filledQuantity[_id];\\n\\n        getBal[_buyer] = getBal[_buyer] + _amount;\\n        goods[msg.sender][order.item] =\\n            goods[msg.sender][order.item] +\\n            _quantity;\\n        orderStatus[_id] == ORDER_STATE.CLOSED;\\n        orderCancelled[_id] = true;\\n        emit CancelFilledOrder(\\n            _id,\\n            order.seller,\\n            _buyer,\\n            order.item,\\n            _quantity,\\n            order.price,\\n            block.timestamp\\n        );\\n    }\\n\\n    function _orderBond(\\n        uint256 _id,\\n        address _buyer,\\n        uint256 _quantity,\\n        uint256 _amount\\n    ) internal {\\n        _order memory order = orders[_id];\\n        // place order\\n        getBal[_buyer] = getBal[_buyer] - _amount;\\n        goods[order.seller][order.item] =\\n            goods[order.seller][order.item] -\\n            _quantity;\\n    }\\n\\n    function _orderCompleted(\\n        uint256 _id,\\n        address _buyer,\\n        uint256 _quantity,\\n        uint256 _amount\\n    ) internal {\\n        _order memory order = orders[_id];\\n        _amount = _amount - ((feePercent * _amount) / 100);\\n\\n        getBal[order.seller] = getBal[order.seller] + _amount;\\n        goods[_buyer][order.item] = goods[_buyer][order.item] + _quantity;\\n        getBal[feeAccount] =\\n            getBal[feeAccount] +\\n            ((feePercent * _amount) / 100);\\n    }\\n\\n    function addAllowedItems(string memory _item) public onlyOwner {\\n        //require (newItemIsUnique(_item));\\n        allowedItems.push(_item);\\n    }\\n\\n    function itemIsAllowed(string memory _item) public view returns (bool) {\\n        for (\\n            uint256 allowedItemIndex = 0;\\n            allowedItemIndex < allowedItems.length;\\n            allowedItemIndex++\\n        ) {\\n            if (\\n                keccak256(bytes(allowedItems[allowedItemIndex])) ==\\n                keccak256(bytes(_item))\\n            ) {\\n                return true;\\n            }\\n        }\\n        return false;\\n    }\\n\\n    // function newItemIsUnique(string memory _item) public view  returns (bool) {\\n    //     string[] memory itemArray= allowedItems;\\n    //     for (uint256 i=0; i<itemArray.length; i++){\\n    //         if (keccak256(bytes(itemArray[i]))==keccak256(bytes(_item))){\\n    //             revert Marketplace__NewItemExist();\\n    //         }\\n    //     }\\n    //     return true;\\n    // }\\n\\n    function getAllowedItems() public view returns (string[] memory) {\\n        return allowedItems;\\n    }\\n}\\n\",\"keccak256\":\"0x436a11ad1325a5584de3b2e1d0940ebb63c5627cd28ea7348a7adfcaecd91f15\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x60e06040523480156200001157600080fd5b5060405162003b9a38038062003b9a83398181016040528101906200003791906200015a565b8173ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff1660601b815250508060a081815250503373ffffffffffffffffffffffffffffffffffffffff1660c08173ffffffffffffffffffffffffffffffffffffffff1660601b815250505050620001a1565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620000e782620000ba565b9050919050565b620000f981620000da565b81146200010557600080fd5b50565b6000815190506200011981620000ee565b92915050565b6000819050919050565b62000134816200011f565b81146200014057600080fd5b50565b600081519050620001548162000129565b92915050565b60008060408385031215620001745762000173620000b5565b5b6000620001848582860162000108565b9250506020620001978582860162000143565b9150509250929050565b60805160601c60a05160c05160601c6139a0620001fa60003960008181611df50152612372015260008181611238015281816125b1015261275a0152600081816112140152818161279301526127fd01526139a06000f3fe6080604052600436106101c25760003560e01c80639b40ae7f116100f7578063c94c2b8d11610095578063dbdea44c11610064578063dbdea44c14610687578063e742a182146106c4578063e9c1896614610701578063f2a4a82e1461073e576101c2565b8063c94c2b8d146105cd578063cb3968b51461060a578063d55a7bcb14610633578063dba6335f1461065c576101c2565b8063a8e87b8a116100d1578063a8e87b8a14610513578063bff494501461053c578063c37dfc5b14610579578063c9116b69146105a2576101c2565b80639b40ae7f14610457578063a443df9414610494578063a85c38ef146104d1576101c2565b8063493047fc1161016457806365e17c9d1161013e57806365e17c9d146103ce5780637fd6f15c146103f9578063812538e11461042457806398ea5fca1461044d576101c2565b8063493047fc146103295780634a93e0da146103545780634f16587314610391576101c2565b80632e6e91aa116101a05780632e6e91aa146102585780632fa7808514610295578063364315dd146102d25780633bed33ce14610300576101c2565b80630da1e350146101c75780631df9ccaa146101f05780632453ffa81461022d575b600080fd5b3480156101d357600080fd5b506101ee60048036038101906101e99190612beb565b610769565b005b3480156101fc57600080fd5b5061021760048036038101906102129190612beb565b610a60565b6040516102249190612c27565b60405180910390f35b34801561023957600080fd5b50610242610a78565b60405161024f9190612c27565b60405180910390f35b34801561026457600080fd5b5061027f600480360381019061027a9190612beb565b610a7e565b60405161028c9190612cdb565b60405180910390f35b3480156102a157600080fd5b506102bc60048036038101906102b79190612d5b565b610b2a565b6040516102c99190612c27565b60405180910390f35b3480156102de57600080fd5b506102e7610b42565b6040516102f79493929190612f52565b60405180910390f35b34801561030c57600080fd5b5061032760048036038101906103229190612beb565b610e9a565b005b34801561033557600080fd5b5061033e61109b565b60405161034b9190612fb3565b60405180910390f35b34801561036057600080fd5b5061037b60048036038101906103769190612beb565b611174565b6040516103889190612ff0565b60405180910390f35b34801561039d57600080fd5b506103b860048036038101906103b39190613140565b611194565b6040516103c59190612ff0565b60405180910390f35b3480156103da57600080fd5b506103e3611212565b6040516103f09190613198565b60405180910390f35b34801561040557600080fd5b5061040e611236565b60405161041b9190612c27565b60405180910390f35b34801561043057600080fd5b5061044b60048036038101906104469190612beb565b61125a565b005b610455611518565b005b34801561046357600080fd5b5061047e600480360381019061047991906131b3565b611622565b60405161048b9190612c27565b60405180910390f35b3480156104a057600080fd5b506104bb60048036038101906104b69190612beb565b61165d565b6040516104c89190613198565b60405180910390f35b3480156104dd57600080fd5b506104f860048036038101906104f39190612beb565b611690565b60405161050a9695949392919061320f565b60405180910390f35b34801561051f57600080fd5b5061053a60048036038101906105359190613277565b611774565b005b34801561054857600080fd5b50610563600480360381019061055e9190612beb565b6119a0565b604051610570919061335d565b60405180910390f35b34801561058557600080fd5b506105a0600480360381019061059b9190613378565b6119c0565b005b3480156105ae57600080fd5b506105b7611d8c565b6040516105c49190612c27565b60405180910390f35b3480156105d957600080fd5b506105f460048036038101906105ef9190612beb565b611dd3565b6040516106019190612ff0565b60405180910390f35b34801561061657600080fd5b50610631600480360381019061062c9190613140565b611df3565b005b34801561063f57600080fd5b5061065a60048036038101906106559190612beb565b611eb7565b005b34801561066857600080fd5b50610671612370565b60405161067e9190613198565b60405180910390f35b34801561069357600080fd5b506106ae60048036038101906106a99190612beb565b612394565b6040516106bb9190612c27565b60405180910390f35b3480156106d057600080fd5b506106eb60048036038101906106e69190612beb565b6123ac565b6040516106f89190612ff0565b60405180910390f35b34801561070d57600080fd5b5061072860048036038101906107239190612beb565b6123cc565b6040516107359190612ff0565b60405180910390f35b34801561074a57600080fd5b506107536123ec565b6040516107609190612cdb565b60405180910390f35b6000600b600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690506000600560008481526020019081526020016000206040518060c0016040529081600082015481526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600282018054610831906133e7565b80601f016020809104026020016040519081016040528092919081815260200182805461085d906133e7565b80156108aa5780601f1061087f576101008083540402835291602001916108aa565b820191906000526020600020905b81548152906001019060200180831161088d57829003601f168201915b5050505050815260200160038201548152602001600482015481526020016005820154815250509050600160028111156108e7576108e66132e6565b5b6006600085815260200190815260200160002060009054906101000a900460ff16600281111561091a576109196132e6565b5b1461092457600080fd5b8173ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610992576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161098990613465565b60405180910390fd5b6000600c60008581526020019081526020016000205490506000600d60008681526020019081526020016000205490506109ce8585838561247a565b60026006600087815260200190815260200160002060006101000a81548160ff02191690836002811115610a0557610a046132e6565b5b02179055507f7dfc2e96d4e9bfa63e26f3d2a2c37873074e8ad79d74ea908e97c8ae7d796a9785846020015186866040015185886080015142604051610a519796959493929190613485565b60405180910390a15050505050565b600c6020528060005260406000206000915090505481565b60025481565b600e8181548110610a8e57600080fd5b906000526020600020016000915090508054610aa9906133e7565b80601f0160208091040260200160405190810160405280929190818152602001828054610ad5906133e7565b8015610b225780601f10610af757610100808354040283529160200191610b22565b820191906000526020600020905b815481529060010190602001808311610b0557829003601f168201915b505050505081565b60046020528060005260406000206000915090505481565b60608060608060025467ffffffffffffffff811115610b6457610b63613015565b5b604051908082528060200260200182016040528015610b925781602001602082028036833780820191505090505b50935060025467ffffffffffffffff811115610bb157610bb0613015565b5b604051908082528060200260200182016040528015610be457816020015b6060815260200190600190039081610bcf5790505b50925060025467ffffffffffffffff811115610c0357610c02613015565b5b604051908082528060200260200182016040528015610c315781602001602082028036833780820191505090505b50915060025467ffffffffffffffff811115610c5057610c4f613015565b5b604051908082528060200260200182016040528015610c7e5781602001602082028036833780820191505090505b5090506000600190505b6002548111610e935760006002811115610ca557610ca46132e6565b5b6006600083815260200190815260200160002060009054906101000a900460ff166002811115610cd857610cd76132e6565b5b1415610e8057600560008281526020019081526020016000206000015485600183610d03919061352a565b81518110610d1457610d1361355e565b5b602002602001018181525050600560008281526020019081526020016000206002018054610d41906133e7565b80601f0160208091040260200160405190810160405280929190818152602001828054610d6d906133e7565b8015610dba5780601f10610d8f57610100808354040283529160200191610dba565b820191906000526020600020905b815481529060010190602001808311610d9d57829003601f168201915b505050505084600183610dcd919061352a565b81518110610dde57610ddd61355e565b5b6020026020010181905250600560008281526020019081526020016000206003015483600183610e0e919061352a565b81518110610e1f57610e1e61355e565b5b60200260200101818152505066038d7ea4c680006005600083815260200190815260200160002060040154610e5491906135bc565b82600183610e62919061352a565b81518110610e7357610e7261355e565b5b6020026020010181815250505b8080610e8b906135ed565b915050610c88565b5090919293565b33600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020541015610f2757600080fd5b80600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610f72919061352a565b600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f1935050505015801561101d573d6000803e3d6000fd5b507ff279e6a1f5e320cca91135676d9cb6e44ca8a08c0b88342bcdb1144f6511b5683382600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205460405161109093929190613636565b60405180910390a150565b6060600e805480602002602001604051908101604052809291908181526020016000905b8282101561116b5783829060005260206000200180546110de906133e7565b80601f016020809104026020016040519081016040528092919081815260200182805461110a906133e7565b80156111575780601f1061112c57610100808354040283529160200191611157565b820191906000526020600020905b81548152906001019060200180831161113a57829003601f168201915b5050505050815260200190600101906110bf565b50505050905090565b60086020528060005260406000206000915054906101000a900460ff1681565b600080600090505b600e80549050811015611207578280519060200120600e82815481106111c5576111c461355e565b5b906000526020600020016040516111dc919061370c565b604051809103902014156111f457600191505061120d565b80806111ff906135ed565b91505061119c565b50600090505b919050565b7f000000000000000000000000000000000000000000000000000000000000000081565b7f000000000000000000000000000000000000000000000000000000000000000081565b6000600560008381526020019081526020016000206040518060c0016040529081600082015481526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016002820180546112ea906133e7565b80601f0160208091040260200160405190810160405280929190818152602001828054611316906133e7565b80156113635780601f1061133857610100808354040283529160200191611363565b820191906000526020600020905b81548152906001019060200180831161134657829003601f168201915b50505050508152602001600382015481526020016004820154815260200160058201548152505090503373ffffffffffffffffffffffffffffffffffffffff16816020015173ffffffffffffffffffffffffffffffffffffffff16146113fe576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016113f590613465565b60405180910390fd5b60006002811115611412576114116132e6565b5b6006600084815260200190815260200160002060009054906101000a900460ff166002811115611445576114446132e6565b5b1461144f57600080fd5b60016007600084815260200190815260200160002060006101000a81548160ff02191690831515021790555060028081111561148e5761148d6132e6565b5b6006600084815260200190815260200160002060009054906101000a900460ff1660028111156114c1576114c06132e6565b5b50507f605e46eb1441c0674ff6584b5ea1ba9a7f5d53198deaaf2a04338b577b38ab3b8282602001518360400151846060015185608001514260405161150c9695949392919061320f565b60405180910390a15050565b34600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546115639190613723565b600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055507f90890809c654f11d6e72a28fa60149770a0d11ec6c92319d6ceb2bb0a4ea1a153334600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205460405161161893929190613636565b60405180910390a1565b600360205281600052604060002081805160208101820180518482526020830160208501208183528095505050505050600091509150505481565b600b6020528060005260406000206000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60056020528060005260406000206000915090508060000154908060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060020180546116df906133e7565b80601f016020809104026020016040519081016040528092919081815260200182805461170b906133e7565b80156117585780601f1061172d57610100808354040283529160200191611758565b820191906000526020600020905b81548152906001019060200180831161173b57829003601f168201915b5050505050908060030154908060040154908060050154905086565b61177d83611194565b6117bc576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016117b3906137c5565b60405180910390fd5b60016002546117cb9190613723565b6002819055506040518060c0016040528060025481526020013373ffffffffffffffffffffffffffffffffffffffff168152602001848152602001838152602001828152602001428152506005600060025481526020019081526020016000206000820151816000015560208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506040820151816002019080519060200190611898929190612afe565b50606082015181600301556080820151816004015560a08201518160050155905050600060066000600254815260200190815260200160002060006101000a81548160ff021916908360028111156118f3576118f26132e6565b5b021790555081600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020846040516119469190613821565b9081526020016040518091039020819055507f9193cdda35362c821e3d4d240a5fcb0093ad192ac99028d18e5dff3414ee787160025433858585426040516119939695949392919061320f565b60405180910390a1505050565b60066020528060005260406000206000915054906101000a900460ff1681565b6000821180156119d257506002548211155b6119db57600080fd5b600060028111156119ef576119ee6132e6565b5b6006600084815260200190815260200160002060009054906101000a900460ff166002811115611a2257611a216132e6565b5b14611a2c57600080fd5b60003390506000600560008581526020019081526020016000206040518060c0016040529081600082015481526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600282018054611ac1906133e7565b80601f0160208091040260200160405190810160405280929190818152602001828054611aed906133e7565b8015611b3a5780601f10611b0f57610100808354040283529160200191611b3a565b820191906000526020600020905b815481529060010190602001808311611b1d57829003601f168201915b50505050508152602001600382015481526020016004820154815260200160058201548152505090508060600151831115611baa576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611ba190613884565b60405180910390fd5b6000816080015184611bbc91906138a4565b905080600460008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020541015611c40576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611c379061394a565b60405180910390fd5b611c4c85848684612861565b60016008600087815260200190815260200160002060006101000a81548160ff02191690831515021790555060016006600087815260200190815260200160002060006101000a81548160ff02191690836002811115611caf57611cae6132e6565b5b021790555082600b600087815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600c60008781526020019081526020016000208190555083600d6000878152602001908152602001600020819055507f7717c4c0039d1e3b8c4e5fea24aea887c3b05f8f7f1e5fe6f041c5b4b58d94a185836020015185856040015188876080015142604051611d7d9796959493929190613485565b60405180910390a15050505050565b6000600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905090565b60096020528060005260406000206000915054906101000a900460ff1681565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614611e78576040517fbf91ead800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600e81908060018154018082558091505060019003906000526020600020016000909190919091509080519060200190611eb3929190612afe565b5050565b6000600560008381526020019081526020016000206040518060c0016040529081600082015481526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600282018054611f47906133e7565b80601f0160208091040260200160405190810160405280929190818152602001828054611f73906133e7565b8015611fc05780601f10611f9557610100808354040283529160200191611fc0565b820191906000526020600020905b815481529060010190602001808311611fa357829003601f168201915b50505050508152602001600382015481526020016004820154815260200160058201548152505090506000600b600084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690503373ffffffffffffffffffffffffffffffffffffffff16826020015173ffffffffffffffffffffffffffffffffffffffff16148061208a57503373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16145b6120c9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016120c090613465565b60405180910390fd5b600160028111156120dd576120dc6132e6565b5b6006600085815260200190815260200160002060009054906101000a900460ff1660028111156121105761210f6132e6565b5b1461211a57600080fd5b6000600c60008581526020019081526020016000205490506000600d600086815260200190815260200160002054905081600460008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546121959190613723565b600460008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555080600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020856040015160405161222a9190613821565b9081526020016040518091039020546122439190613723565b600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002085604001516040516122949190613821565b9081526020016040518091039020819055506002808111156122b9576122b86132e6565b5b6006600087815260200190815260200160002060009054906101000a900460ff1660028111156122ec576122eb6132e6565b5b505060016007600087815260200190815260200160002060006101000a81548160ff0219169083151502179055507f3f4cd73070ce25691a6ac562de84d1efbdfbb91a5f68c38178f1182736856b09858560200151858760400151858960800151426040516123619796959493929190613485565b60405180910390a15050505050565b7f000000000000000000000000000000000000000000000000000000000000000081565b600d6020528060005260406000206000915090505481565b600a6020528060005260406000206000915054906101000a900460ff1681565b60076020528060005260406000206000915054906101000a900460ff1681565b600080546123f9906133e7565b80601f0160208091040260200160405190810160405280929190818152602001828054612425906133e7565b80156124725780601f1061244757610100808354040283529160200191612472565b820191906000526020600020905b81548152906001019060200180831161245557829003601f168201915b505050505081565b6000600560008681526020019081526020016000206040518060c0016040529081600082015481526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200160028201805461250a906133e7565b80601f0160208091040260200160405190810160405280929190818152602001828054612536906133e7565b80156125835780601f1061255857610100808354040283529160200191612583565b820191906000526020600020905b81548152906001019060200180831161256657829003601f168201915b50505050508152602001600382015481526020016004820154815260200160058201548152505090506064827f00000000000000000000000000000000000000000000000000000000000000006125da91906138a4565b6125e491906135bc565b826125ef919061352a565b91508160046000836020015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546126409190613723565b60046000836020015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555082600360008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002082604001516040516126d99190613821565b9081526020016040518091039020546126f29190613723565b600360008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002082604001516040516127439190613821565b9081526020016040518091039020819055506064827f000000000000000000000000000000000000000000000000000000000000000061278391906138a4565b61278d91906135bc565b600460007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546127f79190613723565b600460007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505050505050565b6000600560008681526020019081526020016000206040518060c0016040529081600082015481526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016002820180546128f1906133e7565b80601f016020809104026020016040519081016040528092919081815260200182805461291d906133e7565b801561296a5780601f1061293f5761010080835404028352916020019161296a565b820191906000526020600020905b81548152906001019060200180831161294d57829003601f168201915b505050505081526020016003820154815260200160048201548152602001600582015481525050905081600460008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546129de919061352a565b600460008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508260036000836020015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208260400151604051612a779190613821565b908152602001604051809103902054612a90919061352a565b60036000836020015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208260400151604051612ae59190613821565b9081526020016040518091039020819055505050505050565b828054612b0a906133e7565b90600052602060002090601f016020900481019282612b2c5760008555612b73565b82601f10612b4557805160ff1916838001178555612b73565b82800160010185558215612b73579182015b82811115612b72578251825591602001919060010190612b57565b5b509050612b809190612b84565b5090565b5b80821115612b9d576000816000905550600101612b85565b5090565b6000604051905090565b600080fd5b600080fd5b6000819050919050565b612bc881612bb5565b8114612bd357600080fd5b50565b600081359050612be581612bbf565b92915050565b600060208284031215612c0157612c00612bab565b5b6000612c0f84828501612bd6565b91505092915050565b612c2181612bb5565b82525050565b6000602082019050612c3c6000830184612c18565b92915050565b600081519050919050565b600082825260208201905092915050565b60005b83811015612c7c578082015181840152602081019050612c61565b83811115612c8b576000848401525b50505050565b6000601f19601f8301169050919050565b6000612cad82612c42565b612cb78185612c4d565b9350612cc7818560208601612c5e565b612cd081612c91565b840191505092915050565b60006020820190508181036000830152612cf58184612ca2565b905092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000612d2882612cfd565b9050919050565b612d3881612d1d565b8114612d4357600080fd5b50565b600081359050612d5581612d2f565b92915050565b600060208284031215612d7157612d70612bab565b5b6000612d7f84828501612d46565b91505092915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b612dbd81612bb5565b82525050565b6000612dcf8383612db4565b60208301905092915050565b6000602082019050919050565b6000612df382612d88565b612dfd8185612d93565b9350612e0883612da4565b8060005b83811015612e39578151612e208882612dc3565b9750612e2b83612ddb565b925050600181019050612e0c565b5085935050505092915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b600082825260208201905092915050565b6000612e8e82612c42565b612e988185612e72565b9350612ea8818560208601612c5e565b612eb181612c91565b840191505092915050565b6000612ec88383612e83565b905092915050565b6000602082019050919050565b6000612ee882612e46565b612ef28185612e51565b935083602082028501612f0485612e62565b8060005b85811015612f405784840389528151612f218582612ebc565b9450612f2c83612ed0565b925060208a01995050600181019050612f08565b50829750879550505050505092915050565b60006080820190508181036000830152612f6c8187612de8565b90508181036020830152612f808186612edd565b90508181036040830152612f948185612de8565b90508181036060830152612fa88184612de8565b905095945050505050565b60006020820190508181036000830152612fcd8184612edd565b905092915050565b60008115159050919050565b612fea81612fd5565b82525050565b60006020820190506130056000830184612fe1565b92915050565b600080fd5b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b61304d82612c91565b810181811067ffffffffffffffff8211171561306c5761306b613015565b5b80604052505050565b600061307f612ba1565b905061308b8282613044565b919050565b600067ffffffffffffffff8211156130ab576130aa613015565b5b6130b482612c91565b9050602081019050919050565b82818337600083830152505050565b60006130e36130de84613090565b613075565b9050828152602081018484840111156130ff576130fe613010565b5b61310a8482856130c1565b509392505050565b600082601f8301126131275761312661300b565b5b81356131378482602086016130d0565b91505092915050565b60006020828403121561315657613155612bab565b5b600082013567ffffffffffffffff81111561317457613173612bb0565b5b61318084828501613112565b91505092915050565b61319281612d1d565b82525050565b60006020820190506131ad6000830184613189565b92915050565b600080604083850312156131ca576131c9612bab565b5b60006131d885828601612d46565b925050602083013567ffffffffffffffff8111156131f9576131f8612bb0565b5b61320585828601613112565b9150509250929050565b600060c0820190506132246000830189612c18565b6132316020830188613189565b81810360408301526132438187612ca2565b90506132526060830186612c18565b61325f6080830185612c18565b61326c60a0830184612c18565b979650505050505050565b6000806000606084860312156132905761328f612bab565b5b600084013567ffffffffffffffff8111156132ae576132ad612bb0565b5b6132ba86828701613112565b93505060206132cb86828701612bd6565b92505060406132dc86828701612bd6565b9150509250925092565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b60038110613326576133256132e6565b5b50565b600081905061333782613315565b919050565b600061334782613329565b9050919050565b6133578161333c565b82525050565b6000602082019050613372600083018461334e565b92915050565b6000806040838503121561338f5761338e612bab565b5b600061339d85828601612bd6565b92505060206133ae85828601612bd6565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806133ff57607f821691505b60208210811415613413576134126133b8565b5b50919050565b7f4e6f7420796f7572206f72646572000000000000000000000000000000000000600082015250565b600061344f600e83612c4d565b915061345a82613419565b602082019050919050565b6000602082019050818103600083015261347e81613442565b9050919050565b600060e08201905061349a600083018a612c18565b6134a76020830189613189565b6134b46040830188613189565b81810360608301526134c68187612ca2565b90506134d56080830186612c18565b6134e260a0830185612c18565b6134ef60c0830184612c18565b98975050505050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061353582612bb5565b915061354083612bb5565b925082821015613553576135526134fb565b5b828203905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b60006135c782612bb5565b91506135d283612bb5565b9250826135e2576135e161358d565b5b828204905092915050565b60006135f882612bb5565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82141561362b5761362a6134fb565b5b600182019050919050565b600060608201905061364b6000830186613189565b6136586020830185612c18565b6136656040830184612c18565b949350505050565b600081905092915050565b60008190508160005260206000209050919050565b6000815461369a816133e7565b6136a4818661366d565b945060018216600081146136bf57600181146136d057613703565b60ff19831686528186019350613703565b6136d985613678565b60005b838110156136fb578154818901526001820191506020810190506136dc565b838801955050505b50505092915050565b6000613718828461368d565b915081905092915050565b600061372e82612bb5565b915061373983612bb5565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0382111561376e5761376d6134fb565b5b828201905092915050565b7f4974656d2069732063757272656e746c79206e6f7420616c6c6f776564000000600082015250565b60006137af601d83612c4d565b91506137ba82613779565b602082019050919050565b600060208201905081810360008301526137de816137a2565b9050919050565b600081905092915050565b60006137fb82612c42565b61380581856137e5565b9350613815818560208601612c5e565b80840191505092915050565b600061382d82846137f0565b915081905092915050565b7f52656475636520746865207175616e7469747900000000000000000000000000600082015250565b600061386e601383612c4d565b915061387982613838565b602082019050919050565b6000602082019050818103600083015261389d81613861565b9050919050565b60006138af82612bb5565b91506138ba83612bb5565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff04831182151516156138f3576138f26134fb565b5b828202905092915050565b7f596f75206e656564206d6f726520657468000000000000000000000000000000600082015250565b6000613934601183612c4d565b915061393f826138fe565b602082019050919050565b6000602082019050818103600083015261396381613927565b905091905056fea264697066735822122015576c06821582537fee32efdb2d0e7dde8ea10a0bdcc3f8d96f441b77e4f51264736f6c63430008080033",
  "deployedBytecode": "",
  "devdoc": {
    "author": "Abolaji",
    "kind": "dev",
    "methods": {},
    "title": "A contract for buying and selling items",
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 143,
        "contract": "contracts/Marketplace.sol:Marketplace",
        "label": "item",
        "offset": 0,
        "slot": "0",
        "type": "t_string_storage"
      },
      {
        "astId": 145,
        "contract": "contracts/Marketplace.sol:Marketplace",
        "label": "user",
        "offset": 0,
        "slot": "1",
        "type": "t_address_payable"
      },
      {
        "astId": 147,
        "contract": "contracts/Marketplace.sol:Marketplace",
        "label": "orderCount",
        "offset": 0,
        "slot": "2",
        "type": "t_uint256"
      },
      {
        "astId": 166,
        "contract": "contracts/Marketplace.sol:Marketplace",
        "label": "goods",
        "offset": 0,
        "slot": "3",
        "type": "t_mapping(t_address,t_mapping(t_string_memory_ptr,t_uint256))"
      },
      {
        "astId": 170,
        "contract": "contracts/Marketplace.sol:Marketplace",
        "label": "getBal",
        "offset": 0,
        "slot": "4",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 175,
        "contract": "contracts/Marketplace.sol:Marketplace",
        "label": "orders",
        "offset": 0,
        "slot": "5",
        "type": "t_mapping(t_uint256,t_struct(_order)160_storage)"
      },
      {
        "astId": 180,
        "contract": "contracts/Marketplace.sol:Marketplace",
        "label": "orderStatus",
        "offset": 0,
        "slot": "6",
        "type": "t_mapping(t_uint256,t_enum(ORDER_STATE)307)"
      },
      {
        "astId": 184,
        "contract": "contracts/Marketplace.sol:Marketplace",
        "label": "orderCancelled",
        "offset": 0,
        "slot": "7",
        "type": "t_mapping(t_uint256,t_bool)"
      },
      {
        "astId": 188,
        "contract": "contracts/Marketplace.sol:Marketplace",
        "label": "orderFilled",
        "offset": 0,
        "slot": "8",
        "type": "t_mapping(t_uint256,t_bool)"
      },
      {
        "astId": 192,
        "contract": "contracts/Marketplace.sol:Marketplace",
        "label": "orderCreated",
        "offset": 0,
        "slot": "9",
        "type": "t_mapping(t_uint256,t_bool)"
      },
      {
        "astId": 196,
        "contract": "contracts/Marketplace.sol:Marketplace",
        "label": "orderDelivered",
        "offset": 0,
        "slot": "10",
        "type": "t_mapping(t_uint256,t_bool)"
      },
      {
        "astId": 200,
        "contract": "contracts/Marketplace.sol:Marketplace",
        "label": "Buyers",
        "offset": 0,
        "slot": "11",
        "type": "t_mapping(t_uint256,t_address)"
      },
      {
        "astId": 204,
        "contract": "contracts/Marketplace.sol:Marketplace",
        "label": "filledAmount",
        "offset": 0,
        "slot": "12",
        "type": "t_mapping(t_uint256,t_uint256)"
      },
      {
        "astId": 208,
        "contract": "contracts/Marketplace.sol:Marketplace",
        "label": "filledQuantity",
        "offset": 0,
        "slot": "13",
        "type": "t_mapping(t_uint256,t_uint256)"
      },
      {
        "astId": 211,
        "contract": "contracts/Marketplace.sol:Marketplace",
        "label": "allowedItems",
        "offset": 0,
        "slot": "14",
        "type": "t_array(t_string_storage)dyn_storage"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_address_payable": {
        "encoding": "inplace",
        "label": "address payable",
        "numberOfBytes": "20"
      },
      "t_array(t_string_storage)dyn_storage": {
        "base": "t_string_storage",
        "encoding": "dynamic_array",
        "label": "string[]",
        "numberOfBytes": "32"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_enum(ORDER_STATE)307": {
        "encoding": "inplace",
        "label": "enum Marketplace.ORDER_STATE",
        "numberOfBytes": "1"
      },
      "t_mapping(t_address,t_mapping(t_string_memory_ptr,t_uint256))": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => mapping(string => uint256))",
        "numberOfBytes": "32",
        "value": "t_mapping(t_string_memory_ptr,t_uint256)"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_mapping(t_string_memory_ptr,t_uint256)": {
        "encoding": "mapping",
        "key": "t_string_memory_ptr",
        "label": "mapping(string => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_mapping(t_uint256,t_address)": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => address)",
        "numberOfBytes": "32",
        "value": "t_address"
      },
      "t_mapping(t_uint256,t_bool)": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => bool)",
        "numberOfBytes": "32",
        "value": "t_bool"
      },
      "t_mapping(t_uint256,t_enum(ORDER_STATE)307)": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => enum Marketplace.ORDER_STATE)",
        "numberOfBytes": "32",
        "value": "t_enum(ORDER_STATE)307"
      },
      "t_mapping(t_uint256,t_struct(_order)160_storage)": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => struct Marketplace._order)",
        "numberOfBytes": "32",
        "value": "t_struct(_order)160_storage"
      },
      "t_mapping(t_uint256,t_uint256)": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_string_memory_ptr": {
        "encoding": "bytes",
        "label": "string",
        "numberOfBytes": "32"
      },
      "t_string_storage": {
        "encoding": "bytes",
        "label": "string",
        "numberOfBytes": "32"
      },
      "t_struct(_order)160_storage": {
        "encoding": "inplace",
        "label": "struct Marketplace._order",
        "members": [
          {
            "astId": 149,
            "contract": "contracts/Marketplace.sol:Marketplace",
            "label": "id",
            "offset": 0,
            "slot": "0",
            "type": "t_uint256"
          },
          {
            "astId": 151,
            "contract": "contracts/Marketplace.sol:Marketplace",
            "label": "seller",
            "offset": 0,
            "slot": "1",
            "type": "t_address"
          },
          {
            "astId": 153,
            "contract": "contracts/Marketplace.sol:Marketplace",
            "label": "item",
            "offset": 0,
            "slot": "2",
            "type": "t_string_storage"
          },
          {
            "astId": 155,
            "contract": "contracts/Marketplace.sol:Marketplace",
            "label": "qtty_to_sell",
            "offset": 0,
            "slot": "3",
            "type": "t_uint256"
          },
          {
            "astId": 157,
            "contract": "contracts/Marketplace.sol:Marketplace",
            "label": "price",
            "offset": 0,
            "slot": "4",
            "type": "t_uint256"
          },
          {
            "astId": 159,
            "contract": "contracts/Marketplace.sol:Marketplace",
            "label": "timestamp",
            "offset": 0,
            "slot": "5",
            "type": "t_uint256"
          }
        ],
        "numberOfBytes": "192"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}