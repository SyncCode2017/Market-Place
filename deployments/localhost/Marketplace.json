{
  "address": "0x5FbDB2315678afecb367f032d93F642f64180aa3",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_feeAccount",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_feePercent",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "Marketplace__AlreadyAllowed",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "Marketplace__ItemNotAllowed",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "Marketplace__NotOwner",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "Marketplace__NotTheBuyer",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "Marketplace__NotTheSeller",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "Marketplace__NotYourOrder",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "Marketplace__ZeroAddress",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "Marketplace__ZeroBalance",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "seller",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "buyer",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "item",
          "type": "string"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "qtty_bought",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "price",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "timestamp",
          "type": "uint256"
        }
      ],
      "name": "CancelFilledOrder",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "seller",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "item",
          "type": "string"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "qtty_to_sell",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "price",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "timestamp",
          "type": "uint256"
        }
      ],
      "name": "CancelOpenOrder",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "seller",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "item",
          "type": "string"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "qtty_to_sell",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "price",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "timestamp",
          "type": "uint256"
        }
      ],
      "name": "OrderCreated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "seller",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "buyer",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "item",
          "type": "string"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "qtty_bought",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "price",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "timestamp",
          "type": "uint256"
        }
      ],
      "name": "OrderDelivered",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "seller",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "buyer",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "item",
          "type": "string"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "qtty_bought",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "price",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "timestamp",
          "type": "uint256"
        }
      ],
      "name": "OrderFilled",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "Withdraw",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "Buyers",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_id",
          "type": "uint256"
        }
      ],
      "name": "OrderReceived",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_item",
          "type": "string"
        }
      ],
      "name": "addAllowedItems",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "name": "allowedItems",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "balance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_id",
          "type": "uint256"
        }
      ],
      "name": "cancelFilledOrder",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_id",
          "type": "uint256"
        }
      ],
      "name": "cancelOpenOrder",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_item",
          "type": "string"
        }
      ],
      "name": "checkItemIsAllowed",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_id",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_quantity",
          "type": "uint256"
        }
      ],
      "name": "fillOrder",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "filledAmount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "filledQuantity",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "name": "goods",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "item",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_item",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "_quantity",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_price",
          "type": "uint256"
        }
      ],
      "name": "makeOrder",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "myBalance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "open_order",
      "outputs": [
        {
          "internalType": "uint256[]",
          "name": "idOrder",
          "type": "uint256[]"
        },
        {
          "internalType": "string[]",
          "name": "_item",
          "type": "string[]"
        },
        {
          "internalType": "uint256[]",
          "name": "_qty",
          "type": "uint256[]"
        },
        {
          "internalType": "uint256[]",
          "name": "_prc",
          "type": "uint256[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "orderCount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "orderCreated",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "orderDelivered",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "orderFilled",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "orderStatus",
      "outputs": [
        {
          "internalType": "enum Marketplace.ORDER_STATE",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "orders",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "seller",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "item",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "qtty_to_sell",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "price",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "timestamp",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_feeAccount",
          "type": "address"
        }
      ],
      "name": "setFeeAccount",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_feePercent",
          "type": "uint256"
        }
      ],
      "name": "setMarketFee",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdrawEther",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0x751888bf2a2fddc2c2e97f93b984ec7546bbd9b4e86ab28560a95890f488eae2",
  "receipt": {
    "to": null,
    "from": "0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266",
    "contractAddress": "0x5FbDB2315678afecb367f032d93F642f64180aa3",
    "transactionIndex": 0,
    "gasUsed": "3082230",
    "logsBloom": "0x
    "blockHash": "0x2d811162c424974402a1cfad097bd6e9b9ff6e2d0369ddfb367e731d90b06ea8",
    "transactionHash": "0x751888bf2a2fddc2c2e97f93b984ec7546bbd9b4e86ab28560a95890f488eae2",
    "logs": [],
    "blockNumber": 1,
    "cumulativeGasUsed": "3082230",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266",
    5
  ],
  "numDeployments": 1,
  "solcInputHash": "89acef66dd9e8f169919d081426bb1a7",
  "metadata": "{\"compiler\":{\"version\":\"0.8.8+commit.dddeac2f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_feeAccount\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_feePercent\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"Marketplace__AlreadyAllowed\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Marketplace__ItemNotAllowed\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Marketplace__NotOwner\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Marketplace__NotTheBuyer\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Marketplace__NotTheSeller\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Marketplace__NotYourOrder\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Marketplace__ZeroAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Marketplace__ZeroBalance\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"seller\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"buyer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"item\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"qtty_bought\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"CancelFilledOrder\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"seller\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"item\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"qtty_to_sell\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"CancelOpenOrder\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"seller\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"item\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"qtty_to_sell\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"OrderCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"seller\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"buyer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"item\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"qtty_bought\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"OrderDelivered\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"seller\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"buyer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"item\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"qtty_bought\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"OrderFilled\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Withdraw\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"Buyers\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_id\",\"type\":\"uint256\"}],\"name\":\"OrderReceived\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_item\",\"type\":\"string\"}],\"name\":\"addAllowedItems\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"allowedItems\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"balance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_id\",\"type\":\"uint256\"}],\"name\":\"cancelFilledOrder\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_id\",\"type\":\"uint256\"}],\"name\":\"cancelOpenOrder\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_item\",\"type\":\"string\"}],\"name\":\"checkItemIsAllowed\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_quantity\",\"type\":\"uint256\"}],\"name\":\"fillOrder\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"filledAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"filledQuantity\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"goods\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"item\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_item\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"_quantity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_price\",\"type\":\"uint256\"}],\"name\":\"makeOrder\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"myBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"open_order\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"idOrder\",\"type\":\"uint256[]\"},{\"internalType\":\"string[]\",\"name\":\"_item\",\"type\":\"string[]\"},{\"internalType\":\"uint256[]\",\"name\":\"_qty\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"_prc\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"orderCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"orderCreated\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"orderDelivered\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"orderFilled\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"orderStatus\",\"outputs\":[{\"internalType\":\"enum Marketplace.ORDER_STATE\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"orders\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"seller\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"item\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"qtty_to_sell\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_feeAccount\",\"type\":\"address\"}],\"name\":\"setFeeAccount\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_feePercent\",\"type\":\"uint256\"}],\"name\":\"setMarketFee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdrawEther\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Abolaji\",\"kind\":\"dev\",\"methods\":{},\"title\":\"A contract for buying and selling fungible items\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Marketplace.sol\":\"Marketplace\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (access/Ownable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    constructor() {\\n        _transferOwnership(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby removing any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0x24e0364e503a9bbde94c715d26573a76f14cd2a202d45f96f52134ab806b67b9\",\"license\":\"MIT\"},\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (security/ReentrancyGuard.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Contract module that helps prevent reentrant calls to a function.\\n *\\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\\n * available, which can be applied to functions to make sure there are no nested\\n * (reentrant) calls to them.\\n *\\n * Note that because there is a single `nonReentrant` guard, functions marked as\\n * `nonReentrant` may not call one another. This can be worked around by making\\n * those functions `private`, and then adding `external` `nonReentrant` entry\\n * points to them.\\n *\\n * TIP: If you would like to learn more about reentrancy and alternative ways\\n * to protect against it, check out our blog post\\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\\n */\\nabstract contract ReentrancyGuard {\\n    // Booleans are more expensive than uint256 or any type that takes up a full\\n    // word because each write operation emits an extra SLOAD to first read the\\n    // slot's contents, replace the bits taken up by the boolean, and then write\\n    // back. This is the compiler's defense against contract upgrades and\\n    // pointer aliasing, and it cannot be disabled.\\n\\n    // The values being non-zero value makes deployment a bit more expensive,\\n    // but in exchange the refund on every call to nonReentrant will be lower in\\n    // amount. Since refunds are capped to a percentage of the total\\n    // transaction's gas, it is best to keep them low in cases like this one, to\\n    // increase the likelihood of the full refund coming into effect.\\n    uint256 private constant _NOT_ENTERED = 1;\\n    uint256 private constant _ENTERED = 2;\\n\\n    uint256 private _status;\\n\\n    constructor() {\\n        _status = _NOT_ENTERED;\\n    }\\n\\n    /**\\n     * @dev Prevents a contract from calling itself, directly or indirectly.\\n     * Calling a `nonReentrant` function from another `nonReentrant`\\n     * function is not supported. It is possible to prevent this from happening\\n     * by making the `nonReentrant` function external, and making it call a\\n     * `private` function that does the actual work.\\n     */\\n    modifier nonReentrant() {\\n        // On the first call to nonReentrant, _notEntered will be true\\n        require(_status != _ENTERED, \\\"ReentrancyGuard: reentrant call\\\");\\n\\n        // Any calls to nonReentrant after this point will fail\\n        _status = _ENTERED;\\n\\n        _;\\n\\n        // By storing the original value once again, a refund is triggered (see\\n        // https://eips.ethereum.org/EIPS/eip-2200)\\n        _status = _NOT_ENTERED;\\n    }\\n}\\n\",\"keccak256\":\"0x0e9621f60b2faabe65549f7ed0f24e8853a45c1b7990d47e8160e523683f3935\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\"},\"contracts/Marketplace.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.8;\\n\\nimport \\\"@openzeppelin/contracts/access/Ownable.sol\\\";\\nimport \\\"@openzeppelin/contracts/security/ReentrancyGuard.sol\\\";\\n\\nerror Marketplace__NewItemExist();\\nerror Marketplace__NotOwner();\\nerror Marketplace__NotYourOrder();\\nerror Marketplace__ZeroBalance();\\nerror Marketplace__NotTheSeller();\\nerror Marketplace__ItemNotAllowed();\\nerror Marketplace__NotTheBuyer();\\nerror Marketplace__AlreadyAllowed();\\nerror Marketplace__ZeroAddress();\\n\\n/** @title A contract for buying and selling fungible items\\n *  @author Abolaji\\n *  @dev\\n */\\n\\ncontract Marketplace is ReentrancyGuard {\\n    //Variables\\n    address private feeAccount;\\n    uint256 private feePercent;\\n    address private i_owner;\\n    string public item;\\n    address payable internal user;\\n    uint256 public orderCount;\\n\\n    struct _order {\\n        uint256 id;\\n        address seller;\\n        string item;\\n        uint256 qtty_to_sell;\\n        uint256 price;\\n        uint256 timestamp;\\n    }\\n\\n    mapping(address => mapping(string => uint256)) public goods;\\n\\n    // store the order\\n    mapping(address => uint256) public balance;\\n    mapping(uint256 => _order) public orders;\\n    mapping(uint256 => ORDER_STATE) public orderStatus;\\n    mapping(uint256 => bool) public orderFilled;\\n    mapping(uint256 => bool) public orderCreated;\\n    mapping(uint256 => bool) public orderDelivered;\\n    mapping(uint256 => address) public Buyers;\\n    mapping(uint256 => uint256) public filledAmount;\\n    mapping(uint256 => uint256) public filledQuantity;\\n    mapping(string => bool) public allowedItems;\\n\\n    //Events\\n    event Withdraw(address indexed user, uint256 indexed amount);\\n    event OrderCreated(\\n        uint256 indexed id,\\n        address indexed seller,\\n        string item,\\n        uint256 indexed qtty_to_sell,\\n        uint256 price,\\n        uint256 timestamp\\n    );\\n    event OrderFilled(\\n        uint256 indexed id,\\n        address indexed seller,\\n        address buyer,\\n        string item,\\n        uint256 indexed qtty_bought,\\n        uint256 price,\\n        uint256 timestamp\\n    );\\n    event OrderDelivered(\\n        uint256 indexed id,\\n        address indexed seller,\\n        address buyer,\\n        string item,\\n        uint256 indexed qtty_bought,\\n        uint256 price,\\n        uint256 timestamp\\n    );\\n    event CancelOpenOrder(\\n        uint256 indexed id,\\n        address indexed seller,\\n        string item,\\n        uint256 indexed qtty_to_sell,\\n        uint256 price,\\n        uint256 timestamp\\n    );\\n    event CancelFilledOrder(\\n        uint256 indexed id,\\n        address indexed seller,\\n        address buyer,\\n        string item,\\n        uint256 indexed qtty_bought,\\n        uint256 price,\\n        uint256 timestamp\\n    );\\n\\n    enum ORDER_STATE {\\n        OPEN,\\n        FILLED,\\n        CLOSED\\n    }\\n\\n    constructor(address _feeAccount, uint256 _feePercent) {\\n        feeAccount = _feeAccount;\\n        feePercent = _feePercent;\\n        i_owner = msg.sender;\\n    }\\n\\n    modifier onlyOwner() {\\n        if (msg.sender != i_owner) revert Marketplace__NotOwner();\\n        _;\\n    }\\n\\n    modifier onlySeller(uint256 _id) {\\n        _order memory order = orders[_id];\\n        if (msg.sender != order.seller) revert Marketplace__NotTheSeller();\\n        _;\\n    }\\n\\n    modifier onlyBuyer(uint256 _id) {\\n        address _buyer = Buyers[_id];\\n        if (msg.sender != _buyer) revert Marketplace__NotTheBuyer();\\n        _;\\n    }\\n\\n    modifier noZeroAddress(address newAddress) {\\n        if (newAddress == address(0)) revert Marketplace__ZeroAddress();\\n        _;\\n    }\\n\\n    function setFeeAccount(\\n        address _feeAccount\\n    ) external onlyOwner noZeroAddress(_feeAccount) {\\n        feeAccount = _feeAccount;\\n    }\\n\\n    function setMarketFee(uint256 _feePercent) external onlyOwner {\\n        feePercent = _feePercent;\\n    }\\n\\n    function withdrawEther() external nonReentrant {\\n        uint256 _amount = balance[msg.sender];\\n        if (_amount <= 0) {\\n            revert Marketplace__ZeroBalance();\\n        }\\n        user = payable(msg.sender);\\n        balance[msg.sender] = 0;\\n        user.transfer(_amount);\\n        emit Withdraw(msg.sender, _amount);\\n    }\\n\\n    // Create an order as a seller\\n    function makeOrder(\\n        string memory _item,\\n        uint256 _quantity,\\n        uint256 _price\\n    ) public {\\n        if (!allowedItems[_item]) revert Marketplace__ItemNotAllowed();\\n        orderCount += 1;\\n        orders[orderCount] = _order(\\n            orderCount,\\n            msg.sender,\\n            _item,\\n            _quantity,\\n            _price,\\n            block.timestamp\\n        );\\n        orderStatus[orderCount] = ORDER_STATE.OPEN;\\n        goods[msg.sender][_item] = _quantity;\\n        emit OrderCreated(\\n            orderCount,\\n            msg.sender,\\n            _item,\\n            _quantity,\\n            _price,\\n            block.timestamp\\n        );\\n    }\\n\\n    // Fill an order as a buyer\\n    function fillOrder(uint256 _id, uint256 _quantity) public payable {\\n        require(_id > 0 && _id <= orderCount);\\n        require(orderStatus[_id] == ORDER_STATE.OPEN);\\n\\n        // Fetch the order\\n        _order memory order = orders[_id];\\n        require(_quantity <= order.qtty_to_sell, \\\"Reduce the quantity\\\");\\n        uint256 amount = _quantity * order.price;\\n        require(msg.value == amount, \\\"You need more eth\\\");\\n\\n        address _buyer = msg.sender;\\n        _orderBond(_id, _quantity);\\n\\n        // Mark order as filled\\n        orderFilled[_id] = true;\\n        orderStatus[_id] = ORDER_STATE.FILLED;\\n        Buyers[_id] = _buyer;\\n        filledAmount[_id] = amount;\\n        filledQuantity[_id] = _quantity;\\n\\n        emit OrderFilled(\\n            _id,\\n            order.seller,\\n            _buyer,\\n            order.item,\\n            _quantity,\\n            order.price,\\n            block.timestamp\\n        );\\n    }\\n\\n    //Getting orders that are still available for buying\\n    function open_order()\\n        public\\n        view\\n        returns (\\n            uint256[] memory idOrder,\\n            string[] memory _item,\\n            uint256[] memory _qty,\\n            uint256[] memory _prc\\n        )\\n    {\\n        idOrder = new uint256[](orderCount);\\n        _item = new string[](orderCount);\\n        _qty = new uint256[](orderCount);\\n        _prc = new uint256[](orderCount);\\n        for (uint256 i = 1; i <= orderCount; i++) {\\n            if (orderStatus[i] == ORDER_STATE.OPEN) {\\n                idOrder[i - 1] = orders[i].id;\\n                _item[i - 1] = orders[i].item;\\n                _qty[i - 1] = orders[i].qtty_to_sell;\\n                _prc[i - 1] = orders[i].price / (10 ** 15);\\n            }\\n        }\\n        return (idOrder, _item, _qty, _prc);\\n    }\\n\\n    // When the buyer confirms the receipt of the items, the money is released to the seller\\n    function OrderReceived(uint256 _id) public onlyBuyer(_id) {\\n        address _buyer = Buyers[_id];\\n        _order memory order = orders[_id];\\n        require(orderStatus[_id] == ORDER_STATE.FILLED);\\n        uint256 amount = filledAmount[_id];\\n        uint256 quantity = filledQuantity[_id];\\n\\n        _orderCompleted(_id, amount);\\n        orderStatus[_id] = ORDER_STATE.CLOSED;\\n        emit OrderDelivered(\\n            _id,\\n            order.seller,\\n            _buyer,\\n            order.item,\\n            quantity,\\n            order.price,\\n            block.timestamp\\n        );\\n        delete (orders[_id]);\\n    }\\n\\n    function cancelOpenOrder(uint256 _id) public onlySeller(_id) {\\n        _order memory order = orders[_id];\\n        require(orderStatus[_id] == ORDER_STATE.OPEN);\\n\\n        emit CancelOpenOrder(\\n            _id,\\n            order.seller,\\n            order.item,\\n            order.qtty_to_sell,\\n            order.price,\\n            block.timestamp\\n        );\\n        delete (orders[_id]);\\n    }\\n\\n    function cancelFilledOrder(uint256 _id) public {\\n        _order memory order = orders[_id];\\n        address _buyer = Buyers[_id];\\n        if (order.seller != msg.sender && _buyer != msg.sender)\\n            revert Marketplace__NotYourOrder();\\n        require(orderStatus[_id] == ORDER_STATE.FILLED);\\n        uint256 _amount = filledAmount[_id];\\n        uint256 _quantity = filledQuantity[_id];\\n\\n        balance[_buyer] += _amount;\\n        goods[msg.sender][order.item] += _quantity;\\n        emit CancelFilledOrder(\\n            _id,\\n            order.seller,\\n            _buyer,\\n            order.item,\\n            _quantity,\\n            order.price,\\n            block.timestamp\\n        );\\n        delete (orders[_id]);\\n    }\\n\\n    function _orderBond(uint256 _id, uint256 _quantity) internal {\\n        _order memory order = orders[_id];\\n        // place order\\n        goods[order.seller][order.item] -= _quantity;\\n    }\\n\\n    function _orderCompleted(uint256 _id, uint256 _amount) internal {\\n        _order memory order = orders[_id];\\n        _amount = _amount - ((feePercent * _amount) / 100);\\n\\n        balance[order.seller] += _amount;\\n        balance[feeAccount] += ((feePercent * _amount) / 100);\\n    }\\n\\n    function addAllowedItems(string memory _item) public onlyOwner {\\n        if (allowedItems[_item]) revert Marketplace__AlreadyAllowed();\\n        allowedItems[_item] = true;\\n    }\\n\\n    function checkItemIsAllowed(\\n        string memory _item\\n    ) public view returns (bool) {\\n        return allowedItems[_item];\\n    }\\n\\n    function myBalance() public view returns (uint256) {\\n        return balance[msg.sender];\\n    }\\n}\\n\",\"keccak256\":\"0xee82b0a964d87fd804c36158196fe38acaca33f25972c54243b3f32d3b50d8aa\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x60806040523480156200001157600080fd5b506040516200370138038062003701833981810160405281019062000037919062000175565b600160008190555081600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508060028190555033600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050620001bc565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006200010282620000d5565b9050919050565b6200011481620000f5565b81146200012057600080fd5b50565b600081519050620001348162000109565b92915050565b6000819050919050565b6200014f816200013a565b81146200015b57600080fd5b50565b6000815190506200016f8162000144565b92915050565b600080604083850312156200018f576200018e620000d0565b5b60006200019f8582860162000123565b9250506020620001b2858286016200015e565b9150509250929050565b61353580620001cc6000396000f3fe6080604052600436106101665760003560e01c8063a443df94116100d1578063c94c2b8d1161008a578063dbdea44c11610064578063dbdea44c1461056b578063e3d670d7146105a8578063e742a182146105e5578063f2a4a82e1461062257610166565b8063c94c2b8d146104dc578063cb3968b514610519578063d55a7bcb1461054257610166565b8063a443df94146103b0578063a85c38ef146103ed578063a8e87b8a1461042f578063bff4945014610458578063c37dfc5b14610495578063c9116b69146104b157610166565b806346767bc41161012357806346767bc4146102905780634a93e0da146102cd5780634b023cf81461030a5780637362377b14610333578063812538e11461034a5780639b40ae7f1461037357610166565b80630da1e3501461016b5780631df9ccaa146101945780632453ffa8146101d157806326b825d2146101fc578063349eb8d014610225578063364315dd14610262575b600080fd5b34801561017757600080fd5b50610192600480360381019061018d91906128e7565b61064d565b005b3480156101a057600080fd5b506101bb60048036038101906101b691906128e7565b6109f4565b6040516101c89190612923565b60405180910390f35b3480156101dd57600080fd5b506101e6610a0c565b6040516101f39190612923565b60405180910390f35b34801561020857600080fd5b50610223600480360381019061021e91906128e7565b610a12565b005b34801561023157600080fd5b5061024c60048036038101906102479190612a84565b610aa3565b6040516102599190612ae8565b60405180910390f35b34801561026e57600080fd5b50610277610ad9565b6040516102879493929190612d0b565b60405180910390f35b34801561029c57600080fd5b506102b760048036038101906102b29190612a84565b610e31565b6040516102c49190612ae8565b60405180910390f35b3480156102d957600080fd5b506102f460048036038101906102ef91906128e7565b610e66565b6040516103019190612ae8565b60405180910390f35b34801561031657600080fd5b50610331600480360381019061032c9190612dca565b610e86565b005b34801561033f57600080fd5b50610348610fba565b005b34801561035657600080fd5b50610371600480360381019061036c91906128e7565b6111c4565b005b34801561037f57600080fd5b5061039a60048036038101906103959190612df7565b6115ba565b6040516103a79190612923565b60405180910390f35b3480156103bc57600080fd5b506103d760048036038101906103d291906128e7565b6115f5565b6040516103e49190612e62565b60405180910390f35b3480156103f957600080fd5b50610414600480360381019061040f91906128e7565b611628565b60405161042696959493929190612ec7565b60405180910390f35b34801561043b57600080fd5b5061045660048036038101906104519190612f2f565b61170c565b005b34801561046457600080fd5b5061047f600480360381019061047a91906128e7565b61196a565b60405161048c9190613015565b60405180910390f35b6104af60048036038101906104aa9190613030565b61198a565b005b3480156104bd57600080fd5b506104c6611d27565b6040516104d39190612923565b60405180910390f35b3480156104e857600080fd5b5061050360048036038101906104fe91906128e7565b611d6e565b6040516105109190612ae8565b60405180910390f35b34801561052557600080fd5b50610540600480360381019061053b9190612a84565b611d8e565b005b34801561054e57600080fd5b50610569600480360381019061056491906128e7565b611eb2565b005b34801561057757600080fd5b50610592600480360381019061058d91906128e7565b6122e2565b60405161059f9190612923565b60405180910390f35b3480156105b457600080fd5b506105cf60048036038101906105ca9190612dca565b6122fa565b6040516105dc9190612923565b60405180910390f35b3480156105f157600080fd5b5061060c600480360381019061060791906128e7565b612312565b6040516106199190612ae8565b60405180910390f35b34801561062e57600080fd5b50610637612332565b6040516106449190613070565b60405180910390f35b806000600e600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146106eb576040517f9c42fcff00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000600e600085815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690506000600960008681526020019081526020016000206040518060c0016040529081600082015481526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016002820180546107b3906130c1565b80601f01602080910402602001604051908101604052809291908181526020018280546107df906130c1565b801561082c5780601f106108015761010080835404028352916020019161082c565b820191906000526020600020905b81548152906001019060200180831161080f57829003601f168201915b50505050508152602001600382015481526020016004820154815260200160058201548152505090506001600281111561086957610868612f9e565b5b600a600087815260200190815260200160002060009054906101000a900460ff16600281111561089c5761089b612f9e565b5b146108a657600080fd5b6000600f60008781526020019081526020016000205490506000601060008881526020019081526020016000205490506108e087836123c0565b6002600a600089815260200190815260200160002060006101000a81548160ff0219169083600281111561091757610916612f9e565b5b021790555080836020015173ffffffffffffffffffffffffffffffffffffffff16887f7dfc2e96d4e9bfa63e26f3d2a2c37873074e8ad79d74ea908e97c8ae7d796a9787876040015188608001514260405161097694939291906130f3565b60405180910390a4600960008881526020019081526020016000206000808201600090556001820160006101000a81549073ffffffffffffffffffffffffffffffffffffffff02191690556002820160006109d191906127ba565b600382016000905560048201600090556005820160009055505050505050505050565b600f6020528060005260406000206000915090505481565b60065481565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610a99576040517fbf91ead800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8060028190555050565b6011818051602081018201805184825260208301602085012081835280955050505050506000915054906101000a900460ff1681565b60608060608060065467ffffffffffffffff811115610afb57610afa612959565b5b604051908082528060200260200182016040528015610b295781602001602082028036833780820191505090505b50935060065467ffffffffffffffff811115610b4857610b47612959565b5b604051908082528060200260200182016040528015610b7b57816020015b6060815260200190600190039081610b665790505b50925060065467ffffffffffffffff811115610b9a57610b99612959565b5b604051908082528060200260200182016040528015610bc85781602001602082028036833780820191505090505b50915060065467ffffffffffffffff811115610be757610be6612959565b5b604051908082528060200260200182016040528015610c155781602001602082028036833780820191505090505b5090506000600190505b6006548111610e2a5760006002811115610c3c57610c3b612f9e565b5b600a600083815260200190815260200160002060009054906101000a900460ff166002811115610c6f57610c6e612f9e565b5b1415610e1757600960008281526020019081526020016000206000015485600183610c9a919061316e565b81518110610cab57610caa6131a2565b5b602002602001018181525050600960008281526020019081526020016000206002018054610cd8906130c1565b80601f0160208091040260200160405190810160405280929190818152602001828054610d04906130c1565b8015610d515780601f10610d2657610100808354040283529160200191610d51565b820191906000526020600020905b815481529060010190602001808311610d3457829003601f168201915b505050505084600183610d64919061316e565b81518110610d7557610d746131a2565b5b6020026020010181905250600960008281526020019081526020016000206003015483600183610da5919061316e565b81518110610db657610db56131a2565b5b60200260200101818152505066038d7ea4c680006009600083815260200190815260200160002060040154610deb9190613200565b82600183610df9919061316e565b81518110610e0a57610e096131a2565b5b6020026020010181815250505b8080610e2290613231565b915050610c1f565b5090919293565b6000601182604051610e4391906132b6565b908152602001604051809103902060009054906101000a900460ff169050919050565b600b6020528060005260406000206000915054906101000a900460ff1681565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610f0d576040517fbf91ead800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b80600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610f75576040517fa9aead4700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b81600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050565b60026000541415611000576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ff790613319565b60405180910390fd5b60026000819055506000600860003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905060008111611086576040517f4f614e8f00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b33600560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506000600860003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f19350505050158015611174573d6000803e3d6000fd5b50803373ffffffffffffffffffffffffffffffffffffffff167f884edad9ce6fa2440d8a54cc123490eb96d2768479d49ff9c7366125a942436460405160405180910390a3506001600081905550565b806000600960008381526020019081526020016000206040518060c0016040529081600082015481526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600282018054611255906130c1565b80601f0160208091040260200160405190810160405280929190818152602001828054611281906130c1565b80156112ce5780601f106112a3576101008083540402835291602001916112ce565b820191906000526020600020905b8154815290600101906020018083116112b157829003601f168201915b5050505050815260200160038201548152602001600482015481526020016005820154815250509050806020015173ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614611360576040517fd32e6c7300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000600960008581526020019081526020016000206040518060c0016040529081600082015481526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016002820180546113f0906130c1565b80601f016020809104026020016040519081016040528092919081815260200182805461141c906130c1565b80156114695780601f1061143e57610100808354040283529160200191611469565b820191906000526020600020905b81548152906001019060200180831161144c57829003601f168201915b5050505050815260200160038201548152602001600482015481526020016005820154815250509050600060028111156114a6576114a5612f9e565b5b600a600086815260200190815260200160002060009054906101000a900460ff1660028111156114d9576114d8612f9e565b5b146114e357600080fd5b8060600151816020015173ffffffffffffffffffffffffffffffffffffffff16857f605e46eb1441c0674ff6584b5ea1ba9a7f5d53198deaaf2a04338b577b38ab3b846040015185608001514260405161153f93929190613339565b60405180910390a4600960008581526020019081526020016000206000808201600090556001820160006101000a81549073ffffffffffffffffffffffffffffffffffffffff021916905560028201600061159a91906127ba565b600382016000905560048201600090556005820160009055505050505050565b600760205281600052604060002081805160208101820180518482526020830160208501208183528095505050505050600091509150505481565b600e6020528060005260406000206000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60096020528060005260406000206000915090508060000154908060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690806002018054611677906130c1565b80601f01602080910402602001604051908101604052809291908181526020018280546116a3906130c1565b80156116f05780601f106116c5576101008083540402835291602001916116f0565b820191906000526020600020905b8154815290600101906020018083116116d357829003601f168201915b5050505050908060030154908060040154908060050154905086565b60118360405161171c91906132b6565b908152602001604051809103902060009054906101000a900460ff1661176e576040517f4458e17f00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6001600660008282546117819190613377565b925050819055506040518060c0016040528060065481526020013373ffffffffffffffffffffffffffffffffffffffff168152602001848152602001838152602001828152602001428152506009600060065481526020019081526020016000206000820151816000015560208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550604082015181600201908051906020019061184f9291906127fa565b50606082015181600301556080820151816004015560a082015181600501559050506000600a6000600654815260200190815260200160002060006101000a81548160ff021916908360028111156118aa576118a9612f9e565b5b021790555081600760003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020846040516118fd91906132b6565b908152602001604051809103902081905550813373ffffffffffffffffffffffffffffffffffffffff166006547f9193cdda35362c821e3d4d240a5fcb0093ad192ac99028d18e5dff3414ee787186854260405161195d93929190613339565b60405180910390a4505050565b600a6020528060005260406000206000915054906101000a900460ff1681565b60008211801561199c57506006548211155b6119a557600080fd5b600060028111156119b9576119b8612f9e565b5b600a600084815260200190815260200160002060009054906101000a900460ff1660028111156119ec576119eb612f9e565b5b146119f657600080fd5b6000600960008481526020019081526020016000206040518060c0016040529081600082015481526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600282018054611a86906130c1565b80601f0160208091040260200160405190810160405280929190818152602001828054611ab2906130c1565b8015611aff5780601f10611ad457610100808354040283529160200191611aff565b820191906000526020600020905b815481529060010190602001808311611ae257829003601f168201915b50505050508152602001600382015481526020016004820154815260200160058201548152505090508060600151821115611b6f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611b6690613419565b60405180910390fd5b6000816080015183611b819190613439565b9050803414611bc5576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611bbc906134df565b60405180910390fd5b6000339050611bd48585612609565b6001600b600087815260200190815260200160002060006101000a81548160ff0219169083151502179055506001600a600087815260200190815260200160002060006101000a81548160ff02191690836002811115611c3757611c36612f9e565b5b021790555080600e600087815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555081600f60008781526020019081526020016000208190555083601060008781526020019081526020016000208190555083836020015173ffffffffffffffffffffffffffffffffffffffff16867f7717c4c0039d1e3b8c4e5fea24aea887c3b05f8f7f1e5fe6f041c5b4b58d94a1848760400151886080015142604051611d1894939291906130f3565b60405180910390a45050505050565b6000600860003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905090565b600c6020528060005260406000206000915054906101000a900460ff1681565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614611e15576040517fbf91ead800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b601181604051611e2591906132b6565b908152602001604051809103902060009054906101000a900460ff1615611e78576040517f3068858800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6001601182604051611e8a91906132b6565b908152602001604051809103902060006101000a81548160ff02191690831515021790555050565b6000600960008381526020019081526020016000206040518060c0016040529081600082015481526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600282018054611f42906130c1565b80601f0160208091040260200160405190810160405280929190818152602001828054611f6e906130c1565b8015611fbb5780601f10611f9057610100808354040283529160200191611fbb565b820191906000526020600020905b815481529060010190602001808311611f9e57829003601f168201915b50505050508152602001600382015481526020016004820154815260200160058201548152505090506000600e600084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690503373ffffffffffffffffffffffffffffffffffffffff16826020015173ffffffffffffffffffffffffffffffffffffffff161415801561208857503373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614155b156120bf576040517f3df1b3c200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600160028111156120d3576120d2612f9e565b5b600a600085815260200190815260200160002060009054906101000a900460ff16600281111561210657612105612f9e565b5b1461211057600080fd5b6000600f600085815260200190815260200160002054905060006010600086815260200190815260200160002054905081600860008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825461218f9190613377565b9250508190555080600760003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002085604001516040516121e891906132b6565b908152602001604051809103902060008282546122059190613377565b9250508190555080846020015173ffffffffffffffffffffffffffffffffffffffff16867f3f4cd73070ce25691a6ac562de84d1efbdfbb91a5f68c38178f1182736856b0986886040015189608001514260405161226694939291906130f3565b60405180910390a4600960008681526020019081526020016000206000808201600090556001820160006101000a81549073ffffffffffffffffffffffffffffffffffffffff02191690556002820160006122c191906127ba565b60038201600090556004820160009055600582016000905550505050505050565b60106020528060005260406000206000915090505481565b60086020528060005260406000206000915090505481565b600d6020528060005260406000206000915054906101000a900460ff1681565b6004805461233f906130c1565b80601f016020809104026020016040519081016040528092919081815260200182805461236b906130c1565b80156123b85780601f1061238d576101008083540402835291602001916123b8565b820191906000526020600020905b81548152906001019060200180831161239b57829003601f168201915b505050505081565b6000600960008481526020019081526020016000206040518060c0016040529081600082015481526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600282018054612450906130c1565b80601f016020809104026020016040519081016040528092919081815260200182805461247c906130c1565b80156124c95780601f1061249e576101008083540402835291602001916124c9565b820191906000526020600020905b8154815290600101906020018083116124ac57829003601f168201915b50505050508152602001600382015481526020016004820154815260200160058201548152505090506064826002546125029190613439565b61250c9190613200565b82612517919061316e565b91508160086000836020015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825461256c9190613377565b925050819055506064826002546125839190613439565b61258d9190613200565b60086000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546125fd9190613377565b92505081905550505050565b6000600960008481526020019081526020016000206040518060c0016040529081600082015481526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600282018054612699906130c1565b80601f01602080910402602001604051908101604052809291908181526020018280546126c5906130c1565b80156127125780601f106126e757610100808354040283529160200191612712565b820191906000526020600020905b8154815290600101906020018083116126f557829003601f168201915b50505050508152602001600382015481526020016004820154815260200160058201548152505090508160076000836020015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020826040015160405161279191906132b6565b908152602001604051809103902060008282546127ae919061316e565b92505081905550505050565b5080546127c6906130c1565b6000825580601f106127d857506127f7565b601f0160209004906000526020600020908101906127f69190612880565b5b50565b828054612806906130c1565b90600052602060002090601f016020900481019282612828576000855561286f565b82601f1061284157805160ff191683800117855561286f565b8280016001018555821561286f579182015b8281111561286e578251825591602001919060010190612853565b5b50905061287c9190612880565b5090565b5b80821115612899576000816000905550600101612881565b5090565b6000604051905090565b600080fd5b600080fd5b6000819050919050565b6128c4816128b1565b81146128cf57600080fd5b50565b6000813590506128e1816128bb565b92915050565b6000602082840312156128fd576128fc6128a7565b5b600061290b848285016128d2565b91505092915050565b61291d816128b1565b82525050565b60006020820190506129386000830184612914565b92915050565b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b61299182612948565b810181811067ffffffffffffffff821117156129b0576129af612959565b5b80604052505050565b60006129c361289d565b90506129cf8282612988565b919050565b600067ffffffffffffffff8211156129ef576129ee612959565b5b6129f882612948565b9050602081019050919050565b82818337600083830152505050565b6000612a27612a22846129d4565b6129b9565b905082815260208101848484011115612a4357612a42612943565b5b612a4e848285612a05565b509392505050565b600082601f830112612a6b57612a6a61293e565b5b8135612a7b848260208601612a14565b91505092915050565b600060208284031215612a9a57612a996128a7565b5b600082013567ffffffffffffffff811115612ab857612ab76128ac565b5b612ac484828501612a56565b91505092915050565b60008115159050919050565b612ae281612acd565b82525050565b6000602082019050612afd6000830184612ad9565b92915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b612b38816128b1565b82525050565b6000612b4a8383612b2f565b60208301905092915050565b6000602082019050919050565b6000612b6e82612b03565b612b788185612b0e565b9350612b8383612b1f565b8060005b83811015612bb4578151612b9b8882612b3e565b9750612ba683612b56565b925050600181019050612b87565b5085935050505092915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b600081519050919050565b600082825260208201905092915050565b60005b83811015612c27578082015181840152602081019050612c0c565b83811115612c36576000848401525b50505050565b6000612c4782612bed565b612c518185612bf8565b9350612c61818560208601612c09565b612c6a81612948565b840191505092915050565b6000612c818383612c3c565b905092915050565b6000602082019050919050565b6000612ca182612bc1565b612cab8185612bcc565b935083602082028501612cbd85612bdd565b8060005b85811015612cf95784840389528151612cda8582612c75565b9450612ce583612c89565b925060208a01995050600181019050612cc1565b50829750879550505050505092915050565b60006080820190508181036000830152612d258187612b63565b90508181036020830152612d398186612c96565b90508181036040830152612d4d8185612b63565b90508181036060830152612d618184612b63565b905095945050505050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000612d9782612d6c565b9050919050565b612da781612d8c565b8114612db257600080fd5b50565b600081359050612dc481612d9e565b92915050565b600060208284031215612de057612ddf6128a7565b5b6000612dee84828501612db5565b91505092915050565b60008060408385031215612e0e57612e0d6128a7565b5b6000612e1c85828601612db5565b925050602083013567ffffffffffffffff811115612e3d57612e3c6128ac565b5b612e4985828601612a56565b9150509250929050565b612e5c81612d8c565b82525050565b6000602082019050612e776000830184612e53565b92915050565b600082825260208201905092915050565b6000612e9982612bed565b612ea38185612e7d565b9350612eb3818560208601612c09565b612ebc81612948565b840191505092915050565b600060c082019050612edc6000830189612914565b612ee96020830188612e53565b8181036040830152612efb8187612e8e565b9050612f0a6060830186612914565b612f176080830185612914565b612f2460a0830184612914565b979650505050505050565b600080600060608486031215612f4857612f476128a7565b5b600084013567ffffffffffffffff811115612f6657612f656128ac565b5b612f7286828701612a56565b9350506020612f83868287016128d2565b9250506040612f94868287016128d2565b9150509250925092565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b60038110612fde57612fdd612f9e565b5b50565b6000819050612fef82612fcd565b919050565b6000612fff82612fe1565b9050919050565b61300f81612ff4565b82525050565b600060208201905061302a6000830184613006565b92915050565b60008060408385031215613047576130466128a7565b5b6000613055858286016128d2565b9250506020613066858286016128d2565b9150509250929050565b6000602082019050818103600083015261308a8184612e8e565b905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806130d957607f821691505b602082108114156130ed576130ec613092565b5b50919050565b60006080820190506131086000830187612e53565b818103602083015261311a8186612e8e565b90506131296040830185612914565b6131366060830184612914565b95945050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000613179826128b1565b9150613184836128b1565b9250828210156131975761319661313f565b5b828203905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b600061320b826128b1565b9150613216836128b1565b925082613226576132256131d1565b5b828204905092915050565b600061323c826128b1565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82141561326f5761326e61313f565b5b600182019050919050565b600081905092915050565b600061329082612bed565b61329a818561327a565b93506132aa818560208601612c09565b80840191505092915050565b60006132c28284613285565b915081905092915050565b7f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00600082015250565b6000613303601f83612e7d565b915061330e826132cd565b602082019050919050565b60006020820190508181036000830152613332816132f6565b9050919050565b600060608201905081810360008301526133538186612e8e565b90506133626020830185612914565b61336f6040830184612914565b949350505050565b6000613382826128b1565b915061338d836128b1565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038211156133c2576133c161313f565b5b828201905092915050565b7f52656475636520746865207175616e7469747900000000000000000000000000600082015250565b6000613403601383612e7d565b915061340e826133cd565b602082019050919050565b60006020820190508181036000830152613432816133f6565b9050919050565b6000613444826128b1565b915061344f836128b1565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff04831182151516156134885761348761313f565b5b828202905092915050565b7f596f75206e656564206d6f726520657468000000000000000000000000000000600082015250565b60006134c9601183612e7d565b91506134d482613493565b602082019050919050565b600060208201905081810360008301526134f8816134bc565b905091905056fea2646970667358221220e1cf46d40ec00654b7d253e20531cb7b4909869b0502d6faf6310648e702a61f64736f6c63430008080033",
  "deployedBytecode": "0x6080604052600436106101665760003560e01c8063a443df94116100d1578063c94c2b8d1161008a578063dbdea44c11610064578063dbdea44c1461056b578063e3d670d7146105a8578063e742a182146105e5578063f2a4a82e1461062257610166565b8063c94c2b8d146104dc578063cb3968b514610519578063d55a7bcb1461054257610166565b8063a443df94146103b0578063a85c38ef146103ed578063a8e87b8a1461042f578063bff4945014610458578063c37dfc5b14610495578063c9116b69146104b157610166565b806346767bc41161012357806346767bc4146102905780634a93e0da146102cd5780634b023cf81461030a5780637362377b14610333578063812538e11461034a5780639b40ae7f1461037357610166565b80630da1e3501461016b5780631df9ccaa146101945780632453ffa8146101d157806326b825d2146101fc578063349eb8d014610225578063364315dd14610262575b600080fd5b34801561017757600080fd5b50610192600480360381019061018d91906128e7565b61064d565b005b3480156101a057600080fd5b506101bb60048036038101906101b691906128e7565b6109f4565b6040516101c89190612923565b60405180910390f35b3480156101dd57600080fd5b506101e6610a0c565b6040516101f39190612923565b60405180910390f35b34801561020857600080fd5b50610223600480360381019061021e91906128e7565b610a12565b005b34801561023157600080fd5b5061024c60048036038101906102479190612a84565b610aa3565b6040516102599190612ae8565b60405180910390f35b34801561026e57600080fd5b50610277610ad9565b6040516102879493929190612d0b565b60405180910390f35b34801561029c57600080fd5b506102b760048036038101906102b29190612a84565b610e31565b6040516102c49190612ae8565b60405180910390f35b3480156102d957600080fd5b506102f460048036038101906102ef91906128e7565b610e66565b6040516103019190612ae8565b60405180910390f35b34801561031657600080fd5b50610331600480360381019061032c9190612dca565b610e86565b005b34801561033f57600080fd5b50610348610fba565b005b34801561035657600080fd5b50610371600480360381019061036c91906128e7565b6111c4565b005b34801561037f57600080fd5b5061039a60048036038101906103959190612df7565b6115ba565b6040516103a79190612923565b60405180910390f35b3480156103bc57600080fd5b506103d760048036038101906103d291906128e7565b6115f5565b6040516103e49190612e62565b60405180910390f35b3480156103f957600080fd5b50610414600480360381019061040f91906128e7565b611628565b60405161042696959493929190612ec7565b60405180910390f35b34801561043b57600080fd5b5061045660048036038101906104519190612f2f565b61170c565b005b34801561046457600080fd5b5061047f600480360381019061047a91906128e7565b61196a565b60405161048c9190613015565b60405180910390f35b6104af60048036038101906104aa9190613030565b61198a565b005b3480156104bd57600080fd5b506104c6611d27565b6040516104d39190612923565b60405180910390f35b3480156104e857600080fd5b5061050360048036038101906104fe91906128e7565b611d6e565b6040516105109190612ae8565b60405180910390f35b34801561052557600080fd5b50610540600480360381019061053b9190612a84565b611d8e565b005b34801561054e57600080fd5b50610569600480360381019061056491906128e7565b611eb2565b005b34801561057757600080fd5b50610592600480360381019061058d91906128e7565b6122e2565b60405161059f9190612923565b60405180910390f35b3480156105b457600080fd5b506105cf60048036038101906105ca9190612dca565b6122fa565b6040516105dc9190612923565b60405180910390f35b3480156105f157600080fd5b5061060c600480360381019061060791906128e7565b612312565b6040516106199190612ae8565b60405180910390f35b34801561062e57600080fd5b50610637612332565b6040516106449190613070565b60405180910390f35b806000600e600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146106eb576040517f9c42fcff00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000600e600085815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690506000600960008681526020019081526020016000206040518060c0016040529081600082015481526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016002820180546107b3906130c1565b80601f01602080910402602001604051908101604052809291908181526020018280546107df906130c1565b801561082c5780601f106108015761010080835404028352916020019161082c565b820191906000526020600020905b81548152906001019060200180831161080f57829003601f168201915b50505050508152602001600382015481526020016004820154815260200160058201548152505090506001600281111561086957610868612f9e565b5b600a600087815260200190815260200160002060009054906101000a900460ff16600281111561089c5761089b612f9e565b5b146108a657600080fd5b6000600f60008781526020019081526020016000205490506000601060008881526020019081526020016000205490506108e087836123c0565b6002600a600089815260200190815260200160002060006101000a81548160ff0219169083600281111561091757610916612f9e565b5b021790555080836020015173ffffffffffffffffffffffffffffffffffffffff16887f7dfc2e96d4e9bfa63e26f3d2a2c37873074e8ad79d74ea908e97c8ae7d796a9787876040015188608001514260405161097694939291906130f3565b60405180910390a4600960008881526020019081526020016000206000808201600090556001820160006101000a81549073ffffffffffffffffffffffffffffffffffffffff02191690556002820160006109d191906127ba565b600382016000905560048201600090556005820160009055505050505050505050565b600f6020528060005260406000206000915090505481565b60065481565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610a99576040517fbf91ead800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8060028190555050565b6011818051602081018201805184825260208301602085012081835280955050505050506000915054906101000a900460ff1681565b60608060608060065467ffffffffffffffff811115610afb57610afa612959565b5b604051908082528060200260200182016040528015610b295781602001602082028036833780820191505090505b50935060065467ffffffffffffffff811115610b4857610b47612959565b5b604051908082528060200260200182016040528015610b7b57816020015b6060815260200190600190039081610b665790505b50925060065467ffffffffffffffff811115610b9a57610b99612959565b5b604051908082528060200260200182016040528015610bc85781602001602082028036833780820191505090505b50915060065467ffffffffffffffff811115610be757610be6612959565b5b604051908082528060200260200182016040528015610c155781602001602082028036833780820191505090505b5090506000600190505b6006548111610e2a5760006002811115610c3c57610c3b612f9e565b5b600a600083815260200190815260200160002060009054906101000a900460ff166002811115610c6f57610c6e612f9e565b5b1415610e1757600960008281526020019081526020016000206000015485600183610c9a919061316e565b81518110610cab57610caa6131a2565b5b602002602001018181525050600960008281526020019081526020016000206002018054610cd8906130c1565b80601f0160208091040260200160405190810160405280929190818152602001828054610d04906130c1565b8015610d515780601f10610d2657610100808354040283529160200191610d51565b820191906000526020600020905b815481529060010190602001808311610d3457829003601f168201915b505050505084600183610d64919061316e565b81518110610d7557610d746131a2565b5b6020026020010181905250600960008281526020019081526020016000206003015483600183610da5919061316e565b81518110610db657610db56131a2565b5b60200260200101818152505066038d7ea4c680006009600083815260200190815260200160002060040154610deb9190613200565b82600183610df9919061316e565b81518110610e0a57610e096131a2565b5b6020026020010181815250505b8080610e2290613231565b915050610c1f565b5090919293565b6000601182604051610e4391906132b6565b908152602001604051809103902060009054906101000a900460ff169050919050565b600b6020528060005260406000206000915054906101000a900460ff1681565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610f0d576040517fbf91ead800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b80600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610f75576040517fa9aead4700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b81600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050565b60026000541415611000576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ff790613319565b60405180910390fd5b60026000819055506000600860003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905060008111611086576040517f4f614e8f00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b33600560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506000600860003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f19350505050158015611174573d6000803e3d6000fd5b50803373ffffffffffffffffffffffffffffffffffffffff167f884edad9ce6fa2440d8a54cc123490eb96d2768479d49ff9c7366125a942436460405160405180910390a3506001600081905550565b806000600960008381526020019081526020016000206040518060c0016040529081600082015481526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600282018054611255906130c1565b80601f0160208091040260200160405190810160405280929190818152602001828054611281906130c1565b80156112ce5780601f106112a3576101008083540402835291602001916112ce565b820191906000526020600020905b8154815290600101906020018083116112b157829003601f168201915b5050505050815260200160038201548152602001600482015481526020016005820154815250509050806020015173ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614611360576040517fd32e6c7300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000600960008581526020019081526020016000206040518060c0016040529081600082015481526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016002820180546113f0906130c1565b80601f016020809104026020016040519081016040528092919081815260200182805461141c906130c1565b80156114695780601f1061143e57610100808354040283529160200191611469565b820191906000526020600020905b81548152906001019060200180831161144c57829003601f168201915b5050505050815260200160038201548152602001600482015481526020016005820154815250509050600060028111156114a6576114a5612f9e565b5b600a600086815260200190815260200160002060009054906101000a900460ff1660028111156114d9576114d8612f9e565b5b146114e357600080fd5b8060600151816020015173ffffffffffffffffffffffffffffffffffffffff16857f605e46eb1441c0674ff6584b5ea1ba9a7f5d53198deaaf2a04338b577b38ab3b846040015185608001514260405161153f93929190613339565b60405180910390a4600960008581526020019081526020016000206000808201600090556001820160006101000a81549073ffffffffffffffffffffffffffffffffffffffff021916905560028201600061159a91906127ba565b600382016000905560048201600090556005820160009055505050505050565b600760205281600052604060002081805160208101820180518482526020830160208501208183528095505050505050600091509150505481565b600e6020528060005260406000206000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60096020528060005260406000206000915090508060000154908060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690806002018054611677906130c1565b80601f01602080910402602001604051908101604052809291908181526020018280546116a3906130c1565b80156116f05780601f106116c5576101008083540402835291602001916116f0565b820191906000526020600020905b8154815290600101906020018083116116d357829003601f168201915b5050505050908060030154908060040154908060050154905086565b60118360405161171c91906132b6565b908152602001604051809103902060009054906101000a900460ff1661176e576040517f4458e17f00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6001600660008282546117819190613377565b925050819055506040518060c0016040528060065481526020013373ffffffffffffffffffffffffffffffffffffffff168152602001848152602001838152602001828152602001428152506009600060065481526020019081526020016000206000820151816000015560208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550604082015181600201908051906020019061184f9291906127fa565b50606082015181600301556080820151816004015560a082015181600501559050506000600a6000600654815260200190815260200160002060006101000a81548160ff021916908360028111156118aa576118a9612f9e565b5b021790555081600760003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020846040516118fd91906132b6565b908152602001604051809103902081905550813373ffffffffffffffffffffffffffffffffffffffff166006547f9193cdda35362c821e3d4d240a5fcb0093ad192ac99028d18e5dff3414ee787186854260405161195d93929190613339565b60405180910390a4505050565b600a6020528060005260406000206000915054906101000a900460ff1681565b60008211801561199c57506006548211155b6119a557600080fd5b600060028111156119b9576119b8612f9e565b5b600a600084815260200190815260200160002060009054906101000a900460ff1660028111156119ec576119eb612f9e565b5b146119f657600080fd5b6000600960008481526020019081526020016000206040518060c0016040529081600082015481526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600282018054611a86906130c1565b80601f0160208091040260200160405190810160405280929190818152602001828054611ab2906130c1565b8015611aff5780601f10611ad457610100808354040283529160200191611aff565b820191906000526020600020905b815481529060010190602001808311611ae257829003601f168201915b50505050508152602001600382015481526020016004820154815260200160058201548152505090508060600151821115611b6f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611b6690613419565b60405180910390fd5b6000816080015183611b819190613439565b9050803414611bc5576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611bbc906134df565b60405180910390fd5b6000339050611bd48585612609565b6001600b600087815260200190815260200160002060006101000a81548160ff0219169083151502179055506001600a600087815260200190815260200160002060006101000a81548160ff02191690836002811115611c3757611c36612f9e565b5b021790555080600e600087815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555081600f60008781526020019081526020016000208190555083601060008781526020019081526020016000208190555083836020015173ffffffffffffffffffffffffffffffffffffffff16867f7717c4c0039d1e3b8c4e5fea24aea887c3b05f8f7f1e5fe6f041c5b4b58d94a1848760400151886080015142604051611d1894939291906130f3565b60405180910390a45050505050565b6000600860003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905090565b600c6020528060005260406000206000915054906101000a900460ff1681565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614611e15576040517fbf91ead800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b601181604051611e2591906132b6565b908152602001604051809103902060009054906101000a900460ff1615611e78576040517f3068858800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6001601182604051611e8a91906132b6565b908152602001604051809103902060006101000a81548160ff02191690831515021790555050565b6000600960008381526020019081526020016000206040518060c0016040529081600082015481526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600282018054611f42906130c1565b80601f0160208091040260200160405190810160405280929190818152602001828054611f6e906130c1565b8015611fbb5780601f10611f9057610100808354040283529160200191611fbb565b820191906000526020600020905b815481529060010190602001808311611f9e57829003601f168201915b50505050508152602001600382015481526020016004820154815260200160058201548152505090506000600e600084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690503373ffffffffffffffffffffffffffffffffffffffff16826020015173ffffffffffffffffffffffffffffffffffffffff161415801561208857503373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614155b156120bf576040517f3df1b3c200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600160028111156120d3576120d2612f9e565b5b600a600085815260200190815260200160002060009054906101000a900460ff16600281111561210657612105612f9e565b5b1461211057600080fd5b6000600f600085815260200190815260200160002054905060006010600086815260200190815260200160002054905081600860008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825461218f9190613377565b9250508190555080600760003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002085604001516040516121e891906132b6565b908152602001604051809103902060008282546122059190613377565b9250508190555080846020015173ffffffffffffffffffffffffffffffffffffffff16867f3f4cd73070ce25691a6ac562de84d1efbdfbb91a5f68c38178f1182736856b0986886040015189608001514260405161226694939291906130f3565b60405180910390a4600960008681526020019081526020016000206000808201600090556001820160006101000a81549073ffffffffffffffffffffffffffffffffffffffff02191690556002820160006122c191906127ba565b60038201600090556004820160009055600582016000905550505050505050565b60106020528060005260406000206000915090505481565b60086020528060005260406000206000915090505481565b600d6020528060005260406000206000915054906101000a900460ff1681565b6004805461233f906130c1565b80601f016020809104026020016040519081016040528092919081815260200182805461236b906130c1565b80156123b85780601f1061238d576101008083540402835291602001916123b8565b820191906000526020600020905b81548152906001019060200180831161239b57829003601f168201915b505050505081565b6000600960008481526020019081526020016000206040518060c0016040529081600082015481526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600282018054612450906130c1565b80601f016020809104026020016040519081016040528092919081815260200182805461247c906130c1565b80156124c95780601f1061249e576101008083540402835291602001916124c9565b820191906000526020600020905b8154815290600101906020018083116124ac57829003601f168201915b50505050508152602001600382015481526020016004820154815260200160058201548152505090506064826002546125029190613439565b61250c9190613200565b82612517919061316e565b91508160086000836020015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825461256c9190613377565b925050819055506064826002546125839190613439565b61258d9190613200565b60086000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546125fd9190613377565b92505081905550505050565b6000600960008481526020019081526020016000206040518060c0016040529081600082015481526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600282018054612699906130c1565b80601f01602080910402602001604051908101604052809291908181526020018280546126c5906130c1565b80156127125780601f106126e757610100808354040283529160200191612712565b820191906000526020600020905b8154815290600101906020018083116126f557829003601f168201915b50505050508152602001600382015481526020016004820154815260200160058201548152505090508160076000836020015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020826040015160405161279191906132b6565b908152602001604051809103902060008282546127ae919061316e565b92505081905550505050565b5080546127c6906130c1565b6000825580601f106127d857506127f7565b601f0160209004906000526020600020908101906127f69190612880565b5b50565b828054612806906130c1565b90600052602060002090601f016020900481019282612828576000855561286f565b82601f1061284157805160ff191683800117855561286f565b8280016001018555821561286f579182015b8281111561286e578251825591602001919060010190612853565b5b50905061287c9190612880565b5090565b5b80821115612899576000816000905550600101612881565b5090565b6000604051905090565b600080fd5b600080fd5b6000819050919050565b6128c4816128b1565b81146128cf57600080fd5b50565b6000813590506128e1816128bb565b92915050565b6000602082840312156128fd576128fc6128a7565b5b600061290b848285016128d2565b91505092915050565b61291d816128b1565b82525050565b60006020820190506129386000830184612914565b92915050565b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b61299182612948565b810181811067ffffffffffffffff821117156129b0576129af612959565b5b80604052505050565b60006129c361289d565b90506129cf8282612988565b919050565b600067ffffffffffffffff8211156129ef576129ee612959565b5b6129f882612948565b9050602081019050919050565b82818337600083830152505050565b6000612a27612a22846129d4565b6129b9565b905082815260208101848484011115612a4357612a42612943565b5b612a4e848285612a05565b509392505050565b600082601f830112612a6b57612a6a61293e565b5b8135612a7b848260208601612a14565b91505092915050565b600060208284031215612a9a57612a996128a7565b5b600082013567ffffffffffffffff811115612ab857612ab76128ac565b5b612ac484828501612a56565b91505092915050565b60008115159050919050565b612ae281612acd565b82525050565b6000602082019050612afd6000830184612ad9565b92915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b612b38816128b1565b82525050565b6000612b4a8383612b2f565b60208301905092915050565b6000602082019050919050565b6000612b6e82612b03565b612b788185612b0e565b9350612b8383612b1f565b8060005b83811015612bb4578151612b9b8882612b3e565b9750612ba683612b56565b925050600181019050612b87565b5085935050505092915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b600081519050919050565b600082825260208201905092915050565b60005b83811015612c27578082015181840152602081019050612c0c565b83811115612c36576000848401525b50505050565b6000612c4782612bed565b612c518185612bf8565b9350612c61818560208601612c09565b612c6a81612948565b840191505092915050565b6000612c818383612c3c565b905092915050565b6000602082019050919050565b6000612ca182612bc1565b612cab8185612bcc565b935083602082028501612cbd85612bdd565b8060005b85811015612cf95784840389528151612cda8582612c75565b9450612ce583612c89565b925060208a01995050600181019050612cc1565b50829750879550505050505092915050565b60006080820190508181036000830152612d258187612b63565b90508181036020830152612d398186612c96565b90508181036040830152612d4d8185612b63565b90508181036060830152612d618184612b63565b905095945050505050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000612d9782612d6c565b9050919050565b612da781612d8c565b8114612db257600080fd5b50565b600081359050612dc481612d9e565b92915050565b600060208284031215612de057612ddf6128a7565b5b6000612dee84828501612db5565b91505092915050565b60008060408385031215612e0e57612e0d6128a7565b5b6000612e1c85828601612db5565b925050602083013567ffffffffffffffff811115612e3d57612e3c6128ac565b5b612e4985828601612a56565b9150509250929050565b612e5c81612d8c565b82525050565b6000602082019050612e776000830184612e53565b92915050565b600082825260208201905092915050565b6000612e9982612bed565b612ea38185612e7d565b9350612eb3818560208601612c09565b612ebc81612948565b840191505092915050565b600060c082019050612edc6000830189612914565b612ee96020830188612e53565b8181036040830152612efb8187612e8e565b9050612f0a6060830186612914565b612f176080830185612914565b612f2460a0830184612914565b979650505050505050565b600080600060608486031215612f4857612f476128a7565b5b600084013567ffffffffffffffff811115612f6657612f656128ac565b5b612f7286828701612a56565b9350506020612f83868287016128d2565b9250506040612f94868287016128d2565b9150509250925092565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b60038110612fde57612fdd612f9e565b5b50565b6000819050612fef82612fcd565b919050565b6000612fff82612fe1565b9050919050565b61300f81612ff4565b82525050565b600060208201905061302a6000830184613006565b92915050565b60008060408385031215613047576130466128a7565b5b6000613055858286016128d2565b9250506020613066858286016128d2565b9150509250929050565b6000602082019050818103600083015261308a8184612e8e565b905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806130d957607f821691505b602082108114156130ed576130ec613092565b5b50919050565b60006080820190506131086000830187612e53565b818103602083015261311a8186612e8e565b90506131296040830185612914565b6131366060830184612914565b95945050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000613179826128b1565b9150613184836128b1565b9250828210156131975761319661313f565b5b828203905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b600061320b826128b1565b9150613216836128b1565b925082613226576132256131d1565b5b828204905092915050565b600061323c826128b1565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82141561326f5761326e61313f565b5b600182019050919050565b600081905092915050565b600061329082612bed565b61329a818561327a565b93506132aa818560208601612c09565b80840191505092915050565b60006132c28284613285565b915081905092915050565b7f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00600082015250565b6000613303601f83612e7d565b915061330e826132cd565b602082019050919050565b60006020820190508181036000830152613332816132f6565b9050919050565b600060608201905081810360008301526133538186612e8e565b90506133626020830185612914565b61336f6040830184612914565b949350505050565b6000613382826128b1565b915061338d836128b1565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038211156133c2576133c161313f565b5b828201905092915050565b7f52656475636520746865207175616e7469747900000000000000000000000000600082015250565b6000613403601383612e7d565b915061340e826133cd565b602082019050919050565b60006020820190508181036000830152613432816133f6565b9050919050565b6000613444826128b1565b915061344f836128b1565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff04831182151516156134885761348761313f565b5b828202905092915050565b7f596f75206e656564206d6f726520657468000000000000000000000000000000600082015250565b60006134c9601183612e7d565b91506134d482613493565b602082019050919050565b600060208201905081810360008301526134f8816134bc565b905091905056fea2646970667358221220e1cf46d40ec00654b7d253e20531cb7b4909869b0502d6faf6310648e702a61f64736f6c63430008080033",
  "devdoc": {
    "author": "Abolaji",
    "kind": "dev",
    "methods": {},
    "title": "A contract for buying and selling fungible items",
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 115,
        "contract": "contracts/Marketplace.sol:Marketplace",
        "label": "_status",
        "offset": 0,
        "slot": "0",
        "type": "t_uint256"
      },
      {
        "astId": 193,
        "contract": "contracts/Marketplace.sol:Marketplace",
        "label": "feeAccount",
        "offset": 0,
        "slot": "1",
        "type": "t_address"
      },
      {
        "astId": 195,
        "contract": "contracts/Marketplace.sol:Marketplace",
        "label": "feePercent",
        "offset": 0,
        "slot": "2",
        "type": "t_uint256"
      },
      {
        "astId": 197,
        "contract": "contracts/Marketplace.sol:Marketplace",
        "label": "i_owner",
        "offset": 0,
        "slot": "3",
        "type": "t_address"
      },
      {
        "astId": 199,
        "contract": "contracts/Marketplace.sol:Marketplace",
        "label": "item",
        "offset": 0,
        "slot": "4",
        "type": "t_string_storage"
      },
      {
        "astId": 201,
        "contract": "contracts/Marketplace.sol:Marketplace",
        "label": "user",
        "offset": 0,
        "slot": "5",
        "type": "t_address_payable"
      },
      {
        "astId": 203,
        "contract": "contracts/Marketplace.sol:Marketplace",
        "label": "orderCount",
        "offset": 0,
        "slot": "6",
        "type": "t_uint256"
      },
      {
        "astId": 222,
        "contract": "contracts/Marketplace.sol:Marketplace",
        "label": "goods",
        "offset": 0,
        "slot": "7",
        "type": "t_mapping(t_address,t_mapping(t_string_memory_ptr,t_uint256))"
      },
      {
        "astId": 226,
        "contract": "contracts/Marketplace.sol:Marketplace",
        "label": "balance",
        "offset": 0,
        "slot": "8",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 231,
        "contract": "contracts/Marketplace.sol:Marketplace",
        "label": "orders",
        "offset": 0,
        "slot": "9",
        "type": "t_mapping(t_uint256,t_struct(_order)216_storage)"
      },
      {
        "astId": 236,
        "contract": "contracts/Marketplace.sol:Marketplace",
        "label": "orderStatus",
        "offset": 0,
        "slot": "10",
        "type": "t_mapping(t_uint256,t_enum(ORDER_STATE)350)"
      },
      {
        "astId": 240,
        "contract": "contracts/Marketplace.sol:Marketplace",
        "label": "orderFilled",
        "offset": 0,
        "slot": "11",
        "type": "t_mapping(t_uint256,t_bool)"
      },
      {
        "astId": 244,
        "contract": "contracts/Marketplace.sol:Marketplace",
        "label": "orderCreated",
        "offset": 0,
        "slot": "12",
        "type": "t_mapping(t_uint256,t_bool)"
      },
      {
        "astId": 248,
        "contract": "contracts/Marketplace.sol:Marketplace",
        "label": "orderDelivered",
        "offset": 0,
        "slot": "13",
        "type": "t_mapping(t_uint256,t_bool)"
      },
      {
        "astId": 252,
        "contract": "contracts/Marketplace.sol:Marketplace",
        "label": "Buyers",
        "offset": 0,
        "slot": "14",
        "type": "t_mapping(t_uint256,t_address)"
      },
      {
        "astId": 256,
        "contract": "contracts/Marketplace.sol:Marketplace",
        "label": "filledAmount",
        "offset": 0,
        "slot": "15",
        "type": "t_mapping(t_uint256,t_uint256)"
      },
      {
        "astId": 260,
        "contract": "contracts/Marketplace.sol:Marketplace",
        "label": "filledQuantity",
        "offset": 0,
        "slot": "16",
        "type": "t_mapping(t_uint256,t_uint256)"
      },
      {
        "astId": 264,
        "contract": "contracts/Marketplace.sol:Marketplace",
        "label": "allowedItems",
        "offset": 0,
        "slot": "17",
        "type": "t_mapping(t_string_memory_ptr,t_bool)"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_address_payable": {
        "encoding": "inplace",
        "label": "address payable",
        "numberOfBytes": "20"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_enum(ORDER_STATE)350": {
        "encoding": "inplace",
        "label": "enum Marketplace.ORDER_STATE",
        "numberOfBytes": "1"
      },
      "t_mapping(t_address,t_mapping(t_string_memory_ptr,t_uint256))": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => mapping(string => uint256))",
        "numberOfBytes": "32",
        "value": "t_mapping(t_string_memory_ptr,t_uint256)"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_mapping(t_string_memory_ptr,t_bool)": {
        "encoding": "mapping",
        "key": "t_string_memory_ptr",
        "label": "mapping(string => bool)",
        "numberOfBytes": "32",
        "value": "t_bool"
      },
      "t_mapping(t_string_memory_ptr,t_uint256)": {
        "encoding": "mapping",
        "key": "t_string_memory_ptr",
        "label": "mapping(string => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_mapping(t_uint256,t_address)": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => address)",
        "numberOfBytes": "32",
        "value": "t_address"
      },
      "t_mapping(t_uint256,t_bool)": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => bool)",
        "numberOfBytes": "32",
        "value": "t_bool"
      },
      "t_mapping(t_uint256,t_enum(ORDER_STATE)350)": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => enum Marketplace.ORDER_STATE)",
        "numberOfBytes": "32",
        "value": "t_enum(ORDER_STATE)350"
      },
      "t_mapping(t_uint256,t_struct(_order)216_storage)": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => struct Marketplace._order)",
        "numberOfBytes": "32",
        "value": "t_struct(_order)216_storage"
      },
      "t_mapping(t_uint256,t_uint256)": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_string_memory_ptr": {
        "encoding": "bytes",
        "label": "string",
        "numberOfBytes": "32"
      },
      "t_string_storage": {
        "encoding": "bytes",
        "label": "string",
        "numberOfBytes": "32"
      },
      "t_struct(_order)216_storage": {
        "encoding": "inplace",
        "label": "struct Marketplace._order",
        "members": [
          {
            "astId": 205,
            "contract": "contracts/Marketplace.sol:Marketplace",
            "label": "id",
            "offset": 0,
            "slot": "0",
            "type": "t_uint256"
          },
          {
            "astId": 207,
            "contract": "contracts/Marketplace.sol:Marketplace",
            "label": "seller",
            "offset": 0,
            "slot": "1",
            "type": "t_address"
          },
          {
            "astId": 209,
            "contract": "contracts/Marketplace.sol:Marketplace",
            "label": "item",
            "offset": 0,
            "slot": "2",
            "type": "t_string_storage"
          },
          {
            "astId": 211,
            "contract": "contracts/Marketplace.sol:Marketplace",
            "label": "qtty_to_sell",
            "offset": 0,
            "slot": "3",
            "type": "t_uint256"
          },
          {
            "astId": 213,
            "contract": "contracts/Marketplace.sol:Marketplace",
            "label": "price",
            "offset": 0,
            "slot": "4",
            "type": "t_uint256"
          },
          {
            "astId": 215,
            "contract": "contracts/Marketplace.sol:Marketplace",
            "label": "timestamp",
            "offset": 0,
            "slot": "5",
            "type": "t_uint256"
          }
        ],
        "numberOfBytes": "192"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}