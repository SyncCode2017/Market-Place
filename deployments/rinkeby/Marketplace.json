{
  "address": "0x555bf3d486b325f039cE8d0579082C2ea6A9FaD4",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_feeAccount",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_feePercent",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "Marketplace__NotOwner",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "Marketplace__SmallerBalance",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "seller",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "buyer",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "item",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "qtty_bought",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "price",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "timestamp",
          "type": "uint256"
        }
      ],
      "name": "CancelFilledOrder",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "seller",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "item",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "qtty_to_sell",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "price",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "timestamp",
          "type": "uint256"
        }
      ],
      "name": "CancelOpenOrder",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "bal",
          "type": "uint256"
        }
      ],
      "name": "Deposit",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "seller",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "item",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "qtty_to_sell",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "price",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "timestamp",
          "type": "uint256"
        }
      ],
      "name": "OrderCreated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "seller",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "buyer",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "item",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "qtty_bought",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "price",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "timestamp",
          "type": "uint256"
        }
      ],
      "name": "OrderDelivered",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "seller",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "buyer",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "item",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "qtty_bought",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "price",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "timestamp",
          "type": "uint256"
        }
      ],
      "name": "OrderFilled",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "bal",
          "type": "uint256"
        }
      ],
      "name": "Withdraw",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "Buyers",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_id",
          "type": "uint256"
        }
      ],
      "name": "OrderReceived",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_item",
          "type": "string"
        }
      ],
      "name": "addAllowedItems",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "allowedItems",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_id",
          "type": "uint256"
        }
      ],
      "name": "cancelFilledOrder",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_id",
          "type": "uint256"
        }
      ],
      "name": "cancelOpenOrder",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "depositEther",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "feePercent",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_id",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_quantity",
          "type": "uint256"
        }
      ],
      "name": "fillOrder",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "filledAmount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "filledQuantity",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getAllowedItems",
      "outputs": [
        {
          "internalType": "string[]",
          "name": "",
          "type": "string[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "getBal",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "name": "goods",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "i_owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "item",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_item",
          "type": "string"
        }
      ],
      "name": "itemIsAllowed",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_item",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "_quantity",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_price",
          "type": "uint256"
        }
      ],
      "name": "makeOrder",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "myBalance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "open_order",
      "outputs": [
        {
          "internalType": "uint256[]",
          "name": "idOrder",
          "type": "uint256[]"
        },
        {
          "internalType": "string[]",
          "name": "_item",
          "type": "string[]"
        },
        {
          "internalType": "uint256[]",
          "name": "_qty",
          "type": "uint256[]"
        },
        {
          "internalType": "uint256[]",
          "name": "_prc",
          "type": "uint256[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "orderCancelled",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "orderCount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "orderCreated",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "orderDelivered",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "orderFilled",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "orderStatus",
      "outputs": [
        {
          "internalType": "enum Marketplace.ORDER_STATE",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "orders",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "seller",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "item",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "qtty_to_sell",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "price",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "timestamp",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "withdrawEther",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0x528d8bd8cb92a06db847f1d9865ae297e9683186e341508697ce8dd5cc0948b9",
  "receipt": {
    "to": null,
    "from": "0x0b9412DF2c8802E7fCc2D000392f16fD0df2bfEE",
    "contractAddress": "0x555bf3d486b325f039cE8d0579082C2ea6A9FaD4",
    "transactionIndex": 9,
    "gasUsed": "3250260",
    "logsBloom": "0x
    "blockHash": "0xb97a615f8b06f5f128decd5d981b84ca1485672316b47169672c72455a5495cd",
    "transactionHash": "0x528d8bd8cb92a06db847f1d9865ae297e9683186e341508697ce8dd5cc0948b9",
    "logs": [],
    "blockNumber": 11162108,
    "cumulativeGasUsed": "3981532",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x0b9412DF2c8802E7fCc2D000392f16fD0df2bfEE",
    5
  ],
  "numDeployments": 8,
  "solcInputHash": "259e788c2b520f0f16f2a7c3b486573f",
  "metadata": "{\"compiler\":{\"version\":\"0.8.8+commit.dddeac2f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_feeAccount\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_feePercent\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"Marketplace__NotOwner\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Marketplace__SmallerBalance\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"seller\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"buyer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"item\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"qtty_bought\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"CancelFilledOrder\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"seller\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"item\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"qtty_to_sell\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"CancelOpenOrder\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"bal\",\"type\":\"uint256\"}],\"name\":\"Deposit\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"seller\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"item\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"qtty_to_sell\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"OrderCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"seller\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"buyer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"item\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"qtty_bought\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"OrderDelivered\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"seller\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"buyer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"item\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"qtty_bought\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"OrderFilled\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"bal\",\"type\":\"uint256\"}],\"name\":\"Withdraw\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"Buyers\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_id\",\"type\":\"uint256\"}],\"name\":\"OrderReceived\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_item\",\"type\":\"string\"}],\"name\":\"addAllowedItems\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"allowedItems\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_id\",\"type\":\"uint256\"}],\"name\":\"cancelFilledOrder\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_id\",\"type\":\"uint256\"}],\"name\":\"cancelOpenOrder\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"depositEther\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"feePercent\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_quantity\",\"type\":\"uint256\"}],\"name\":\"fillOrder\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"filledAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"filledQuantity\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getAllowedItems\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"\",\"type\":\"string[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"getBal\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"goods\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"i_owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"item\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_item\",\"type\":\"string\"}],\"name\":\"itemIsAllowed\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_item\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"_quantity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_price\",\"type\":\"uint256\"}],\"name\":\"makeOrder\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"myBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"open_order\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"idOrder\",\"type\":\"uint256[]\"},{\"internalType\":\"string[]\",\"name\":\"_item\",\"type\":\"string[]\"},{\"internalType\":\"uint256[]\",\"name\":\"_qty\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"_prc\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"orderCancelled\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"orderCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"orderCreated\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"orderDelivered\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"orderFilled\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"orderStatus\",\"outputs\":[{\"internalType\":\"enum Marketplace.ORDER_STATE\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"orders\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"seller\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"item\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"qtty_to_sell\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"withdrawEther\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Abolaji\",\"kind\":\"dev\",\"methods\":{},\"title\":\"A contract for buying and selling items\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Marketplace.sol\":\"Marketplace\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (access/Ownable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    constructor() {\\n        _transferOwnership(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby removing any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0x24e0364e503a9bbde94c715d26573a76f14cd2a202d45f96f52134ab806b67b9\",\"license\":\"MIT\"},\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (security/ReentrancyGuard.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Contract module that helps prevent reentrant calls to a function.\\n *\\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\\n * available, which can be applied to functions to make sure there are no nested\\n * (reentrant) calls to them.\\n *\\n * Note that because there is a single `nonReentrant` guard, functions marked as\\n * `nonReentrant` may not call one another. This can be worked around by making\\n * those functions `private`, and then adding `external` `nonReentrant` entry\\n * points to them.\\n *\\n * TIP: If you would like to learn more about reentrancy and alternative ways\\n * to protect against it, check out our blog post\\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\\n */\\nabstract contract ReentrancyGuard {\\n    // Booleans are more expensive than uint256 or any type that takes up a full\\n    // word because each write operation emits an extra SLOAD to first read the\\n    // slot's contents, replace the bits taken up by the boolean, and then write\\n    // back. This is the compiler's defense against contract upgrades and\\n    // pointer aliasing, and it cannot be disabled.\\n\\n    // The values being non-zero value makes deployment a bit more expensive,\\n    // but in exchange the refund on every call to nonReentrant will be lower in\\n    // amount. Since refunds are capped to a percentage of the total\\n    // transaction's gas, it is best to keep them low in cases like this one, to\\n    // increase the likelihood of the full refund coming into effect.\\n    uint256 private constant _NOT_ENTERED = 1;\\n    uint256 private constant _ENTERED = 2;\\n\\n    uint256 private _status;\\n\\n    constructor() {\\n        _status = _NOT_ENTERED;\\n    }\\n\\n    /**\\n     * @dev Prevents a contract from calling itself, directly or indirectly.\\n     * Calling a `nonReentrant` function from another `nonReentrant`\\n     * function is not supported. It is possible to prevent this from happening\\n     * by making the `nonReentrant` function external, and making it call a\\n     * `private` function that does the actual work.\\n     */\\n    modifier nonReentrant() {\\n        // On the first call to nonReentrant, _notEntered will be true\\n        require(_status != _ENTERED, \\\"ReentrancyGuard: reentrant call\\\");\\n\\n        // Any calls to nonReentrant after this point will fail\\n        _status = _ENTERED;\\n\\n        _;\\n\\n        // By storing the original value once again, a refund is triggered (see\\n        // https://eips.ethereum.org/EIPS/eip-2200)\\n        _status = _NOT_ENTERED;\\n    }\\n}\\n\",\"keccak256\":\"0x0e9621f60b2faabe65549f7ed0f24e8853a45c1b7990d47e8160e523683f3935\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\"},\"contracts/Marketplace.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.8;\\n\\nimport \\\"@openzeppelin/contracts/access/Ownable.sol\\\";\\nimport \\\"@openzeppelin/contracts/security/ReentrancyGuard.sol\\\";\\n\\nerror Marketplace__NewItemExist();\\nerror Marketplace__NotOwner();\\nerror Marketplace__NotYourOrder();\\nerror Marketplace__SmallerBalance();\\n\\n/** @title A contract for buying and selling items\\n *  @author Abolaji\\n *  @dev\\n */\\n\\ncontract Marketplace is ReentrancyGuard {\\n    //Variables\\n    address private immutable feeAccount;\\n    uint256 public immutable feePercent;\\n    address public immutable i_owner;\\n    string public item;\\n    address payable internal user;\\n    uint256 public orderCount;\\n\\n    struct _order {\\n        uint256 id;\\n        address seller;\\n        string item;\\n        uint256 qtty_to_sell;\\n        uint256 price;\\n        uint256 timestamp;\\n    }\\n\\n    mapping(address => mapping(string => uint256)) public goods;\\n\\n    // store the order\\n    mapping(address => uint256) public getBal;\\n    mapping(uint256 => _order) public orders;\\n    mapping(uint256 => ORDER_STATE) public orderStatus;\\n    mapping(uint256 => bool) public orderCancelled;\\n    mapping(uint256 => bool) public orderFilled;\\n    mapping(uint256 => bool) public orderCreated;\\n    mapping(uint256 => bool) public orderDelivered;\\n    mapping(uint256 => address) public Buyers;\\n    mapping(uint256 => uint256) public filledAmount;\\n    mapping(uint256 => uint256) public filledQuantity;\\n    //_order[] public OpenOrder;\\n    string[] public allowedItems;\\n\\n    //Events\\n    event Deposit(address user, uint256 amount, uint256 bal);\\n    event Withdraw(address user, uint256 amount, uint256 bal);\\n    event OrderCreated(\\n        uint256 id,\\n        address seller,\\n        string item,\\n        uint256 qtty_to_sell,\\n        uint256 price,\\n        uint256 timestamp\\n    );\\n    event OrderFilled(\\n        uint256 id,\\n        address seller,\\n        address buyer,\\n        string item,\\n        uint256 qtty_bought,\\n        uint256 price,\\n        uint256 timestamp\\n    );\\n    event OrderDelivered(\\n        uint256 id,\\n        address seller,\\n        address buyer,\\n        string item,\\n        uint256 qtty_bought,\\n        uint256 price,\\n        uint256 timestamp\\n    );\\n    event CancelOpenOrder(\\n        uint256 id,\\n        address seller,\\n        string item,\\n        uint256 qtty_to_sell,\\n        uint256 price,\\n        uint256 timestamp\\n    );\\n    event CancelFilledOrder(\\n        uint256 id,\\n        address seller,\\n        address buyer,\\n        string item,\\n        uint256 qtty_bought,\\n        uint256 price,\\n        uint256 timestamp\\n    );\\n\\n    enum ORDER_STATE {\\n        OPEN,\\n        FILLED,\\n        CLOSED\\n    }\\n\\n    constructor(address _feeAccount, uint256 _feePercent) {\\n        feeAccount = _feeAccount;\\n        feePercent = _feePercent;\\n        i_owner = msg.sender;\\n    }\\n\\n    function depositEther() public payable {\\n        getBal[msg.sender] = getBal[msg.sender] + msg.value;\\n\\n        emit Deposit(msg.sender, msg.value, getBal[msg.sender]);\\n    }\\n\\n    modifier onlyOwner() {\\n        if (msg.sender != i_owner) revert Marketplace__NotOwner();\\n        _;\\n    }\\n\\n    // //Fallback: reverts if Ether is sent to this smart contract by mistake\\n    // function() external {\\n    //     revert();\\n    // }\\n\\n    function withdrawEther(uint256 _amount) public {\\n        user = payable(msg.sender);\\n        //require(getBal[msg.sender] >= _amount);\\n        if (getBal[msg.sender] < _amount) {\\n            revert Marketplace__SmallerBalance();\\n        }\\n        getBal[msg.sender] = getBal[msg.sender] - _amount;\\n        user.transfer(_amount);\\n        emit Withdraw(msg.sender, _amount, getBal[msg.sender]);\\n    }\\n\\n    function myBalance() public view returns (uint256) {\\n        return getBal[msg.sender];\\n    }\\n\\n    // Create an order as a seller\\n    function makeOrder(\\n        string memory _item,\\n        uint256 _quantity,\\n        uint256 _price\\n    ) public {\\n        require(itemIsAllowed(_item), \\\"Item is currently not allowed\\\");\\n        orderCount = orderCount + 1;\\n        orders[orderCount] = _order(\\n            orderCount,\\n            msg.sender,\\n            _item,\\n            _quantity,\\n            _price,\\n            block.timestamp\\n        );\\n        orderStatus[orderCount] = ORDER_STATE.OPEN;\\n        goods[msg.sender][_item] = _quantity;\\n        emit OrderCreated(\\n            orderCount,\\n            msg.sender,\\n            _item,\\n            _quantity,\\n            _price,\\n            block.timestamp\\n        );\\n    }\\n\\n    // Fill an order as a buyer\\n    function fillOrder(uint256 _id, uint256 _quantity) public {\\n        require(_id > 0 && _id <= orderCount);\\n        require(orderStatus[_id] == ORDER_STATE.OPEN);\\n\\n        address _buyer = msg.sender;\\n\\n        // Fetch the order\\n        _order memory order = orders[_id];\\n        require(_quantity <= order.qtty_to_sell, \\\"Reduce the quantity\\\");\\n        uint256 amount = _quantity * order.price;\\n        require(getBal[_buyer] >= amount, \\\"You need more eth\\\");\\n\\n        _orderBond(_id, _buyer, _quantity, amount);\\n\\n        // Mark order as filled\\n        orderFilled[_id] = true;\\n        orderStatus[_id] = ORDER_STATE.FILLED;\\n        Buyers[_id] = _buyer;\\n        filledAmount[_id] = amount;\\n        filledQuantity[_id] = _quantity;\\n\\n        emit OrderFilled(\\n            _id,\\n            order.seller,\\n            _buyer,\\n            order.item,\\n            _quantity,\\n            order.price,\\n            block.timestamp\\n        );\\n    }\\n\\n    //Getting orders that are still available for buying\\n    function open_order()\\n        public\\n        view\\n        returns (\\n            uint256[] memory idOrder,\\n            string[] memory _item,\\n            uint256[] memory _qty,\\n            uint256[] memory _prc\\n        )\\n    {\\n        idOrder = new uint256[](orderCount);\\n        _item = new string[](orderCount);\\n        _qty = new uint256[](orderCount);\\n        _prc = new uint256[](orderCount);\\n        for (uint256 i = 1; i <= orderCount; i++) {\\n            if (orderStatus[i] == ORDER_STATE.OPEN) {\\n                idOrder[i - 1] = orders[i].id;\\n                _item[i - 1] = orders[i].item;\\n                _qty[i - 1] = orders[i].qtty_to_sell;\\n                _prc[i - 1] = orders[i].price / (10**15);\\n            }\\n        }\\n        return (idOrder, _item, _qty, _prc);\\n    }\\n\\n    // When the buyer confirms the receipt of the items, the money is released to the seller\\n    function OrderReceived(uint256 _id) public {\\n        address _buyer = Buyers[_id];\\n        _order memory order = orders[_id];\\n        require(orderStatus[_id] == ORDER_STATE.FILLED);\\n        require(msg.sender == _buyer, \\\"Not your order\\\");\\n        uint256 amount = filledAmount[_id];\\n        uint256 quantity = filledQuantity[_id];\\n\\n        _orderCompleted(_id, _buyer, quantity, amount);\\n        orderStatus[_id] = ORDER_STATE.CLOSED;\\n        emit OrderDelivered(\\n            _id,\\n            order.seller,\\n            _buyer,\\n            order.item,\\n            quantity,\\n            order.price,\\n            block.timestamp\\n        );\\n    }\\n\\n    function cancelOpenOrder(uint256 _id) public {\\n        _order memory order = orders[_id];\\n        require(order.seller == msg.sender, \\\"Not your order\\\"); // must be \\\"my\\\" order\\n        require(orderStatus[_id] == ORDER_STATE.OPEN);\\n\\n        orderCancelled[_id] = true;\\n        orderStatus[_id] == ORDER_STATE.CLOSED;\\n        emit CancelOpenOrder(\\n            _id,\\n            order.seller,\\n            order.item,\\n            order.qtty_to_sell,\\n            order.price,\\n            block.timestamp\\n        );\\n    }\\n\\n    function cancelFilledOrder(uint256 _id) public {\\n        _order memory order = orders[_id];\\n        address _buyer = Buyers[_id];\\n        require(\\n            order.seller == msg.sender || _buyer == msg.sender,\\n            \\\"Not your order\\\"\\n        ); // must be \\\"my\\\" order\\n        require(orderStatus[_id] == ORDER_STATE.FILLED);\\n        uint256 _amount = filledAmount[_id];\\n        uint256 _quantity = filledQuantity[_id];\\n\\n        //delete ();\\n\\n        getBal[_buyer] = getBal[_buyer] + _amount;\\n        goods[msg.sender][order.item] =\\n            goods[msg.sender][order.item] +\\n            _quantity;\\n        orderStatus[_id] == ORDER_STATE.CLOSED;\\n        orderCancelled[_id] = true;\\n        emit CancelFilledOrder(\\n            _id,\\n            order.seller,\\n            _buyer,\\n            order.item,\\n            _quantity,\\n            order.price,\\n            block.timestamp\\n        );\\n    }\\n\\n    function _orderBond(\\n        uint256 _id,\\n        address _buyer,\\n        uint256 _quantity,\\n        uint256 _amount\\n    ) internal {\\n        _order memory order = orders[_id];\\n        // place order\\n        getBal[_buyer] = getBal[_buyer] - _amount;\\n        goods[order.seller][order.item] =\\n            goods[order.seller][order.item] -\\n            _quantity;\\n    }\\n\\n    function _orderCompleted(\\n        uint256 _id,\\n        address _buyer,\\n        uint256 _quantity,\\n        uint256 _amount\\n    ) internal {\\n        _order memory order = orders[_id];\\n        _amount = _amount - ((feePercent * _amount) / 100);\\n\\n        getBal[order.seller] = getBal[order.seller] + _amount;\\n        goods[_buyer][order.item] = goods[_buyer][order.item] + _quantity;\\n        getBal[feeAccount] =\\n            getBal[feeAccount] +\\n            ((feePercent * _amount) / 100);\\n    }\\n\\n    function addAllowedItems(string memory _item) public onlyOwner {\\n        //require (newItemIsUnique(_item));\\n        allowedItems.push(_item);\\n    }\\n\\n    function itemIsAllowed(string memory _item) public view returns (bool) {\\n        for (\\n            uint256 allowedItemIndex = 0;\\n            allowedItemIndex < allowedItems.length;\\n            allowedItemIndex++\\n        ) {\\n            if (\\n                keccak256(bytes(allowedItems[allowedItemIndex])) ==\\n                keccak256(bytes(_item))\\n            ) {\\n                return true;\\n            }\\n        }\\n        return false;\\n    }\\n\\n    // function newItemIsUnique(string memory _item) public view  returns (bool) {\\n    //     string[] memory itemArray= allowedItems;\\n    //     for (uint256 i=0; i<itemArray.length; i++){\\n    //         if (keccak256(bytes(itemArray[i]))==keccak256(bytes(_item))){\\n    //             revert Marketplace__NewItemExist();\\n    //         }\\n    //     }\\n    //     return true;\\n    // }\\n\\n    function getAllowedItems() public view returns (string[] memory) {\\n        return allowedItems;\\n    }\\n}\\n\",\"keccak256\":\"0x0f415b9dada54898114dda273f450e3a7daf03d5c06d7de7d42d68f45fd6887b\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x60e06040523480156200001157600080fd5b5060405162003b6e38038062003b6e833981810160405281019062000037919062000162565b60016000819055508173ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff1660601b815250508060a081815250503373ffffffffffffffffffffffffffffffffffffffff1660c08173ffffffffffffffffffffffffffffffffffffffff1660601b815250505050620001a9565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620000ef82620000c2565b9050919050565b6200010181620000e2565b81146200010d57600080fd5b50565b6000815190506200012181620000f6565b92915050565b6000819050919050565b6200013c8162000127565b81146200014857600080fd5b50565b6000815190506200015c8162000131565b92915050565b600080604083850312156200017c576200017b620000bd565b5b60006200018c8582860162000110565b92505060206200019f858286016200014b565b9150509250929050565b60805160601c60a05160c05160601c613973620001fb60003960008181611dc8015261234501526000818161120b01528181612584015261272d01526000818161276601526127d001526139736000f3fe6080604052600436106101b75760003560e01c8063a443df94116100ec578063cb3968b51161008a578063dbdea44c11610064578063dbdea44c14610651578063e742a1821461068e578063e9c18966146106cb578063f2a4a82e14610708576101b7565b8063cb3968b5146105d4578063d55a7bcb146105fd578063dba6335f14610626576101b7565b8063bff49450116100c6578063bff4945014610506578063c37dfc5b14610543578063c9116b691461056c578063c94c2b8d14610597576101b7565b8063a443df941461045e578063a85c38ef1461049b578063a8e87b8a146104dd576101b7565b8063493047fc116101595780637fd6f15c116101335780637fd6f15c146103c3578063812538e1146103ee57806398ea5fca146104175780639b40ae7f14610421576101b7565b8063493047fc1461031e5780634a93e0da146103495780634f16587314610386576101b7565b80632e6e91aa116101955780632e6e91aa1461024d5780632fa780851461028a578063364315dd146102c75780633bed33ce146102f5576101b7565b80630da1e350146101bc5780631df9ccaa146101e55780632453ffa814610222575b600080fd5b3480156101c857600080fd5b506101e360048036038101906101de9190612bbe565b610733565b005b3480156101f157600080fd5b5061020c60048036038101906102079190612bbe565b610a2a565b6040516102199190612bfa565b60405180910390f35b34801561022e57600080fd5b50610237610a42565b6040516102449190612bfa565b60405180910390f35b34801561025957600080fd5b50610274600480360381019061026f9190612bbe565b610a48565b6040516102819190612cae565b60405180910390f35b34801561029657600080fd5b506102b160048036038101906102ac9190612d2e565b610af4565b6040516102be9190612bfa565b60405180910390f35b3480156102d357600080fd5b506102dc610b0c565b6040516102ec9493929190612f25565b60405180910390f35b34801561030157600080fd5b5061031c60048036038101906103179190612bbe565b610e64565b005b34801561032a57600080fd5b50610333611092565b6040516103409190612f86565b60405180910390f35b34801561035557600080fd5b50610370600480360381019061036b9190612bbe565b61116b565b60405161037d9190612fc3565b60405180910390f35b34801561039257600080fd5b506103ad60048036038101906103a89190613113565b61118b565b6040516103ba9190612fc3565b60405180910390f35b3480156103cf57600080fd5b506103d8611209565b6040516103e59190612bfa565b60405180910390f35b3480156103fa57600080fd5b5061041560048036038101906104109190612bbe565b61122d565b005b61041f6114eb565b005b34801561042d57600080fd5b506104486004803603810190610443919061315c565b6115f5565b6040516104559190612bfa565b60405180910390f35b34801561046a57600080fd5b5061048560048036038101906104809190612bbe565b611630565b60405161049291906131c7565b60405180910390f35b3480156104a757600080fd5b506104c260048036038101906104bd9190612bbe565b611663565b6040516104d4969594939291906131e2565b60405180910390f35b3480156104e957600080fd5b5061050460048036038101906104ff919061324a565b611747565b005b34801561051257600080fd5b5061052d60048036038101906105289190612bbe565b611973565b60405161053a9190613330565b60405180910390f35b34801561054f57600080fd5b5061056a6004803603810190610565919061334b565b611993565b005b34801561057857600080fd5b50610581611d5f565b60405161058e9190612bfa565b60405180910390f35b3480156105a357600080fd5b506105be60048036038101906105b99190612bbe565b611da6565b6040516105cb9190612fc3565b60405180910390f35b3480156105e057600080fd5b506105fb60048036038101906105f69190613113565b611dc6565b005b34801561060957600080fd5b50610624600480360381019061061f9190612bbe565b611e8a565b005b34801561063257600080fd5b5061063b612343565b60405161064891906131c7565b60405180910390f35b34801561065d57600080fd5b5061067860048036038101906106739190612bbe565b612367565b6040516106859190612bfa565b60405180910390f35b34801561069a57600080fd5b506106b560048036038101906106b09190612bbe565b61237f565b6040516106c29190612fc3565b60405180910390f35b3480156106d757600080fd5b506106f260048036038101906106ed9190612bbe565b61239f565b6040516106ff9190612fc3565b60405180910390f35b34801561071457600080fd5b5061071d6123bf565b60405161072a9190612cae565b60405180910390f35b6000600c600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690506000600660008481526020019081526020016000206040518060c0016040529081600082015481526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016002820180546107fb906133ba565b80601f0160208091040260200160405190810160405280929190818152602001828054610827906133ba565b80156108745780601f1061084957610100808354040283529160200191610874565b820191906000526020600020905b81548152906001019060200180831161085757829003601f168201915b5050505050815260200160038201548152602001600482015481526020016005820154815250509050600160028111156108b1576108b06132b9565b5b6007600085815260200190815260200160002060009054906101000a900460ff1660028111156108e4576108e36132b9565b5b146108ee57600080fd5b8173ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461095c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161095390613438565b60405180910390fd5b6000600d60008581526020019081526020016000205490506000600e60008681526020019081526020016000205490506109988585838561244d565b60026007600087815260200190815260200160002060006101000a81548160ff021916908360028111156109cf576109ce6132b9565b5b02179055507f7dfc2e96d4e9bfa63e26f3d2a2c37873074e8ad79d74ea908e97c8ae7d796a9785846020015186866040015185886080015142604051610a1b9796959493929190613458565b60405180910390a15050505050565b600d6020528060005260406000206000915090505481565b60035481565b600f8181548110610a5857600080fd5b906000526020600020016000915090508054610a73906133ba565b80601f0160208091040260200160405190810160405280929190818152602001828054610a9f906133ba565b8015610aec5780601f10610ac157610100808354040283529160200191610aec565b820191906000526020600020905b815481529060010190602001808311610acf57829003601f168201915b505050505081565b60056020528060005260406000206000915090505481565b60608060608060035467ffffffffffffffff811115610b2e57610b2d612fe8565b5b604051908082528060200260200182016040528015610b5c5781602001602082028036833780820191505090505b50935060035467ffffffffffffffff811115610b7b57610b7a612fe8565b5b604051908082528060200260200182016040528015610bae57816020015b6060815260200190600190039081610b995790505b50925060035467ffffffffffffffff811115610bcd57610bcc612fe8565b5b604051908082528060200260200182016040528015610bfb5781602001602082028036833780820191505090505b50915060035467ffffffffffffffff811115610c1a57610c19612fe8565b5b604051908082528060200260200182016040528015610c485781602001602082028036833780820191505090505b5090506000600190505b6003548111610e5d5760006002811115610c6f57610c6e6132b9565b5b6007600083815260200190815260200160002060009054906101000a900460ff166002811115610ca257610ca16132b9565b5b1415610e4a57600660008281526020019081526020016000206000015485600183610ccd91906134fd565b81518110610cde57610cdd613531565b5b602002602001018181525050600660008281526020019081526020016000206002018054610d0b906133ba565b80601f0160208091040260200160405190810160405280929190818152602001828054610d37906133ba565b8015610d845780601f10610d5957610100808354040283529160200191610d84565b820191906000526020600020905b815481529060010190602001808311610d6757829003601f168201915b505050505084600183610d9791906134fd565b81518110610da857610da7613531565b5b6020026020010181905250600660008281526020019081526020016000206003015483600183610dd891906134fd565b81518110610de957610de8613531565b5b60200260200101818152505066038d7ea4c680006006600083815260200190815260200160002060040154610e1e919061358f565b82600183610e2c91906134fd565b81518110610e3d57610e3c613531565b5b6020026020010181815250505b8080610e55906135c0565b915050610c52565b5090919293565b33600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020541015610f1e576040517fadc1f4ce00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b80600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610f6991906134fd565b600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f19350505050158015611014573d6000803e3d6000fd5b507ff279e6a1f5e320cca91135676d9cb6e44ca8a08c0b88342bcdb1144f6511b5683382600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205460405161108793929190613609565b60405180910390a150565b6060600f805480602002602001604051908101604052809291908181526020016000905b828210156111625783829060005260206000200180546110d5906133ba565b80601f0160208091040260200160405190810160405280929190818152602001828054611101906133ba565b801561114e5780601f106111235761010080835404028352916020019161114e565b820191906000526020600020905b81548152906001019060200180831161113157829003601f168201915b5050505050815260200190600101906110b6565b50505050905090565b60096020528060005260406000206000915054906101000a900460ff1681565b600080600090505b600f805490508110156111fe578280519060200120600f82815481106111bc576111bb613531565b5b906000526020600020016040516111d391906136df565b604051809103902014156111eb576001915050611204565b80806111f6906135c0565b915050611193565b50600090505b919050565b7f000000000000000000000000000000000000000000000000000000000000000081565b6000600660008381526020019081526020016000206040518060c0016040529081600082015481526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016002820180546112bd906133ba565b80601f01602080910402602001604051908101604052809291908181526020018280546112e9906133ba565b80156113365780601f1061130b57610100808354040283529160200191611336565b820191906000526020600020905b81548152906001019060200180831161131957829003601f168201915b50505050508152602001600382015481526020016004820154815260200160058201548152505090503373ffffffffffffffffffffffffffffffffffffffff16816020015173ffffffffffffffffffffffffffffffffffffffff16146113d1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016113c890613438565b60405180910390fd5b600060028111156113e5576113e46132b9565b5b6007600084815260200190815260200160002060009054906101000a900460ff166002811115611418576114176132b9565b5b1461142257600080fd5b60016008600084815260200190815260200160002060006101000a81548160ff021916908315150217905550600280811115611461576114606132b9565b5b6007600084815260200190815260200160002060009054906101000a900460ff166002811115611494576114936132b9565b5b50507f605e46eb1441c0674ff6584b5ea1ba9a7f5d53198deaaf2a04338b577b38ab3b828260200151836040015184606001518560800151426040516114df969594939291906131e2565b60405180910390a15050565b34600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461153691906136f6565b600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055507f90890809c654f11d6e72a28fa60149770a0d11ec6c92319d6ceb2bb0a4ea1a153334600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546040516115eb93929190613609565b60405180910390a1565b600460205281600052604060002081805160208101820180518482526020830160208501208183528095505050505050600091509150505481565b600c6020528060005260406000206000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60066020528060005260406000206000915090508060000154908060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060020180546116b2906133ba565b80601f01602080910402602001604051908101604052809291908181526020018280546116de906133ba565b801561172b5780601f106117005761010080835404028352916020019161172b565b820191906000526020600020905b81548152906001019060200180831161170e57829003601f168201915b5050505050908060030154908060040154908060050154905086565b6117508361118b565b61178f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161178690613798565b60405180910390fd5b600160035461179e91906136f6565b6003819055506040518060c0016040528060035481526020013373ffffffffffffffffffffffffffffffffffffffff168152602001848152602001838152602001828152602001428152506006600060035481526020019081526020016000206000820151816000015560208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550604082015181600201908051906020019061186b929190612ad1565b50606082015181600301556080820151816004015560a08201518160050155905050600060076000600354815260200190815260200160002060006101000a81548160ff021916908360028111156118c6576118c56132b9565b5b021790555081600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208460405161191991906137f4565b9081526020016040518091039020819055507f9193cdda35362c821e3d4d240a5fcb0093ad192ac99028d18e5dff3414ee78716003543385858542604051611966969594939291906131e2565b60405180910390a1505050565b60076020528060005260406000206000915054906101000a900460ff1681565b6000821180156119a557506003548211155b6119ae57600080fd5b600060028111156119c2576119c16132b9565b5b6007600084815260200190815260200160002060009054906101000a900460ff1660028111156119f5576119f46132b9565b5b146119ff57600080fd5b60003390506000600660008581526020019081526020016000206040518060c0016040529081600082015481526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600282018054611a94906133ba565b80601f0160208091040260200160405190810160405280929190818152602001828054611ac0906133ba565b8015611b0d5780601f10611ae257610100808354040283529160200191611b0d565b820191906000526020600020905b815481529060010190602001808311611af057829003601f168201915b50505050508152602001600382015481526020016004820154815260200160058201548152505090508060600151831115611b7d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611b7490613857565b60405180910390fd5b6000816080015184611b8f9190613877565b905080600560008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020541015611c13576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611c0a9061391d565b60405180910390fd5b611c1f85848684612834565b60016009600087815260200190815260200160002060006101000a81548160ff02191690831515021790555060016007600087815260200190815260200160002060006101000a81548160ff02191690836002811115611c8257611c816132b9565b5b021790555082600c600087815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600d60008781526020019081526020016000208190555083600e6000878152602001908152602001600020819055507f7717c4c0039d1e3b8c4e5fea24aea887c3b05f8f7f1e5fe6f041c5b4b58d94a185836020015185856040015188876080015142604051611d509796959493929190613458565b60405180910390a15050505050565b6000600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905090565b600a6020528060005260406000206000915054906101000a900460ff1681565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614611e4b576040517fbf91ead800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600f81908060018154018082558091505060019003906000526020600020016000909190919091509080519060200190611e86929190612ad1565b5050565b6000600660008381526020019081526020016000206040518060c0016040529081600082015481526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600282018054611f1a906133ba565b80601f0160208091040260200160405190810160405280929190818152602001828054611f46906133ba565b8015611f935780601f10611f6857610100808354040283529160200191611f93565b820191906000526020600020905b815481529060010190602001808311611f7657829003601f168201915b50505050508152602001600382015481526020016004820154815260200160058201548152505090506000600c600084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690503373ffffffffffffffffffffffffffffffffffffffff16826020015173ffffffffffffffffffffffffffffffffffffffff16148061205d57503373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16145b61209c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161209390613438565b60405180910390fd5b600160028111156120b0576120af6132b9565b5b6007600085815260200190815260200160002060009054906101000a900460ff1660028111156120e3576120e26132b9565b5b146120ed57600080fd5b6000600d60008581526020019081526020016000205490506000600e600086815260200190815260200160002054905081600560008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461216891906136f6565b600560008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555080600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002085604001516040516121fd91906137f4565b90815260200160405180910390205461221691906136f6565b600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020856040015160405161226791906137f4565b90815260200160405180910390208190555060028081111561228c5761228b6132b9565b5b6007600087815260200190815260200160002060009054906101000a900460ff1660028111156122bf576122be6132b9565b5b505060016008600087815260200190815260200160002060006101000a81548160ff0219169083151502179055507f3f4cd73070ce25691a6ac562de84d1efbdfbb91a5f68c38178f1182736856b09858560200151858760400151858960800151426040516123349796959493929190613458565b60405180910390a15050505050565b7f000000000000000000000000000000000000000000000000000000000000000081565b600e6020528060005260406000206000915090505481565b600b6020528060005260406000206000915054906101000a900460ff1681565b60086020528060005260406000206000915054906101000a900460ff1681565b600180546123cc906133ba565b80601f01602080910402602001604051908101604052809291908181526020018280546123f8906133ba565b80156124455780601f1061241a57610100808354040283529160200191612445565b820191906000526020600020905b81548152906001019060200180831161242857829003601f168201915b505050505081565b6000600660008681526020019081526020016000206040518060c0016040529081600082015481526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016002820180546124dd906133ba565b80601f0160208091040260200160405190810160405280929190818152602001828054612509906133ba565b80156125565780601f1061252b57610100808354040283529160200191612556565b820191906000526020600020905b81548152906001019060200180831161253957829003601f168201915b50505050508152602001600382015481526020016004820154815260200160058201548152505090506064827f00000000000000000000000000000000000000000000000000000000000000006125ad9190613877565b6125b7919061358f565b826125c291906134fd565b91508160056000836020015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461261391906136f6565b60056000836020015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555082600460008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002082604001516040516126ac91906137f4565b9081526020016040518091039020546126c591906136f6565b600460008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020826040015160405161271691906137f4565b9081526020016040518091039020819055506064827f00000000000000000000000000000000000000000000000000000000000000006127569190613877565b612760919061358f565b600560007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546127ca91906136f6565b600560007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505050505050565b6000600660008681526020019081526020016000206040518060c0016040529081600082015481526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016002820180546128c4906133ba565b80601f01602080910402602001604051908101604052809291908181526020018280546128f0906133ba565b801561293d5780601f106129125761010080835404028352916020019161293d565b820191906000526020600020905b81548152906001019060200180831161292057829003601f168201915b505050505081526020016003820154815260200160048201548152602001600582015481525050905081600560008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546129b191906134fd565b600560008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508260046000836020015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208260400151604051612a4a91906137f4565b908152602001604051809103902054612a6391906134fd565b60046000836020015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208260400151604051612ab891906137f4565b9081526020016040518091039020819055505050505050565b828054612add906133ba565b90600052602060002090601f016020900481019282612aff5760008555612b46565b82601f10612b1857805160ff1916838001178555612b46565b82800160010185558215612b46579182015b82811115612b45578251825591602001919060010190612b2a565b5b509050612b539190612b57565b5090565b5b80821115612b70576000816000905550600101612b58565b5090565b6000604051905090565b600080fd5b600080fd5b6000819050919050565b612b9b81612b88565b8114612ba657600080fd5b50565b600081359050612bb881612b92565b92915050565b600060208284031215612bd457612bd3612b7e565b5b6000612be284828501612ba9565b91505092915050565b612bf481612b88565b82525050565b6000602082019050612c0f6000830184612beb565b92915050565b600081519050919050565b600082825260208201905092915050565b60005b83811015612c4f578082015181840152602081019050612c34565b83811115612c5e576000848401525b50505050565b6000601f19601f8301169050919050565b6000612c8082612c15565b612c8a8185612c20565b9350612c9a818560208601612c31565b612ca381612c64565b840191505092915050565b60006020820190508181036000830152612cc88184612c75565b905092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000612cfb82612cd0565b9050919050565b612d0b81612cf0565b8114612d1657600080fd5b50565b600081359050612d2881612d02565b92915050565b600060208284031215612d4457612d43612b7e565b5b6000612d5284828501612d19565b91505092915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b612d9081612b88565b82525050565b6000612da28383612d87565b60208301905092915050565b6000602082019050919050565b6000612dc682612d5b565b612dd08185612d66565b9350612ddb83612d77565b8060005b83811015612e0c578151612df38882612d96565b9750612dfe83612dae565b925050600181019050612ddf565b5085935050505092915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b600082825260208201905092915050565b6000612e6182612c15565b612e6b8185612e45565b9350612e7b818560208601612c31565b612e8481612c64565b840191505092915050565b6000612e9b8383612e56565b905092915050565b6000602082019050919050565b6000612ebb82612e19565b612ec58185612e24565b935083602082028501612ed785612e35565b8060005b85811015612f135784840389528151612ef48582612e8f565b9450612eff83612ea3565b925060208a01995050600181019050612edb565b50829750879550505050505092915050565b60006080820190508181036000830152612f3f8187612dbb565b90508181036020830152612f538186612eb0565b90508181036040830152612f678185612dbb565b90508181036060830152612f7b8184612dbb565b905095945050505050565b60006020820190508181036000830152612fa08184612eb0565b905092915050565b60008115159050919050565b612fbd81612fa8565b82525050565b6000602082019050612fd86000830184612fb4565b92915050565b600080fd5b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b61302082612c64565b810181811067ffffffffffffffff8211171561303f5761303e612fe8565b5b80604052505050565b6000613052612b74565b905061305e8282613017565b919050565b600067ffffffffffffffff82111561307e5761307d612fe8565b5b61308782612c64565b9050602081019050919050565b82818337600083830152505050565b60006130b66130b184613063565b613048565b9050828152602081018484840111156130d2576130d1612fe3565b5b6130dd848285613094565b509392505050565b600082601f8301126130fa576130f9612fde565b5b813561310a8482602086016130a3565b91505092915050565b60006020828403121561312957613128612b7e565b5b600082013567ffffffffffffffff81111561314757613146612b83565b5b613153848285016130e5565b91505092915050565b6000806040838503121561317357613172612b7e565b5b600061318185828601612d19565b925050602083013567ffffffffffffffff8111156131a2576131a1612b83565b5b6131ae858286016130e5565b9150509250929050565b6131c181612cf0565b82525050565b60006020820190506131dc60008301846131b8565b92915050565b600060c0820190506131f76000830189612beb565b61320460208301886131b8565b81810360408301526132168187612c75565b90506132256060830186612beb565b6132326080830185612beb565b61323f60a0830184612beb565b979650505050505050565b60008060006060848603121561326357613262612b7e565b5b600084013567ffffffffffffffff81111561328157613280612b83565b5b61328d868287016130e5565b935050602061329e86828701612ba9565b92505060406132af86828701612ba9565b9150509250925092565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b600381106132f9576132f86132b9565b5b50565b600081905061330a826132e8565b919050565b600061331a826132fc565b9050919050565b61332a8161330f565b82525050565b60006020820190506133456000830184613321565b92915050565b6000806040838503121561336257613361612b7e565b5b600061337085828601612ba9565b925050602061338185828601612ba9565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806133d257607f821691505b602082108114156133e6576133e561338b565b5b50919050565b7f4e6f7420796f7572206f72646572000000000000000000000000000000000000600082015250565b6000613422600e83612c20565b915061342d826133ec565b602082019050919050565b6000602082019050818103600083015261345181613415565b9050919050565b600060e08201905061346d600083018a612beb565b61347a60208301896131b8565b61348760408301886131b8565b81810360608301526134998187612c75565b90506134a86080830186612beb565b6134b560a0830185612beb565b6134c260c0830184612beb565b98975050505050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061350882612b88565b915061351383612b88565b925082821015613526576135256134ce565b5b828203905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b600061359a82612b88565b91506135a583612b88565b9250826135b5576135b4613560565b5b828204905092915050565b60006135cb82612b88565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8214156135fe576135fd6134ce565b5b600182019050919050565b600060608201905061361e60008301866131b8565b61362b6020830185612beb565b6136386040830184612beb565b949350505050565b600081905092915050565b60008190508160005260206000209050919050565b6000815461366d816133ba565b6136778186613640565b9450600182166000811461369257600181146136a3576136d6565b60ff198316865281860193506136d6565b6136ac8561364b565b60005b838110156136ce578154818901526001820191506020810190506136af565b838801955050505b50505092915050565b60006136eb8284613660565b915081905092915050565b600061370182612b88565b915061370c83612b88565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115613741576137406134ce565b5b828201905092915050565b7f4974656d2069732063757272656e746c79206e6f7420616c6c6f776564000000600082015250565b6000613782601d83612c20565b915061378d8261374c565b602082019050919050565b600060208201905081810360008301526137b181613775565b9050919050565b600081905092915050565b60006137ce82612c15565b6137d881856137b8565b93506137e8818560208601612c31565b80840191505092915050565b600061380082846137c3565b915081905092915050565b7f52656475636520746865207175616e7469747900000000000000000000000000600082015250565b6000613841601383612c20565b915061384c8261380b565b602082019050919050565b6000602082019050818103600083015261387081613834565b9050919050565b600061388282612b88565b915061388d83612b88565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff04831182151516156138c6576138c56134ce565b5b828202905092915050565b7f596f75206e656564206d6f726520657468000000000000000000000000000000600082015250565b6000613907601183612c20565b9150613912826138d1565b602082019050919050565b60006020820190508181036000830152613936816138fa565b905091905056fea2646970667358221220e80aea96a7ae02d3e2a0d9ca09fb230f17eee05ed93860c84a5377804cd8bf3c64736f6c63430008080033",
  "deployedBytecode": "",
  "devdoc": {
    "author": "Abolaji",
    "kind": "dev",
    "methods": {},
    "title": "A contract for buying and selling items",
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 115,
        "contract": "contracts/Marketplace.sol:Marketplace",
        "label": "_status",
        "offset": 0,
        "slot": "0",
        "type": "t_uint256"
      },
      {
        "astId": 189,
        "contract": "contracts/Marketplace.sol:Marketplace",
        "label": "item",
        "offset": 0,
        "slot": "1",
        "type": "t_string_storage"
      },
      {
        "astId": 191,
        "contract": "contracts/Marketplace.sol:Marketplace",
        "label": "user",
        "offset": 0,
        "slot": "2",
        "type": "t_address_payable"
      },
      {
        "astId": 193,
        "contract": "contracts/Marketplace.sol:Marketplace",
        "label": "orderCount",
        "offset": 0,
        "slot": "3",
        "type": "t_uint256"
      },
      {
        "astId": 212,
        "contract": "contracts/Marketplace.sol:Marketplace",
        "label": "goods",
        "offset": 0,
        "slot": "4",
        "type": "t_mapping(t_address,t_mapping(t_string_memory_ptr,t_uint256))"
      },
      {
        "astId": 216,
        "contract": "contracts/Marketplace.sol:Marketplace",
        "label": "getBal",
        "offset": 0,
        "slot": "5",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 221,
        "contract": "contracts/Marketplace.sol:Marketplace",
        "label": "orders",
        "offset": 0,
        "slot": "6",
        "type": "t_mapping(t_uint256,t_struct(_order)206_storage)"
      },
      {
        "astId": 226,
        "contract": "contracts/Marketplace.sol:Marketplace",
        "label": "orderStatus",
        "offset": 0,
        "slot": "7",
        "type": "t_mapping(t_uint256,t_enum(ORDER_STATE)353)"
      },
      {
        "astId": 230,
        "contract": "contracts/Marketplace.sol:Marketplace",
        "label": "orderCancelled",
        "offset": 0,
        "slot": "8",
        "type": "t_mapping(t_uint256,t_bool)"
      },
      {
        "astId": 234,
        "contract": "contracts/Marketplace.sol:Marketplace",
        "label": "orderFilled",
        "offset": 0,
        "slot": "9",
        "type": "t_mapping(t_uint256,t_bool)"
      },
      {
        "astId": 238,
        "contract": "contracts/Marketplace.sol:Marketplace",
        "label": "orderCreated",
        "offset": 0,
        "slot": "10",
        "type": "t_mapping(t_uint256,t_bool)"
      },
      {
        "astId": 242,
        "contract": "contracts/Marketplace.sol:Marketplace",
        "label": "orderDelivered",
        "offset": 0,
        "slot": "11",
        "type": "t_mapping(t_uint256,t_bool)"
      },
      {
        "astId": 246,
        "contract": "contracts/Marketplace.sol:Marketplace",
        "label": "Buyers",
        "offset": 0,
        "slot": "12",
        "type": "t_mapping(t_uint256,t_address)"
      },
      {
        "astId": 250,
        "contract": "contracts/Marketplace.sol:Marketplace",
        "label": "filledAmount",
        "offset": 0,
        "slot": "13",
        "type": "t_mapping(t_uint256,t_uint256)"
      },
      {
        "astId": 254,
        "contract": "contracts/Marketplace.sol:Marketplace",
        "label": "filledQuantity",
        "offset": 0,
        "slot": "14",
        "type": "t_mapping(t_uint256,t_uint256)"
      },
      {
        "astId": 257,
        "contract": "contracts/Marketplace.sol:Marketplace",
        "label": "allowedItems",
        "offset": 0,
        "slot": "15",
        "type": "t_array(t_string_storage)dyn_storage"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_address_payable": {
        "encoding": "inplace",
        "label": "address payable",
        "numberOfBytes": "20"
      },
      "t_array(t_string_storage)dyn_storage": {
        "base": "t_string_storage",
        "encoding": "dynamic_array",
        "label": "string[]",
        "numberOfBytes": "32"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_enum(ORDER_STATE)353": {
        "encoding": "inplace",
        "label": "enum Marketplace.ORDER_STATE",
        "numberOfBytes": "1"
      },
      "t_mapping(t_address,t_mapping(t_string_memory_ptr,t_uint256))": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => mapping(string => uint256))",
        "numberOfBytes": "32",
        "value": "t_mapping(t_string_memory_ptr,t_uint256)"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_mapping(t_string_memory_ptr,t_uint256)": {
        "encoding": "mapping",
        "key": "t_string_memory_ptr",
        "label": "mapping(string => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_mapping(t_uint256,t_address)": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => address)",
        "numberOfBytes": "32",
        "value": "t_address"
      },
      "t_mapping(t_uint256,t_bool)": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => bool)",
        "numberOfBytes": "32",
        "value": "t_bool"
      },
      "t_mapping(t_uint256,t_enum(ORDER_STATE)353)": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => enum Marketplace.ORDER_STATE)",
        "numberOfBytes": "32",
        "value": "t_enum(ORDER_STATE)353"
      },
      "t_mapping(t_uint256,t_struct(_order)206_storage)": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => struct Marketplace._order)",
        "numberOfBytes": "32",
        "value": "t_struct(_order)206_storage"
      },
      "t_mapping(t_uint256,t_uint256)": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_string_memory_ptr": {
        "encoding": "bytes",
        "label": "string",
        "numberOfBytes": "32"
      },
      "t_string_storage": {
        "encoding": "bytes",
        "label": "string",
        "numberOfBytes": "32"
      },
      "t_struct(_order)206_storage": {
        "encoding": "inplace",
        "label": "struct Marketplace._order",
        "members": [
          {
            "astId": 195,
            "contract": "contracts/Marketplace.sol:Marketplace",
            "label": "id",
            "offset": 0,
            "slot": "0",
            "type": "t_uint256"
          },
          {
            "astId": 197,
            "contract": "contracts/Marketplace.sol:Marketplace",
            "label": "seller",
            "offset": 0,
            "slot": "1",
            "type": "t_address"
          },
          {
            "astId": 199,
            "contract": "contracts/Marketplace.sol:Marketplace",
            "label": "item",
            "offset": 0,
            "slot": "2",
            "type": "t_string_storage"
          },
          {
            "astId": 201,
            "contract": "contracts/Marketplace.sol:Marketplace",
            "label": "qtty_to_sell",
            "offset": 0,
            "slot": "3",
            "type": "t_uint256"
          },
          {
            "astId": 203,
            "contract": "contracts/Marketplace.sol:Marketplace",
            "label": "price",
            "offset": 0,
            "slot": "4",
            "type": "t_uint256"
          },
          {
            "astId": 205,
            "contract": "contracts/Marketplace.sol:Marketplace",
            "label": "timestamp",
            "offset": 0,
            "slot": "5",
            "type": "t_uint256"
          }
        ],
        "numberOfBytes": "192"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}