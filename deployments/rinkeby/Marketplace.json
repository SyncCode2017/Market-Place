{
  "address": "0xAe3259205f74090db76Fe1923A081A905000B38a",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_feeAccount",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_feePercent",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "Marketplace__NotOwner",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "seller",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "buyer",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "item",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "qtty_bought",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "price",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "timestamp",
          "type": "uint256"
        }
      ],
      "name": "CancelFilledOrder",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "seller",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "item",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "qtty_to_sell",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "price",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "timestamp",
          "type": "uint256"
        }
      ],
      "name": "CancelOpenOrder",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "bal",
          "type": "uint256"
        }
      ],
      "name": "Deposit",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "seller",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "item",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "qtty_to_sell",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "price",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "timestamp",
          "type": "uint256"
        }
      ],
      "name": "OrderCreated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "seller",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "buyer",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "item",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "qtty_bought",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "price",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "timestamp",
          "type": "uint256"
        }
      ],
      "name": "OrderDelivered",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "seller",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "buyer",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "item",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "qtty_bought",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "price",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "timestamp",
          "type": "uint256"
        }
      ],
      "name": "OrderFilled",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "bal",
          "type": "uint256"
        }
      ],
      "name": "Withdraw",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "Buyers",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_id",
          "type": "uint256"
        }
      ],
      "name": "OrderReceived",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_item",
          "type": "string"
        }
      ],
      "name": "addAllowedItems",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "allowedItems",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_id",
          "type": "uint256"
        }
      ],
      "name": "cancelFilledOrder",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_id",
          "type": "uint256"
        }
      ],
      "name": "cancelOpenOrder",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "depositEther",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "feeAccount",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "feePercent",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_id",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_quantity",
          "type": "uint256"
        }
      ],
      "name": "fillOrder",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "filledAmount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "filledQuantity",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "getBal",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "name": "goods",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "i_owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "item",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_item",
          "type": "string"
        }
      ],
      "name": "itemIsAllowed",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_item",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "_quantity",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_price",
          "type": "uint256"
        }
      ],
      "name": "makeOrder",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_user",
          "type": "address"
        }
      ],
      "name": "myBalance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "open_order",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "id",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "seller",
              "type": "address"
            },
            {
              "internalType": "string",
              "name": "item",
              "type": "string"
            },
            {
              "internalType": "uint256",
              "name": "qtty_to_sell",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "price",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "timestamp",
              "type": "uint256"
            }
          ],
          "internalType": "struct Marketplace._order[]",
          "name": "",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "orderCancelled",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "orderCount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "orderCreated",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "orderDelivered",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "orderFilled",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "orderStatus",
      "outputs": [
        {
          "internalType": "enum Marketplace.ORDER_STATE",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "orders",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "seller",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "item",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "qtty_to_sell",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "price",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "timestamp",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "withdrawEther",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0x470170d2e2e2c86dc1f0c412fbe0f107d1aa3593a99220c658d0a0a2d446758f",
  "receipt": {
    "to": null,
    "from": "0x0b9412DF2c8802E7fCc2D000392f16fD0df2bfEE",
    "contractAddress": "0xAe3259205f74090db76Fe1923A081A905000B38a",
    "transactionIndex": 16,
    "gasUsed": "3082278",
    "logsBloom": "0x
    "blockHash": "0x3d67f04772f0bf4c6a018e725ca29e5754581af022a3e73dff0512bf23732477",
    "transactionHash": "0x470170d2e2e2c86dc1f0c412fbe0f107d1aa3593a99220c658d0a0a2d446758f",
    "logs": [],
    "blockNumber": 10845139,
    "cumulativeGasUsed": "6714760",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x0b9412DF2c8802E7fCc2D000392f16fD0df2bfEE",
    5
  ],
  "numDeployments": 6,
  "solcInputHash": "abef870383c8e4ed7f57c0d6c737bd9b",
  "metadata": "{\"compiler\":{\"version\":\"0.8.8+commit.dddeac2f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_feeAccount\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_feePercent\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"Marketplace__NotOwner\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"seller\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"buyer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"item\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"qtty_bought\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"CancelFilledOrder\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"seller\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"item\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"qtty_to_sell\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"CancelOpenOrder\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"bal\",\"type\":\"uint256\"}],\"name\":\"Deposit\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"seller\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"item\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"qtty_to_sell\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"OrderCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"seller\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"buyer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"item\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"qtty_bought\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"OrderDelivered\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"seller\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"buyer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"item\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"qtty_bought\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"OrderFilled\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"bal\",\"type\":\"uint256\"}],\"name\":\"Withdraw\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"Buyers\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_id\",\"type\":\"uint256\"}],\"name\":\"OrderReceived\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_item\",\"type\":\"string\"}],\"name\":\"addAllowedItems\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"allowedItems\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_id\",\"type\":\"uint256\"}],\"name\":\"cancelFilledOrder\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_id\",\"type\":\"uint256\"}],\"name\":\"cancelOpenOrder\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"depositEther\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"feeAccount\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"feePercent\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_quantity\",\"type\":\"uint256\"}],\"name\":\"fillOrder\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"filledAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"filledQuantity\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"getBal\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"goods\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"i_owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"item\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_item\",\"type\":\"string\"}],\"name\":\"itemIsAllowed\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_item\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"_quantity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_price\",\"type\":\"uint256\"}],\"name\":\"makeOrder\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"}],\"name\":\"myBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"open_order\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"seller\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"item\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"qtty_to_sell\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"internalType\":\"struct Marketplace._order[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"orderCancelled\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"orderCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"orderCreated\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"orderDelivered\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"orderFilled\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"orderStatus\",\"outputs\":[{\"internalType\":\"enum Marketplace.ORDER_STATE\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"orders\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"seller\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"item\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"qtty_to_sell\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"withdrawEther\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Abolaji\",\"kind\":\"dev\",\"methods\":{},\"title\":\"A contract for buying and selling items\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Marketplace.sol\":\"Marketplace\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (access/Ownable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    constructor() {\\n        _transferOwnership(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby removing any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0x24e0364e503a9bbde94c715d26573a76f14cd2a202d45f96f52134ab806b67b9\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\"},\"contracts/Marketplace.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.8;\\n\\nimport \\\"@openzeppelin/contracts/access/Ownable.sol\\\";\\n\\nerror Marketplace__NotOwner();\\n\\n/** @title A contract for buying and selling items\\n *  @author Abolaji\\n *  @dev\\n */\\n\\ncontract Marketplace {\\n    //Variables\\n    address public immutable feeAccount;\\n    uint256 public immutable feePercent;\\n    address public immutable i_owner;\\n    string public item;\\n    string[] public allowedItems;\\n    address payable internal user;\\n\\n    struct _order {\\n        uint256 id;\\n        address seller;\\n        string item;\\n        uint256 qtty_to_sell;\\n        uint256 price;\\n        uint256 timestamp;\\n    }\\n\\n    mapping(address => mapping(string => uint256)) public goods;\\n\\n    // store the order\\n    mapping(address => uint256) public getBal;\\n    mapping(uint256 => _order) public orders;\\n    uint256 public orderCount;\\n    mapping(uint256 => ORDER_STATE) public orderStatus;\\n    mapping(uint256 => bool) public orderCancelled;\\n    mapping(uint256 => bool) public orderFilled;\\n    mapping(uint256 => bool) public orderCreated;\\n    mapping(uint256 => bool) public orderDelivered;\\n    mapping(uint256 => address) public Buyers;\\n    mapping(uint256 => uint256) public filledAmount;\\n    mapping(uint256 => uint256) public filledQuantity;\\n\\n    //Events\\n    event Deposit(address user, uint256 amount, uint256 bal);\\n    event Withdraw(address user, uint256 amount, uint256 bal);\\n    event OrderCreated(\\n        uint256 id,\\n        address seller,\\n        string item,\\n        uint256 qtty_to_sell,\\n        uint256 price,\\n        uint256 timestamp\\n    );\\n    event OrderFilled(\\n        uint256 id,\\n        address seller,\\n        address buyer,\\n        string item,\\n        uint256 qtty_bought,\\n        uint256 price,\\n        uint256 timestamp\\n    );\\n    event OrderDelivered(\\n        uint256 id,\\n        address seller,\\n        address buyer,\\n        string item,\\n        uint256 qtty_bought,\\n        uint256 price,\\n        uint256 timestamp\\n    );\\n    event CancelOpenOrder(\\n        uint256 id,\\n        address seller,\\n        string item,\\n        uint256 qtty_to_sell,\\n        uint256 price,\\n        uint256 timestamp\\n    );\\n    event CancelFilledOrder(\\n        uint256 id,\\n        address seller,\\n        address buyer,\\n        string item,\\n        uint256 qtty_bought,\\n        uint256 price,\\n        uint256 timestamp\\n    );\\n\\n    enum ORDER_STATE {\\n        OPEN,\\n        FILLED,\\n        CLOSED\\n    }\\n\\n    constructor(address _feeAccount, uint256 _feePercent) {\\n        feeAccount = _feeAccount;\\n        feePercent = _feePercent;\\n        i_owner = msg.sender;\\n    }\\n\\n    function depositEther() public payable {\\n        getBal[msg.sender] = getBal[msg.sender] + msg.value;\\n\\n        emit Deposit(msg.sender, msg.value, getBal[msg.sender]);\\n    }\\n\\n    modifier onlyOwner() {\\n        // require(msg.sender == i_owner);\\n        if (msg.sender != i_owner) revert Marketplace__NotOwner();\\n        _;\\n    }\\n\\n    // //Fallback: reverts if Ether is sent to this smart contract by mistake\\n    // function() external {\\n    //     revert();\\n    // }\\n\\n    function withdrawEther(uint256 _amount) public {\\n        user = payable(msg.sender);\\n        require(getBal[msg.sender] >= _amount);\\n        getBal[msg.sender] = getBal[msg.sender] - _amount;\\n        user.transfer(_amount);\\n        emit Withdraw(msg.sender, _amount, getBal[msg.sender]);\\n    }\\n\\n    function myBalance(address _user) public view returns (uint256) {\\n        return getBal[_user];\\n    }\\n\\n    // Create an order\\n    function makeOrder(\\n        string memory _item,\\n        uint256 _quantity,\\n        uint256 _price\\n    ) public {\\n        require(itemIsAllowed(_item), \\\"Item is currently not allowed\\\");\\n        orderCount = orderCount + 1;\\n        orderStatus[orderCount] = ORDER_STATE.CLOSED;\\n        orders[orderCount] = _order(\\n            orderCount,\\n            msg.sender,\\n            _item,\\n            _quantity,\\n            _price,\\n            block.timestamp\\n        );\\n        orderStatus[orderCount] = ORDER_STATE.OPEN;\\n        goods[msg.sender][_item] = _quantity;\\n        emit OrderCreated(\\n            orderCount,\\n            msg.sender,\\n            _item,\\n            _quantity,\\n            _price,\\n            block.timestamp\\n        );\\n    }\\n\\n    // Fill an order as a buyer\\n    function fillOrder(uint256 _id, uint256 _quantity) public {\\n        require(_id > 0 && _id <= orderCount);\\n        require(orderStatus[_id] == ORDER_STATE.OPEN);\\n\\n        address _buyer = msg.sender;\\n\\n        // Fetch the order\\n        _order memory order = orders[_id];\\n        require(_quantity <= order.qtty_to_sell, \\\"Reduce the quantity\\\");\\n        uint256 amount = _quantity * order.price;\\n        require(getBal[_buyer] >= amount, \\\"You need more eth\\\");\\n\\n        _orderBond(_id, _buyer, _quantity, amount);\\n\\n        // Mark order as filled\\n        orderFilled[_id] = true;\\n        orderStatus[_id] = ORDER_STATE.FILLED;\\n        Buyers[_id] = _buyer;\\n        filledAmount[_id] = amount;\\n        filledQuantity[_id] = _quantity;\\n\\n        emit OrderFilled(\\n            _id,\\n            order.seller,\\n            _buyer,\\n            order.item,\\n            _quantity,\\n            order.price,\\n            block.timestamp\\n        );\\n    }\\n\\n    //Getting orders that are still for buying\\n    function open_order() public view returns (_order[] memory) {\\n        _order[] memory OpenOrder;\\n        for (uint256 i = 1; i <= orderCount; i++) {\\n            if (orderStatus[i] == ORDER_STATE.OPEN) {\\n                OpenOrder[i] = orders[i];\\n            }\\n        }\\n        return OpenOrder;\\n    }\\n\\n    // When the buyer confirms the receipt of the items, the money is released to the seller\\n    function OrderReceived(uint256 _id) public {\\n        address _buyer = Buyers[_id];\\n        _order memory order = orders[_id];\\n        require(orderStatus[_id] == ORDER_STATE.FILLED);\\n        require(msg.sender == _buyer, \\\"Not your order\\\");\\n        uint256 amount = filledAmount[_id];\\n        uint256 quantity = filledQuantity[_id];\\n\\n        _orderCompleted(_id, _buyer, quantity, amount);\\n        orderStatus[_id] = ORDER_STATE.CLOSED;\\n        emit OrderDelivered(\\n            _id,\\n            order.seller,\\n            _buyer,\\n            order.item,\\n            quantity,\\n            order.price,\\n            block.timestamp\\n        );\\n    }\\n\\n    function cancelOpenOrder(uint256 _id) public {\\n        _order memory order = orders[_id];\\n        require(order.seller == msg.sender, \\\"Not your order\\\"); // must be \\\"my\\\" order\\n        require(orderStatus[_id] == ORDER_STATE.OPEN);\\n\\n        orderCancelled[_id] = true;\\n        orderStatus[_id] == ORDER_STATE.CLOSED;\\n        emit CancelOpenOrder(\\n            _id,\\n            order.seller,\\n            order.item,\\n            order.qtty_to_sell,\\n            order.price,\\n            block.timestamp\\n        );\\n    }\\n\\n    function cancelFilledOrder(uint256 _id) public {\\n        _order memory order = orders[_id];\\n        address _buyer = Buyers[_id];\\n        require(\\n            order.seller == msg.sender || _buyer == msg.sender,\\n            \\\"Not your order\\\"\\n        ); // must be \\\"my\\\" order\\n        require(orderStatus[_id] == ORDER_STATE.FILLED);\\n        uint256 _amount = filledAmount[_id];\\n        uint256 _quantity = filledQuantity[_id];\\n\\n        getBal[_buyer] = getBal[_buyer] + _amount;\\n        goods[msg.sender][order.item] =\\n            goods[msg.sender][order.item] +\\n            _quantity;\\n        orderStatus[_id] == ORDER_STATE.CLOSED;\\n        orderCancelled[_id] = true;\\n        emit CancelFilledOrder(\\n            _id,\\n            order.seller,\\n            _buyer,\\n            order.item,\\n            _quantity,\\n            order.price,\\n            block.timestamp\\n        );\\n    }\\n\\n    function _orderBond(\\n        uint256 _id,\\n        address _buyer,\\n        uint256 _quantity,\\n        uint256 _amount\\n    ) internal {\\n        _order memory order = orders[_id];\\n        // place order\\n        getBal[_buyer] = getBal[_buyer] - _amount;\\n        goods[msg.sender][order.item] =\\n            goods[msg.sender][order.item] -\\n            _quantity;\\n    }\\n\\n    function _orderCompleted(\\n        uint256 _id,\\n        address _buyer,\\n        uint256 _quantity,\\n        uint256 _amount\\n    ) internal {\\n        _order memory order = orders[_id];\\n        _amount = _amount - ((feePercent * _amount) / 100);\\n\\n        getBal[order.seller] = getBal[order.seller] + _amount;\\n        goods[_buyer][order.item] = goods[_buyer][order.item] + _quantity;\\n        getBal[feeAccount] =\\n            getBal[feeAccount] +\\n            ((feePercent * _amount) / 100);\\n    }\\n\\n    function addAllowedItems(string memory _item) public onlyOwner {\\n        allowedItems.push(_item);\\n    }\\n\\n    function itemIsAllowed(string memory _item) public view returns (bool) {\\n        for (\\n            uint256 allowedItemIndex = 0;\\n            allowedItemIndex < allowedItems.length;\\n            allowedItemIndex++\\n        ) {\\n            if (\\n                keccak256(bytes(allowedItems[allowedItemIndex])) ==\\n                keccak256(bytes(_item))\\n            ) {\\n                return true;\\n            }\\n        }\\n        return false;\\n    }\\n}\\n\",\"keccak256\":\"0x70825e6460b9cd0879d92e7efeab252b80fc94cc60a6a60d1469ced744b7561a\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x60e06040523480156200001157600080fd5b50604051620038ca380380620038ca83398181016040528101906200003791906200015a565b8173ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff1660601b815250508060a081815250503373ffffffffffffffffffffffffffffffffffffffff1660c08173ffffffffffffffffffffffffffffffffffffffff1660601b815250505050620001a1565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620000e782620000ba565b9050919050565b620000f981620000da565b81146200010557600080fd5b50565b6000815190506200011981620000ee565b92915050565b6000819050919050565b62000134816200011f565b81146200014057600080fd5b50565b600081519050620001548162000129565b92915050565b60008060408385031215620001745762000173620000b5565b5b6000620001848582860162000108565b9250506020620001978582860162000143565b9150509250929050565b60805160601c60a05160c05160601c6136d0620001fa60003960008181611ba50152612122015260008181610fa801528181612361015261250a015260008181610f840152818161254301526125ad01526136d06000f3fe6080604052600436106101b75760003560e01c80639b40ae7f116100ec578063cb3968b51161008a578063dbdea44c11610064578063dbdea44c14610660578063e742a1821461069d578063e9c18966146106da578063f2a4a82e14610717576101b7565b8063cb3968b5146105e3578063d55a7bcb1461060c578063dba6335f14610635576101b7565b8063a8e87b8a116100c6578063a8e87b8a14610517578063bff4945014610540578063c37dfc5b1461057d578063c94c2b8d146105a6576101b7565b80639b40ae7f1461045b578063a443df9414610498578063a85c38ef146104d5576101b7565b80634a93e0da116101595780637fd6f15c116101335780637fd6f15c146103c0578063812538e1146103eb578063817a5e141461041457806398ea5fca14610451576101b7565b80634a93e0da1461031b5780634f1658731461035857806365e17c9d14610395576101b7565b80632e6e91aa116101955780632e6e91aa1461024d5780632fa780851461028a578063364315dd146102c75780633bed33ce146102f2576101b7565b80630da1e350146101bc5780631df9ccaa146101e55780632453ffa814610222575b600080fd5b3480156101c857600080fd5b506101e360048036038101906101de9190612993565b610742565b005b3480156101f157600080fd5b5061020c60048036038101906102079190612993565b610a39565b60405161021991906129cf565b60405180910390f35b34801561022e57600080fd5b50610237610a51565b60405161024491906129cf565b60405180910390f35b34801561025957600080fd5b50610274600480360381019061026f9190612993565b610a57565b6040516102819190612a83565b60405180910390f35b34801561029657600080fd5b506102b160048036038101906102ac9190612b03565b610b03565b6040516102be91906129cf565b60405180910390f35b3480156102d357600080fd5b506102dc610b1b565b6040516102e99190612ce3565b60405180910390f35b3480156102fe57600080fd5b5061031960048036038101906103149190612993565b610ce3565b005b34801561032757600080fd5b50610342600480360381019061033d9190612993565b610ee4565b60405161034f9190612d20565b60405180910390f35b34801561036457600080fd5b5061037f600480360381019061037a9190612e70565b610f04565b60405161038c9190612d20565b60405180910390f35b3480156103a157600080fd5b506103aa610f82565b6040516103b79190612ec8565b60405180910390f35b3480156103cc57600080fd5b506103d5610fa6565b6040516103e291906129cf565b60405180910390f35b3480156103f757600080fd5b50610412600480360381019061040d9190612993565b610fca565b005b34801561042057600080fd5b5061043b60048036038101906104369190612b03565b611288565b60405161044891906129cf565b60405180910390f35b6104596112d1565b005b34801561046757600080fd5b50610482600480360381019061047d9190612ee3565b6113db565b60405161048f91906129cf565b60405180910390f35b3480156104a457600080fd5b506104bf60048036038101906104ba9190612993565b611416565b6040516104cc9190612ec8565b60405180910390f35b3480156104e157600080fd5b506104fc60048036038101906104f79190612993565b611449565b60405161050e96959493929190612f3f565b60405180910390f35b34801561052357600080fd5b5061053e60048036038101906105399190612fa7565b61152d565b005b34801561054c57600080fd5b5061056760048036038101906105629190612993565b611797565b604051610574919061308d565b60405180910390f35b34801561058957600080fd5b506105a4600480360381019061059f91906130a8565b6117b7565b005b3480156105b257600080fd5b506105cd60048036038101906105c89190612993565b611b83565b6040516105da9190612d20565b60405180910390f35b3480156105ef57600080fd5b5061060a60048036038101906106059190612e70565b611ba3565b005b34801561061857600080fd5b50610633600480360381019061062e9190612993565b611c67565b005b34801561064157600080fd5b5061064a612120565b6040516106579190612ec8565b60405180910390f35b34801561066c57600080fd5b5061068760048036038101906106829190612993565b612144565b60405161069491906129cf565b60405180910390f35b3480156106a957600080fd5b506106c460048036038101906106bf9190612993565b61215c565b6040516106d19190612d20565b60405180910390f35b3480156106e657600080fd5b5061070160048036038101906106fc9190612993565b61217c565b60405161070e9190612d20565b60405180910390f35b34801561072357600080fd5b5061072c61219c565b6040516107399190612a83565b60405180910390f35b6000600c600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690506000600560008481526020019081526020016000206040518060c0016040529081600082015481526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200160028201805461080a90613117565b80601f016020809104026020016040519081016040528092919081815260200182805461083690613117565b80156108835780601f1061085857610100808354040283529160200191610883565b820191906000526020600020905b81548152906001019060200180831161086657829003601f168201915b5050505050815260200160038201548152602001600482015481526020016005820154815250509050600160028111156108c0576108bf613016565b5b6007600085815260200190815260200160002060009054906101000a900460ff1660028111156108f3576108f2613016565b5b146108fd57600080fd5b8173ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461096b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161096290613195565b60405180910390fd5b6000600d60008581526020019081526020016000205490506000600e60008681526020019081526020016000205490506109a78585838561222a565b60026007600087815260200190815260200160002060006101000a81548160ff021916908360028111156109de576109dd613016565b5b02179055507f7dfc2e96d4e9bfa63e26f3d2a2c37873074e8ad79d74ea908e97c8ae7d796a9785846020015186866040015185886080015142604051610a2a97969594939291906131b5565b60405180910390a15050505050565b600d6020528060005260406000206000915090505481565b60065481565b60018181548110610a6757600080fd5b906000526020600020016000915090508054610a8290613117565b80601f0160208091040260200160405190810160405280929190818152602001828054610aae90613117565b8015610afb5780601f10610ad057610100808354040283529160200191610afb565b820191906000526020600020905b815481529060010190602001808311610ade57829003601f168201915b505050505081565b60046020528060005260406000206000915090505481565b6060806000600190505b6006548111610cdb5760006002811115610b4257610b41613016565b5b6007600083815260200190815260200160002060009054906101000a900460ff166002811115610b7557610b74613016565b5b1415610cc857600560008281526020019081526020016000206040518060c0016040529081600082015481526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600282018054610c0990613117565b80601f0160208091040260200160405190810160405280929190818152602001828054610c3590613117565b8015610c825780601f10610c5757610100808354040283529160200191610c82565b820191906000526020600020905b815481529060010190602001808311610c6557829003601f168201915b505050505081526020016003820154815260200160048201548152602001600582015481525050828281518110610cbc57610cbb61322b565b5b60200260200101819052505b8080610cd390613289565b915050610b25565b508091505090565b33600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020541015610d7057600080fd5b80600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610dbb91906132d2565b600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f19350505050158015610e66573d6000803e3d6000fd5b507ff279e6a1f5e320cca91135676d9cb6e44ca8a08c0b88342bcdb1144f6511b5683382600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054604051610ed993929190613306565b60405180910390a150565b60096020528060005260406000206000915054906101000a900460ff1681565b600080600090505b600180549050811015610f7757828051906020012060018281548110610f3557610f3461322b565b5b90600052602060002001604051610f4c91906133dc565b60405180910390201415610f64576001915050610f7d565b8080610f6f90613289565b915050610f0c565b50600090505b919050565b7f000000000000000000000000000000000000000000000000000000000000000081565b7f000000000000000000000000000000000000000000000000000000000000000081565b6000600560008381526020019081526020016000206040518060c0016040529081600082015481526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200160028201805461105a90613117565b80601f016020809104026020016040519081016040528092919081815260200182805461108690613117565b80156110d35780601f106110a8576101008083540402835291602001916110d3565b820191906000526020600020905b8154815290600101906020018083116110b657829003601f168201915b50505050508152602001600382015481526020016004820154815260200160058201548152505090503373ffffffffffffffffffffffffffffffffffffffff16816020015173ffffffffffffffffffffffffffffffffffffffff161461116e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161116590613195565b60405180910390fd5b6000600281111561118257611181613016565b5b6007600084815260200190815260200160002060009054906101000a900460ff1660028111156111b5576111b4613016565b5b146111bf57600080fd5b60016008600084815260200190815260200160002060006101000a81548160ff0219169083151502179055506002808111156111fe576111fd613016565b5b6007600084815260200190815260200160002060009054906101000a900460ff16600281111561123157611230613016565b5b50507f605e46eb1441c0674ff6584b5ea1ba9a7f5d53198deaaf2a04338b577b38ab3b8282602001518360400151846060015185608001514260405161127c96959493929190612f3f565b60405180910390a15050565b6000600460008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b34600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461131c91906133f3565b600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055507f90890809c654f11d6e72a28fa60149770a0d11ec6c92319d6ceb2bb0a4ea1a153334600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546040516113d193929190613306565b60405180910390a1565b600360205281600052604060002081805160208101820180518482526020830160208501208183528095505050505050600091509150505481565b600c6020528060005260406000206000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60056020528060005260406000206000915090508060000154908060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169080600201805461149890613117565b80601f01602080910402602001604051908101604052809291908181526020018280546114c490613117565b80156115115780601f106114e657610100808354040283529160200191611511565b820191906000526020600020905b8154815290600101906020018083116114f457829003601f168201915b5050505050908060030154908060040154908060050154905086565b61153683610f04565b611575576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161156c90613495565b60405180910390fd5b600160065461158491906133f3565b600681905550600260076000600654815260200190815260200160002060006101000a81548160ff021916908360028111156115c3576115c2613016565b5b02179055506040518060c0016040528060065481526020013373ffffffffffffffffffffffffffffffffffffffff168152602001848152602001838152602001828152602001428152506005600060065481526020019081526020016000206000820151816000015560208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550604082015181600201908051906020019061168f9291906128a6565b50606082015181600301556080820151816004015560a08201518160050155905050600060076000600654815260200190815260200160002060006101000a81548160ff021916908360028111156116ea576116e9613016565b5b021790555081600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208460405161173d91906134f1565b9081526020016040518091039020819055507f9193cdda35362c821e3d4d240a5fcb0093ad192ac99028d18e5dff3414ee7871600654338585854260405161178a96959493929190612f3f565b60405180910390a1505050565b60076020528060005260406000206000915054906101000a900460ff1681565b6000821180156117c957506006548211155b6117d257600080fd5b600060028111156117e6576117e5613016565b5b6007600084815260200190815260200160002060009054906101000a900460ff16600281111561181957611818613016565b5b1461182357600080fd5b60003390506000600560008581526020019081526020016000206040518060c0016040529081600082015481526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016002820180546118b890613117565b80601f01602080910402602001604051908101604052809291908181526020018280546118e490613117565b80156119315780601f1061190657610100808354040283529160200191611931565b820191906000526020600020905b81548152906001019060200180831161191457829003601f168201915b505050505081526020016003820154815260200160048201548152602001600582015481525050905080606001518311156119a1576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161199890613554565b60405180910390fd5b60008160800151846119b39190613574565b905080600460008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020541015611a37576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611a2e9061361a565b60405180910390fd5b611a4385848684612611565b60016009600087815260200190815260200160002060006101000a81548160ff02191690831515021790555060016007600087815260200190815260200160002060006101000a81548160ff02191690836002811115611aa657611aa5613016565b5b021790555082600c600087815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600d60008781526020019081526020016000208190555083600e6000878152602001908152602001600020819055507f7717c4c0039d1e3b8c4e5fea24aea887c3b05f8f7f1e5fe6f041c5b4b58d94a185836020015185856040015188876080015142604051611b7497969594939291906131b5565b60405180910390a15050505050565b600a6020528060005260406000206000915054906101000a900460ff1681565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614611c28576040517fbf91ead800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600181908060018154018082558091505060019003906000526020600020016000909190919091509080519060200190611c639291906128a6565b5050565b6000600560008381526020019081526020016000206040518060c0016040529081600082015481526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600282018054611cf790613117565b80601f0160208091040260200160405190810160405280929190818152602001828054611d2390613117565b8015611d705780601f10611d4557610100808354040283529160200191611d70565b820191906000526020600020905b815481529060010190602001808311611d5357829003601f168201915b50505050508152602001600382015481526020016004820154815260200160058201548152505090506000600c600084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690503373ffffffffffffffffffffffffffffffffffffffff16826020015173ffffffffffffffffffffffffffffffffffffffff161480611e3a57503373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16145b611e79576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611e7090613195565b60405180910390fd5b60016002811115611e8d57611e8c613016565b5b6007600085815260200190815260200160002060009054906101000a900460ff166002811115611ec057611ebf613016565b5b14611eca57600080fd5b6000600d60008581526020019081526020016000205490506000600e600086815260200190815260200160002054905081600460008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054611f4591906133f3565b600460008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555080600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208560400151604051611fda91906134f1565b908152602001604051809103902054611ff391906133f3565b600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020856040015160405161204491906134f1565b90815260200160405180910390208190555060028081111561206957612068613016565b5b6007600087815260200190815260200160002060009054906101000a900460ff16600281111561209c5761209b613016565b5b505060016008600087815260200190815260200160002060006101000a81548160ff0219169083151502179055507f3f4cd73070ce25691a6ac562de84d1efbdfbb91a5f68c38178f1182736856b098585602001518587604001518589608001514260405161211197969594939291906131b5565b60405180910390a15050505050565b7f000000000000000000000000000000000000000000000000000000000000000081565b600e6020528060005260406000206000915090505481565b600b6020528060005260406000206000915054906101000a900460ff1681565b60086020528060005260406000206000915054906101000a900460ff1681565b600080546121a990613117565b80601f01602080910402602001604051908101604052809291908181526020018280546121d590613117565b80156122225780601f106121f757610100808354040283529160200191612222565b820191906000526020600020905b81548152906001019060200180831161220557829003601f168201915b505050505081565b6000600560008681526020019081526020016000206040518060c0016040529081600082015481526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016002820180546122ba90613117565b80601f01602080910402602001604051908101604052809291908181526020018280546122e690613117565b80156123335780601f1061230857610100808354040283529160200191612333565b820191906000526020600020905b81548152906001019060200180831161231657829003601f168201915b50505050508152602001600382015481526020016004820154815260200160058201548152505090506064827f000000000000000000000000000000000000000000000000000000000000000061238a9190613574565b6123949190613669565b8261239f91906132d2565b91508160046000836020015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546123f091906133f3565b60046000836020015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555082600360008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020826040015160405161248991906134f1565b9081526020016040518091039020546124a291906133f3565b600360008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002082604001516040516124f391906134f1565b9081526020016040518091039020819055506064827f00000000000000000000000000000000000000000000000000000000000000006125339190613574565b61253d9190613669565b600460007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546125a791906133f3565b600460007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505050505050565b6000600560008681526020019081526020016000206040518060c0016040529081600082015481526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016002820180546126a190613117565b80601f01602080910402602001604051908101604052809291908181526020018280546126cd90613117565b801561271a5780601f106126ef5761010080835404028352916020019161271a565b820191906000526020600020905b8154815290600101906020018083116126fd57829003601f168201915b505050505081526020016003820154815260200160048201548152602001600582015481525050905081600460008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461278e91906132d2565b600460008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555082600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020826040015160405161282391906134f1565b90815260200160405180910390205461283c91906132d2565b600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020826040015160405161288d91906134f1565b9081526020016040518091039020819055505050505050565b8280546128b290613117565b90600052602060002090601f0160209004810192826128d4576000855561291b565b82601f106128ed57805160ff191683800117855561291b565b8280016001018555821561291b579182015b8281111561291a5782518255916020019190600101906128ff565b5b509050612928919061292c565b5090565b5b8082111561294557600081600090555060010161292d565b5090565b6000604051905090565b600080fd5b600080fd5b6000819050919050565b6129708161295d565b811461297b57600080fd5b50565b60008135905061298d81612967565b92915050565b6000602082840312156129a9576129a8612953565b5b60006129b78482850161297e565b91505092915050565b6129c98161295d565b82525050565b60006020820190506129e460008301846129c0565b92915050565b600081519050919050565b600082825260208201905092915050565b60005b83811015612a24578082015181840152602081019050612a09565b83811115612a33576000848401525b50505050565b6000601f19601f8301169050919050565b6000612a55826129ea565b612a5f81856129f5565b9350612a6f818560208601612a06565b612a7881612a39565b840191505092915050565b60006020820190508181036000830152612a9d8184612a4a565b905092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000612ad082612aa5565b9050919050565b612ae081612ac5565b8114612aeb57600080fd5b50565b600081359050612afd81612ad7565b92915050565b600060208284031215612b1957612b18612953565b5b6000612b2784828501612aee565b91505092915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b612b658161295d565b82525050565b612b7481612ac5565b82525050565b600082825260208201905092915050565b6000612b96826129ea565b612ba08185612b7a565b9350612bb0818560208601612a06565b612bb981612a39565b840191505092915050565b600060c083016000830151612bdc6000860182612b5c565b506020830151612bef6020860182612b6b565b5060408301518482036040860152612c078282612b8b565b9150506060830151612c1c6060860182612b5c565b506080830151612c2f6080860182612b5c565b5060a0830151612c4260a0860182612b5c565b508091505092915050565b6000612c598383612bc4565b905092915050565b6000602082019050919050565b6000612c7982612b30565b612c838185612b3b565b935083602082028501612c9585612b4c565b8060005b85811015612cd15784840389528151612cb28582612c4d565b9450612cbd83612c61565b925060208a01995050600181019050612c99565b50829750879550505050505092915050565b60006020820190508181036000830152612cfd8184612c6e565b905092915050565b60008115159050919050565b612d1a81612d05565b82525050565b6000602082019050612d356000830184612d11565b92915050565b600080fd5b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b612d7d82612a39565b810181811067ffffffffffffffff82111715612d9c57612d9b612d45565b5b80604052505050565b6000612daf612949565b9050612dbb8282612d74565b919050565b600067ffffffffffffffff821115612ddb57612dda612d45565b5b612de482612a39565b9050602081019050919050565b82818337600083830152505050565b6000612e13612e0e84612dc0565b612da5565b905082815260208101848484011115612e2f57612e2e612d40565b5b612e3a848285612df1565b509392505050565b600082601f830112612e5757612e56612d3b565b5b8135612e67848260208601612e00565b91505092915050565b600060208284031215612e8657612e85612953565b5b600082013567ffffffffffffffff811115612ea457612ea3612958565b5b612eb084828501612e42565b91505092915050565b612ec281612ac5565b82525050565b6000602082019050612edd6000830184612eb9565b92915050565b60008060408385031215612efa57612ef9612953565b5b6000612f0885828601612aee565b925050602083013567ffffffffffffffff811115612f2957612f28612958565b5b612f3585828601612e42565b9150509250929050565b600060c082019050612f5460008301896129c0565b612f616020830188612eb9565b8181036040830152612f738187612a4a565b9050612f8260608301866129c0565b612f8f60808301856129c0565b612f9c60a08301846129c0565b979650505050505050565b600080600060608486031215612fc057612fbf612953565b5b600084013567ffffffffffffffff811115612fde57612fdd612958565b5b612fea86828701612e42565b9350506020612ffb8682870161297e565b925050604061300c8682870161297e565b9150509250925092565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b6003811061305657613055613016565b5b50565b600081905061306782613045565b919050565b600061307782613059565b9050919050565b6130878161306c565b82525050565b60006020820190506130a2600083018461307e565b92915050565b600080604083850312156130bf576130be612953565b5b60006130cd8582860161297e565b92505060206130de8582860161297e565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168061312f57607f821691505b60208210811415613143576131426130e8565b5b50919050565b7f4e6f7420796f7572206f72646572000000000000000000000000000000000000600082015250565b600061317f600e836129f5565b915061318a82613149565b602082019050919050565b600060208201905081810360008301526131ae81613172565b9050919050565b600060e0820190506131ca600083018a6129c0565b6131d76020830189612eb9565b6131e46040830188612eb9565b81810360608301526131f68187612a4a565b905061320560808301866129c0565b61321260a08301856129c0565b61321f60c08301846129c0565b98975050505050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006132948261295d565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8214156132c7576132c661325a565b5b600182019050919050565b60006132dd8261295d565b91506132e88361295d565b9250828210156132fb576132fa61325a565b5b828203905092915050565b600060608201905061331b6000830186612eb9565b61332860208301856129c0565b61333560408301846129c0565b949350505050565b600081905092915050565b60008190508160005260206000209050919050565b6000815461336a81613117565b613374818661333d565b9450600182166000811461338f57600181146133a0576133d3565b60ff198316865281860193506133d3565b6133a985613348565b60005b838110156133cb578154818901526001820191506020810190506133ac565b838801955050505b50505092915050565b60006133e8828461335d565b915081905092915050565b60006133fe8261295d565b91506134098361295d565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0382111561343e5761343d61325a565b5b828201905092915050565b7f4974656d2069732063757272656e746c79206e6f7420616c6c6f776564000000600082015250565b600061347f601d836129f5565b915061348a82613449565b602082019050919050565b600060208201905081810360008301526134ae81613472565b9050919050565b600081905092915050565b60006134cb826129ea565b6134d581856134b5565b93506134e5818560208601612a06565b80840191505092915050565b60006134fd82846134c0565b915081905092915050565b7f52656475636520746865207175616e7469747900000000000000000000000000600082015250565b600061353e6013836129f5565b915061354982613508565b602082019050919050565b6000602082019050818103600083015261356d81613531565b9050919050565b600061357f8261295d565b915061358a8361295d565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff04831182151516156135c3576135c261325a565b5b828202905092915050565b7f596f75206e656564206d6f726520657468000000000000000000000000000000600082015250565b60006136046011836129f5565b915061360f826135ce565b602082019050919050565b60006020820190508181036000830152613633816135f7565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b60006136748261295d565b915061367f8361295d565b92508261368f5761368e61363a565b5b82820490509291505056fea2646970667358221220e64b71a84c6437214d139b1b1f453942a87d502da56f0c3c20e90c7a7518395e64736f6c63430008080033",
  "deployedBytecode": "",
  "devdoc": {
    "author": "Abolaji",
    "kind": "dev",
    "methods": {},
    "title": "A contract for buying and selling items",
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 140,
        "contract": "contracts/Marketplace.sol:Marketplace",
        "label": "item",
        "offset": 0,
        "slot": "0",
        "type": "t_string_storage"
      },
      {
        "astId": 143,
        "contract": "contracts/Marketplace.sol:Marketplace",
        "label": "allowedItems",
        "offset": 0,
        "slot": "1",
        "type": "t_array(t_string_storage)dyn_storage"
      },
      {
        "astId": 145,
        "contract": "contracts/Marketplace.sol:Marketplace",
        "label": "user",
        "offset": 0,
        "slot": "2",
        "type": "t_address_payable"
      },
      {
        "astId": 164,
        "contract": "contracts/Marketplace.sol:Marketplace",
        "label": "goods",
        "offset": 0,
        "slot": "3",
        "type": "t_mapping(t_address,t_mapping(t_string_memory_ptr,t_uint256))"
      },
      {
        "astId": 168,
        "contract": "contracts/Marketplace.sol:Marketplace",
        "label": "getBal",
        "offset": 0,
        "slot": "4",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 173,
        "contract": "contracts/Marketplace.sol:Marketplace",
        "label": "orders",
        "offset": 0,
        "slot": "5",
        "type": "t_mapping(t_uint256,t_struct(_order)158_storage)"
      },
      {
        "astId": 175,
        "contract": "contracts/Marketplace.sol:Marketplace",
        "label": "orderCount",
        "offset": 0,
        "slot": "6",
        "type": "t_uint256"
      },
      {
        "astId": 180,
        "contract": "contracts/Marketplace.sol:Marketplace",
        "label": "orderStatus",
        "offset": 0,
        "slot": "7",
        "type": "t_mapping(t_uint256,t_enum(ORDER_STATE)304)"
      },
      {
        "astId": 184,
        "contract": "contracts/Marketplace.sol:Marketplace",
        "label": "orderCancelled",
        "offset": 0,
        "slot": "8",
        "type": "t_mapping(t_uint256,t_bool)"
      },
      {
        "astId": 188,
        "contract": "contracts/Marketplace.sol:Marketplace",
        "label": "orderFilled",
        "offset": 0,
        "slot": "9",
        "type": "t_mapping(t_uint256,t_bool)"
      },
      {
        "astId": 192,
        "contract": "contracts/Marketplace.sol:Marketplace",
        "label": "orderCreated",
        "offset": 0,
        "slot": "10",
        "type": "t_mapping(t_uint256,t_bool)"
      },
      {
        "astId": 196,
        "contract": "contracts/Marketplace.sol:Marketplace",
        "label": "orderDelivered",
        "offset": 0,
        "slot": "11",
        "type": "t_mapping(t_uint256,t_bool)"
      },
      {
        "astId": 200,
        "contract": "contracts/Marketplace.sol:Marketplace",
        "label": "Buyers",
        "offset": 0,
        "slot": "12",
        "type": "t_mapping(t_uint256,t_address)"
      },
      {
        "astId": 204,
        "contract": "contracts/Marketplace.sol:Marketplace",
        "label": "filledAmount",
        "offset": 0,
        "slot": "13",
        "type": "t_mapping(t_uint256,t_uint256)"
      },
      {
        "astId": 208,
        "contract": "contracts/Marketplace.sol:Marketplace",
        "label": "filledQuantity",
        "offset": 0,
        "slot": "14",
        "type": "t_mapping(t_uint256,t_uint256)"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_address_payable": {
        "encoding": "inplace",
        "label": "address payable",
        "numberOfBytes": "20"
      },
      "t_array(t_string_storage)dyn_storage": {
        "base": "t_string_storage",
        "encoding": "dynamic_array",
        "label": "string[]",
        "numberOfBytes": "32"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_enum(ORDER_STATE)304": {
        "encoding": "inplace",
        "label": "enum Marketplace.ORDER_STATE",
        "numberOfBytes": "1"
      },
      "t_mapping(t_address,t_mapping(t_string_memory_ptr,t_uint256))": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => mapping(string => uint256))",
        "numberOfBytes": "32",
        "value": "t_mapping(t_string_memory_ptr,t_uint256)"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_mapping(t_string_memory_ptr,t_uint256)": {
        "encoding": "mapping",
        "key": "t_string_memory_ptr",
        "label": "mapping(string => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_mapping(t_uint256,t_address)": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => address)",
        "numberOfBytes": "32",
        "value": "t_address"
      },
      "t_mapping(t_uint256,t_bool)": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => bool)",
        "numberOfBytes": "32",
        "value": "t_bool"
      },
      "t_mapping(t_uint256,t_enum(ORDER_STATE)304)": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => enum Marketplace.ORDER_STATE)",
        "numberOfBytes": "32",
        "value": "t_enum(ORDER_STATE)304"
      },
      "t_mapping(t_uint256,t_struct(_order)158_storage)": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => struct Marketplace._order)",
        "numberOfBytes": "32",
        "value": "t_struct(_order)158_storage"
      },
      "t_mapping(t_uint256,t_uint256)": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_string_memory_ptr": {
        "encoding": "bytes",
        "label": "string",
        "numberOfBytes": "32"
      },
      "t_string_storage": {
        "encoding": "bytes",
        "label": "string",
        "numberOfBytes": "32"
      },
      "t_struct(_order)158_storage": {
        "encoding": "inplace",
        "label": "struct Marketplace._order",
        "members": [
          {
            "astId": 147,
            "contract": "contracts/Marketplace.sol:Marketplace",
            "label": "id",
            "offset": 0,
            "slot": "0",
            "type": "t_uint256"
          },
          {
            "astId": 149,
            "contract": "contracts/Marketplace.sol:Marketplace",
            "label": "seller",
            "offset": 0,
            "slot": "1",
            "type": "t_address"
          },
          {
            "astId": 151,
            "contract": "contracts/Marketplace.sol:Marketplace",
            "label": "item",
            "offset": 0,
            "slot": "2",
            "type": "t_string_storage"
          },
          {
            "astId": 153,
            "contract": "contracts/Marketplace.sol:Marketplace",
            "label": "qtty_to_sell",
            "offset": 0,
            "slot": "3",
            "type": "t_uint256"
          },
          {
            "astId": 155,
            "contract": "contracts/Marketplace.sol:Marketplace",
            "label": "price",
            "offset": 0,
            "slot": "4",
            "type": "t_uint256"
          },
          {
            "astId": 157,
            "contract": "contracts/Marketplace.sol:Marketplace",
            "label": "timestamp",
            "offset": 0,
            "slot": "5",
            "type": "t_uint256"
          }
        ],
        "numberOfBytes": "192"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}