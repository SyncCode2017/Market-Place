{
  "address": "0x34f84A7386Ffbb55B58003EAF7FaE4D62b47c4FC",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_feeAccount",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_feePercent",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "Marketplace__NotOwner",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "seller",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "buyer",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "item",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "qtty_bought",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "price",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "timestamp",
          "type": "uint256"
        }
      ],
      "name": "CancelFilledOrder",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "seller",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "item",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "qtty_to_sell",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "price",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "timestamp",
          "type": "uint256"
        }
      ],
      "name": "CancelOpenOrder",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "bal",
          "type": "uint256"
        }
      ],
      "name": "Deposit",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "seller",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "item",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "qtty_to_sell",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "price",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "timestamp",
          "type": "uint256"
        }
      ],
      "name": "OrderCreated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "seller",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "buyer",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "item",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "qtty_bought",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "price",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "timestamp",
          "type": "uint256"
        }
      ],
      "name": "OrderDelivered",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "seller",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "buyer",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "item",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "qtty_bought",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "price",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "timestamp",
          "type": "uint256"
        }
      ],
      "name": "OrderFilled",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "bal",
          "type": "uint256"
        }
      ],
      "name": "Withdraw",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "Buyers",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_id",
          "type": "uint256"
        }
      ],
      "name": "OrderReceived",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_item",
          "type": "string"
        }
      ],
      "name": "addAllowedItems",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "allowedItems",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_id",
          "type": "uint256"
        }
      ],
      "name": "cancelFilledOrder",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_id",
          "type": "uint256"
        }
      ],
      "name": "cancelOpenOrder",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "depositEther",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "feePercent",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_id",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_quantity",
          "type": "uint256"
        }
      ],
      "name": "fillOrder",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "filledAmount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "filledQuantity",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getAllowedItems",
      "outputs": [
        {
          "internalType": "string[]",
          "name": "",
          "type": "string[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "getBal",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "name": "goods",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "i_owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "item",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_item",
          "type": "string"
        }
      ],
      "name": "itemIsAllowed",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_item",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "_quantity",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_price",
          "type": "uint256"
        }
      ],
      "name": "makeOrder",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "myBalance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "open_order",
      "outputs": [
        {
          "internalType": "uint256[]",
          "name": "idOrder",
          "type": "uint256[]"
        },
        {
          "internalType": "string[]",
          "name": "_item",
          "type": "string[]"
        },
        {
          "internalType": "uint256[]",
          "name": "_qty",
          "type": "uint256[]"
        },
        {
          "internalType": "uint256[]",
          "name": "_prc",
          "type": "uint256[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "orderCancelled",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "orderCount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "orderCreated",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "orderDelivered",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "orderFilled",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "orderStatus",
      "outputs": [
        {
          "internalType": "enum Marketplace.ORDER_STATE",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "orders",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "seller",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "item",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "qtty_to_sell",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "price",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "timestamp",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "withdrawEther",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0x73d31428addbece40dacfc22358821e5d541865ac9d03ad7649f88615e3f98f2",
  "receipt": {
    "to": null,
    "from": "0x0b9412DF2c8802E7fCc2D000392f16fD0df2bfEE",
    "contractAddress": "0x34f84A7386Ffbb55B58003EAF7FaE4D62b47c4FC",
    "transactionIndex": 5,
    "gasUsed": "3218590",
    "logsBloom": "0x
    "blockHash": "0xeeee8e96644b4829dbc4c4046704677a068dce942e98e0500ab1032af639a2c8",
    "transactionHash": "0x73d31428addbece40dacfc22358821e5d541865ac9d03ad7649f88615e3f98f2",
    "logs": [],
    "blockNumber": 10867727,
    "cumulativeGasUsed": "3994521",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x0b9412DF2c8802E7fCc2D000392f16fD0df2bfEE",
    5
  ],
  "numDeployments": 7,
  "solcInputHash": "fdd854fe906918dcd8157a65342be01f",
  "metadata": "{\"compiler\":{\"version\":\"0.8.8+commit.dddeac2f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_feeAccount\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_feePercent\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"Marketplace__NotOwner\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"seller\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"buyer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"item\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"qtty_bought\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"CancelFilledOrder\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"seller\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"item\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"qtty_to_sell\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"CancelOpenOrder\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"bal\",\"type\":\"uint256\"}],\"name\":\"Deposit\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"seller\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"item\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"qtty_to_sell\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"OrderCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"seller\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"buyer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"item\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"qtty_bought\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"OrderDelivered\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"seller\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"buyer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"item\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"qtty_bought\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"OrderFilled\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"bal\",\"type\":\"uint256\"}],\"name\":\"Withdraw\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"Buyers\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_id\",\"type\":\"uint256\"}],\"name\":\"OrderReceived\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_item\",\"type\":\"string\"}],\"name\":\"addAllowedItems\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"allowedItems\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_id\",\"type\":\"uint256\"}],\"name\":\"cancelFilledOrder\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_id\",\"type\":\"uint256\"}],\"name\":\"cancelOpenOrder\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"depositEther\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"feePercent\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_quantity\",\"type\":\"uint256\"}],\"name\":\"fillOrder\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"filledAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"filledQuantity\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getAllowedItems\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"\",\"type\":\"string[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"getBal\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"goods\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"i_owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"item\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_item\",\"type\":\"string\"}],\"name\":\"itemIsAllowed\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_item\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"_quantity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_price\",\"type\":\"uint256\"}],\"name\":\"makeOrder\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"myBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"open_order\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"idOrder\",\"type\":\"uint256[]\"},{\"internalType\":\"string[]\",\"name\":\"_item\",\"type\":\"string[]\"},{\"internalType\":\"uint256[]\",\"name\":\"_qty\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"_prc\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"orderCancelled\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"orderCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"orderCreated\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"orderDelivered\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"orderFilled\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"orderStatus\",\"outputs\":[{\"internalType\":\"enum Marketplace.ORDER_STATE\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"orders\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"seller\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"item\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"qtty_to_sell\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"withdrawEther\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Abolaji\",\"kind\":\"dev\",\"methods\":{},\"title\":\"A contract for buying and selling items\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Marketplace.sol\":\"Marketplace\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (access/Ownable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    constructor() {\\n        _transferOwnership(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby removing any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0x24e0364e503a9bbde94c715d26573a76f14cd2a202d45f96f52134ab806b67b9\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\"},\"contracts/Marketplace.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.8;\\npragma experimental ABIEncoderV2;\\n\\nimport \\\"@openzeppelin/contracts/access/Ownable.sol\\\";\\n\\nerror Marketplace__NewItemExist();\\nerror Marketplace__NotOwner();\\n\\n/** @title A contract for buying and selling items\\n *  @author Abolaji\\n *  @dev\\n */\\n\\ncontract Marketplace {\\n    //Variables\\n    address private immutable feeAccount;\\n    uint256 public immutable feePercent;\\n    address public immutable i_owner;\\n    string public item;\\n    address payable internal user;\\n    uint256 public orderCount;\\n\\n    struct _order {\\n        uint256 id;\\n        address seller;\\n        string item;\\n        uint256 qtty_to_sell;\\n        uint256 price;\\n        uint256 timestamp;\\n    }\\n\\n    mapping(address => mapping(string => uint256)) public goods;\\n\\n    // store the order\\n    mapping(address => uint256) public getBal;\\n    mapping(uint256 => _order) public orders;\\n    mapping(uint256 => ORDER_STATE) public orderStatus;\\n    mapping(uint256 => bool) public orderCancelled;\\n    mapping(uint256 => bool) public orderFilled;\\n    mapping(uint256 => bool) public orderCreated;\\n    mapping(uint256 => bool) public orderDelivered;\\n    mapping(uint256 => address) public Buyers;\\n    mapping(uint256 => uint256) public filledAmount;\\n    mapping(uint256 => uint256) public filledQuantity;\\n    //_order[] public OpenOrder;\\n    string[] public allowedItems;\\n\\n    //Events\\n    event Deposit(address user, uint256 amount, uint256 bal);\\n    event Withdraw(address user, uint256 amount, uint256 bal);\\n    event OrderCreated(\\n        uint256 id,\\n        address seller,\\n        string item,\\n        uint256 qtty_to_sell,\\n        uint256 price,\\n        uint256 timestamp\\n    );\\n    event OrderFilled(\\n        uint256 id,\\n        address seller,\\n        address buyer,\\n        string item,\\n        uint256 qtty_bought,\\n        uint256 price,\\n        uint256 timestamp\\n    );\\n    event OrderDelivered(\\n        uint256 id,\\n        address seller,\\n        address buyer,\\n        string item,\\n        uint256 qtty_bought,\\n        uint256 price,\\n        uint256 timestamp\\n    );\\n    event CancelOpenOrder(\\n        uint256 id,\\n        address seller,\\n        string item,\\n        uint256 qtty_to_sell,\\n        uint256 price,\\n        uint256 timestamp\\n    );\\n    event CancelFilledOrder(\\n        uint256 id,\\n        address seller,\\n        address buyer,\\n        string item,\\n        uint256 qtty_bought,\\n        uint256 price,\\n        uint256 timestamp\\n    );\\n\\n    enum ORDER_STATE {\\n        OPEN,\\n        FILLED,\\n        CLOSED\\n    }\\n\\n    constructor(address _feeAccount, uint256 _feePercent) {\\n        feeAccount = _feeAccount;\\n        feePercent = _feePercent;\\n        i_owner = msg.sender;\\n    }\\n\\n    function depositEther() public payable {\\n        getBal[msg.sender] = getBal[msg.sender] + msg.value;\\n\\n        emit Deposit(msg.sender, msg.value, getBal[msg.sender]);\\n    }\\n\\n    modifier onlyOwner() {\\n        if (msg.sender != i_owner) revert Marketplace__NotOwner();\\n        _;\\n    }\\n\\n    // //Fallback: reverts if Ether is sent to this smart contract by mistake\\n    // function() external {\\n    //     revert();\\n    // }\\n\\n    function withdrawEther(uint256 _amount) public {\\n        user = payable(msg.sender);\\n        require(getBal[msg.sender] >= _amount);\\n        getBal[msg.sender] = getBal[msg.sender] - _amount;\\n        user.transfer(_amount);\\n        emit Withdraw(msg.sender, _amount, getBal[msg.sender]);\\n    }\\n\\n    function myBalance() public view returns (uint256) {\\n        return getBal[msg.sender];\\n    }\\n\\n    // Create an order as a seller\\n    function makeOrder(\\n        string memory _item,\\n        uint256 _quantity,\\n        uint256 _price\\n    ) public {\\n        require(itemIsAllowed(_item), \\\"Item is currently not allowed\\\");\\n        orderCount = orderCount + 1;\\n        orders[orderCount] = _order(\\n            orderCount,\\n            msg.sender,\\n            _item,\\n            _quantity,\\n            _price,\\n            block.timestamp\\n        );\\n        orderStatus[orderCount] = ORDER_STATE.OPEN;\\n        goods[msg.sender][_item] = _quantity;\\n        emit OrderCreated(\\n            orderCount,\\n            msg.sender,\\n            _item,\\n            _quantity,\\n            _price,\\n            block.timestamp\\n        );\\n    }\\n\\n    // Fill an order as a buyer\\n    function fillOrder(uint256 _id, uint256 _quantity) public {\\n        require(_id > 0 && _id <= orderCount);\\n        require(orderStatus[_id] == ORDER_STATE.OPEN);\\n\\n        address _buyer = msg.sender;\\n\\n        // Fetch the order\\n        _order memory order = orders[_id];\\n        require(_quantity <= order.qtty_to_sell, \\\"Reduce the quantity\\\");\\n        uint256 amount = _quantity * order.price;\\n        require(getBal[_buyer] >= amount, \\\"You need more eth\\\");\\n\\n        _orderBond(_id, _buyer, _quantity, amount);\\n\\n        // Mark order as filled\\n        orderFilled[_id] = true;\\n        orderStatus[_id] = ORDER_STATE.FILLED;\\n        Buyers[_id] = _buyer;\\n        filledAmount[_id] = amount;\\n        filledQuantity[_id] = _quantity;\\n\\n        emit OrderFilled(\\n            _id,\\n            order.seller,\\n            _buyer,\\n            order.item,\\n            _quantity,\\n            order.price,\\n            block.timestamp\\n        );\\n    }\\n\\n    //Getting orders that are still available for buying\\n    function open_order()\\n        public\\n        view\\n        returns (\\n            uint256[] memory idOrder,\\n            string[] memory _item,\\n            uint256[] memory _qty,\\n            uint256[] memory _prc\\n        )\\n    {\\n        idOrder = new uint256[](orderCount);\\n        _item = new string[](orderCount);\\n        _qty = new uint256[](orderCount);\\n        _prc = new uint256[](orderCount);\\n        for (uint256 i = 1; i <= orderCount; i++) {\\n            if (orderStatus[i] == ORDER_STATE.OPEN) {\\n                idOrder[i - 1] = orders[i].id;\\n                _item[i - 1] = orders[i].item;\\n                _qty[i - 1] = orders[i].qtty_to_sell;\\n                _prc[i - 1] = orders[i].price / (10**15);\\n            }\\n        }\\n        return (idOrder, _item, _qty, _prc);\\n    }\\n\\n    // When the buyer confirms the receipt of the items, the money is released to the seller\\n    function OrderReceived(uint256 _id) public {\\n        address _buyer = Buyers[_id];\\n        _order memory order = orders[_id];\\n        require(orderStatus[_id] == ORDER_STATE.FILLED);\\n        require(msg.sender == _buyer, \\\"Not your order\\\");\\n        uint256 amount = filledAmount[_id];\\n        uint256 quantity = filledQuantity[_id];\\n\\n        _orderCompleted(_id, _buyer, quantity, amount);\\n        orderStatus[_id] = ORDER_STATE.CLOSED;\\n        emit OrderDelivered(\\n            _id,\\n            order.seller,\\n            _buyer,\\n            order.item,\\n            quantity,\\n            order.price,\\n            block.timestamp\\n        );\\n    }\\n\\n    function cancelOpenOrder(uint256 _id) public {\\n        _order memory order = orders[_id];\\n        require(order.seller == msg.sender, \\\"Not your order\\\"); // must be \\\"my\\\" order\\n        require(orderStatus[_id] == ORDER_STATE.OPEN);\\n\\n        orderCancelled[_id] = true;\\n        orderStatus[_id] == ORDER_STATE.CLOSED;\\n        emit CancelOpenOrder(\\n            _id,\\n            order.seller,\\n            order.item,\\n            order.qtty_to_sell,\\n            order.price,\\n            block.timestamp\\n        );\\n    }\\n\\n    function cancelFilledOrder(uint256 _id) public {\\n        _order memory order = orders[_id];\\n        address _buyer = Buyers[_id];\\n        require(\\n            order.seller == msg.sender || _buyer == msg.sender,\\n            \\\"Not your order\\\"\\n        ); // must be \\\"my\\\" order\\n        require(orderStatus[_id] == ORDER_STATE.FILLED);\\n        uint256 _amount = filledAmount[_id];\\n        uint256 _quantity = filledQuantity[_id];\\n\\n        getBal[_buyer] = getBal[_buyer] + _amount;\\n        goods[msg.sender][order.item] =\\n            goods[msg.sender][order.item] +\\n            _quantity;\\n        orderStatus[_id] == ORDER_STATE.CLOSED;\\n        orderCancelled[_id] = true;\\n        emit CancelFilledOrder(\\n            _id,\\n            order.seller,\\n            _buyer,\\n            order.item,\\n            _quantity,\\n            order.price,\\n            block.timestamp\\n        );\\n    }\\n\\n    function _orderBond(\\n        uint256 _id,\\n        address _buyer,\\n        uint256 _quantity,\\n        uint256 _amount\\n    ) internal {\\n        _order memory order = orders[_id];\\n        // place order\\n        getBal[_buyer] = getBal[_buyer] - _amount;\\n        goods[order.seller][order.item] =\\n            goods[order.seller][order.item] -\\n            _quantity;\\n    }\\n\\n    function _orderCompleted(\\n        uint256 _id,\\n        address _buyer,\\n        uint256 _quantity,\\n        uint256 _amount\\n    ) internal {\\n        _order memory order = orders[_id];\\n        _amount = _amount - ((feePercent * _amount) / 100);\\n\\n        getBal[order.seller] = getBal[order.seller] + _amount;\\n        goods[_buyer][order.item] = goods[_buyer][order.item] + _quantity;\\n        getBal[feeAccount] =\\n            getBal[feeAccount] +\\n            ((feePercent * _amount) / 100);\\n    }\\n\\n    function addAllowedItems(string memory _item) public onlyOwner {\\n        //require (newItemIsUnique(_item));\\n        allowedItems.push(_item);\\n    }\\n\\n    function itemIsAllowed(string memory _item) public view returns (bool) {\\n        for (\\n            uint256 allowedItemIndex = 0;\\n            allowedItemIndex < allowedItems.length;\\n            allowedItemIndex++\\n        ) {\\n            if (\\n                keccak256(bytes(allowedItems[allowedItemIndex])) ==\\n                keccak256(bytes(_item))\\n            ) {\\n                return true;\\n            }\\n        }\\n        return false;\\n    }\\n\\n    // function newItemIsUnique(string memory _item) public view  returns (bool) {\\n    //     string[] memory itemArray= allowedItems;\\n    //     for (uint256 i=0; i<itemArray.length; i++){\\n    //         if (keccak256(bytes(itemArray[i]))==keccak256(bytes(_item))){\\n    //             revert Marketplace__NewItemExist();\\n    //         }\\n    //     }\\n    //     return true;\\n    // }\\n\\n    function getAllowedItems() public view returns (string[] memory) {\\n        return allowedItems;\\n    }\\n}\\n\",\"keccak256\":\"0xc4e93448e8ba17c94c8c9b9b4c2f2bf3f4501bd309d4bf2d2bca9c932ca53850\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x60e06040523480156200001157600080fd5b5060405162003b3938038062003b3983398181016040528101906200003791906200015a565b8173ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff1660601b815250508060a081815250503373ffffffffffffffffffffffffffffffffffffffff1660c08173ffffffffffffffffffffffffffffffffffffffff1660601b815250505050620001a1565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620000e782620000ba565b9050919050565b620000f981620000da565b81146200010557600080fd5b50565b6000815190506200011981620000ee565b92915050565b6000819050919050565b62000134816200011f565b81146200014057600080fd5b50565b600081519050620001548162000129565b92915050565b60008060408385031215620001745762000173620000b5565b5b6000620001848582860162000108565b9250506020620001978582860162000143565b9150509250929050565b60805160601c60a05160c05160601c613946620001f360003960008181611d9b01526123180152600081816111de01528181612557015261270001526000818161273901526127a301526139466000f3fe6080604052600436106101b75760003560e01c8063a443df94116100ec578063cb3968b51161008a578063dbdea44c11610064578063dbdea44c14610651578063e742a1821461068e578063e9c18966146106cb578063f2a4a82e14610708576101b7565b8063cb3968b5146105d4578063d55a7bcb146105fd578063dba6335f14610626576101b7565b8063bff49450116100c6578063bff4945014610506578063c37dfc5b14610543578063c9116b691461056c578063c94c2b8d14610597576101b7565b8063a443df941461045e578063a85c38ef1461049b578063a8e87b8a146104dd576101b7565b8063493047fc116101595780637fd6f15c116101335780637fd6f15c146103c3578063812538e1146103ee57806398ea5fca146104175780639b40ae7f14610421576101b7565b8063493047fc1461031e5780634a93e0da146103495780634f16587314610386576101b7565b80632e6e91aa116101955780632e6e91aa1461024d5780632fa780851461028a578063364315dd146102c75780633bed33ce146102f5576101b7565b80630da1e350146101bc5780631df9ccaa146101e55780632453ffa814610222575b600080fd5b3480156101c857600080fd5b506101e360048036038101906101de9190612b91565b610733565b005b3480156101f157600080fd5b5061020c60048036038101906102079190612b91565b610a2a565b6040516102199190612bcd565b60405180910390f35b34801561022e57600080fd5b50610237610a42565b6040516102449190612bcd565b60405180910390f35b34801561025957600080fd5b50610274600480360381019061026f9190612b91565b610a48565b6040516102819190612c81565b60405180910390f35b34801561029657600080fd5b506102b160048036038101906102ac9190612d01565b610af4565b6040516102be9190612bcd565b60405180910390f35b3480156102d357600080fd5b506102dc610b0c565b6040516102ec9493929190612ef8565b60405180910390f35b34801561030157600080fd5b5061031c60048036038101906103179190612b91565b610e64565b005b34801561032a57600080fd5b50610333611065565b6040516103409190612f59565b60405180910390f35b34801561035557600080fd5b50610370600480360381019061036b9190612b91565b61113e565b60405161037d9190612f96565b60405180910390f35b34801561039257600080fd5b506103ad60048036038101906103a891906130e6565b61115e565b6040516103ba9190612f96565b60405180910390f35b3480156103cf57600080fd5b506103d86111dc565b6040516103e59190612bcd565b60405180910390f35b3480156103fa57600080fd5b5061041560048036038101906104109190612b91565b611200565b005b61041f6114be565b005b34801561042d57600080fd5b506104486004803603810190610443919061312f565b6115c8565b6040516104559190612bcd565b60405180910390f35b34801561046a57600080fd5b5061048560048036038101906104809190612b91565b611603565b604051610492919061319a565b60405180910390f35b3480156104a757600080fd5b506104c260048036038101906104bd9190612b91565b611636565b6040516104d4969594939291906131b5565b60405180910390f35b3480156104e957600080fd5b5061050460048036038101906104ff919061321d565b61171a565b005b34801561051257600080fd5b5061052d60048036038101906105289190612b91565b611946565b60405161053a9190613303565b60405180910390f35b34801561054f57600080fd5b5061056a6004803603810190610565919061331e565b611966565b005b34801561057857600080fd5b50610581611d32565b60405161058e9190612bcd565b60405180910390f35b3480156105a357600080fd5b506105be60048036038101906105b99190612b91565b611d79565b6040516105cb9190612f96565b60405180910390f35b3480156105e057600080fd5b506105fb60048036038101906105f691906130e6565b611d99565b005b34801561060957600080fd5b50610624600480360381019061061f9190612b91565b611e5d565b005b34801561063257600080fd5b5061063b612316565b604051610648919061319a565b60405180910390f35b34801561065d57600080fd5b5061067860048036038101906106739190612b91565b61233a565b6040516106859190612bcd565b60405180910390f35b34801561069a57600080fd5b506106b560048036038101906106b09190612b91565b612352565b6040516106c29190612f96565b60405180910390f35b3480156106d757600080fd5b506106f260048036038101906106ed9190612b91565b612372565b6040516106ff9190612f96565b60405180910390f35b34801561071457600080fd5b5061071d612392565b60405161072a9190612c81565b60405180910390f35b6000600b600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690506000600560008481526020019081526020016000206040518060c0016040529081600082015481526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016002820180546107fb9061338d565b80601f01602080910402602001604051908101604052809291908181526020018280546108279061338d565b80156108745780601f1061084957610100808354040283529160200191610874565b820191906000526020600020905b81548152906001019060200180831161085757829003601f168201915b5050505050815260200160038201548152602001600482015481526020016005820154815250509050600160028111156108b1576108b061328c565b5b6006600085815260200190815260200160002060009054906101000a900460ff1660028111156108e4576108e361328c565b5b146108ee57600080fd5b8173ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461095c576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109539061340b565b60405180910390fd5b6000600c60008581526020019081526020016000205490506000600d600086815260200190815260200160002054905061099885858385612420565b60026006600087815260200190815260200160002060006101000a81548160ff021916908360028111156109cf576109ce61328c565b5b02179055507f7dfc2e96d4e9bfa63e26f3d2a2c37873074e8ad79d74ea908e97c8ae7d796a9785846020015186866040015185886080015142604051610a1b979695949392919061342b565b60405180910390a15050505050565b600c6020528060005260406000206000915090505481565b60025481565b600e8181548110610a5857600080fd5b906000526020600020016000915090508054610a739061338d565b80601f0160208091040260200160405190810160405280929190818152602001828054610a9f9061338d565b8015610aec5780601f10610ac157610100808354040283529160200191610aec565b820191906000526020600020905b815481529060010190602001808311610acf57829003601f168201915b505050505081565b60046020528060005260406000206000915090505481565b60608060608060025467ffffffffffffffff811115610b2e57610b2d612fbb565b5b604051908082528060200260200182016040528015610b5c5781602001602082028036833780820191505090505b50935060025467ffffffffffffffff811115610b7b57610b7a612fbb565b5b604051908082528060200260200182016040528015610bae57816020015b6060815260200190600190039081610b995790505b50925060025467ffffffffffffffff811115610bcd57610bcc612fbb565b5b604051908082528060200260200182016040528015610bfb5781602001602082028036833780820191505090505b50915060025467ffffffffffffffff811115610c1a57610c19612fbb565b5b604051908082528060200260200182016040528015610c485781602001602082028036833780820191505090505b5090506000600190505b6002548111610e5d5760006002811115610c6f57610c6e61328c565b5b6006600083815260200190815260200160002060009054906101000a900460ff166002811115610ca257610ca161328c565b5b1415610e4a57600560008281526020019081526020016000206000015485600183610ccd91906134d0565b81518110610cde57610cdd613504565b5b602002602001018181525050600560008281526020019081526020016000206002018054610d0b9061338d565b80601f0160208091040260200160405190810160405280929190818152602001828054610d379061338d565b8015610d845780601f10610d5957610100808354040283529160200191610d84565b820191906000526020600020905b815481529060010190602001808311610d6757829003601f168201915b505050505084600183610d9791906134d0565b81518110610da857610da7613504565b5b6020026020010181905250600560008281526020019081526020016000206003015483600183610dd891906134d0565b81518110610de957610de8613504565b5b60200260200101818152505066038d7ea4c680006005600083815260200190815260200160002060040154610e1e9190613562565b82600183610e2c91906134d0565b81518110610e3d57610e3c613504565b5b6020026020010181815250505b8080610e5590613593565b915050610c52565b5090919293565b33600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020541015610ef157600080fd5b80600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610f3c91906134d0565b600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f19350505050158015610fe7573d6000803e3d6000fd5b507ff279e6a1f5e320cca91135676d9cb6e44ca8a08c0b88342bcdb1144f6511b5683382600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205460405161105a939291906135dc565b60405180910390a150565b6060600e805480602002602001604051908101604052809291908181526020016000905b828210156111355783829060005260206000200180546110a89061338d565b80601f01602080910402602001604051908101604052809291908181526020018280546110d49061338d565b80156111215780601f106110f657610100808354040283529160200191611121565b820191906000526020600020905b81548152906001019060200180831161110457829003601f168201915b505050505081526020019060010190611089565b50505050905090565b60086020528060005260406000206000915054906101000a900460ff1681565b600080600090505b600e805490508110156111d1578280519060200120600e828154811061118f5761118e613504565b5b906000526020600020016040516111a691906136b2565b604051809103902014156111be5760019150506111d7565b80806111c990613593565b915050611166565b50600090505b919050565b7f000000000000000000000000000000000000000000000000000000000000000081565b6000600560008381526020019081526020016000206040518060c0016040529081600082015481526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016002820180546112909061338d565b80601f01602080910402602001604051908101604052809291908181526020018280546112bc9061338d565b80156113095780601f106112de57610100808354040283529160200191611309565b820191906000526020600020905b8154815290600101906020018083116112ec57829003601f168201915b50505050508152602001600382015481526020016004820154815260200160058201548152505090503373ffffffffffffffffffffffffffffffffffffffff16816020015173ffffffffffffffffffffffffffffffffffffffff16146113a4576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161139b9061340b565b60405180910390fd5b600060028111156113b8576113b761328c565b5b6006600084815260200190815260200160002060009054906101000a900460ff1660028111156113eb576113ea61328c565b5b146113f557600080fd5b60016007600084815260200190815260200160002060006101000a81548160ff0219169083151502179055506002808111156114345761143361328c565b5b6006600084815260200190815260200160002060009054906101000a900460ff1660028111156114675761146661328c565b5b50507f605e46eb1441c0674ff6584b5ea1ba9a7f5d53198deaaf2a04338b577b38ab3b828260200151836040015184606001518560800151426040516114b2969594939291906131b5565b60405180910390a15050565b34600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461150991906136c9565b600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055507f90890809c654f11d6e72a28fa60149770a0d11ec6c92319d6ceb2bb0a4ea1a153334600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546040516115be939291906135dc565b60405180910390a1565b600360205281600052604060002081805160208101820180518482526020830160208501208183528095505050505050600091509150505481565b600b6020528060005260406000206000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60056020528060005260406000206000915090508060000154908060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060020180546116859061338d565b80601f01602080910402602001604051908101604052809291908181526020018280546116b19061338d565b80156116fe5780601f106116d3576101008083540402835291602001916116fe565b820191906000526020600020905b8154815290600101906020018083116116e157829003601f168201915b5050505050908060030154908060040154908060050154905086565b6117238361115e565b611762576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016117599061376b565b60405180910390fd5b600160025461177191906136c9565b6002819055506040518060c0016040528060025481526020013373ffffffffffffffffffffffffffffffffffffffff168152602001848152602001838152602001828152602001428152506005600060025481526020019081526020016000206000820151816000015560208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550604082015181600201908051906020019061183e929190612aa4565b50606082015181600301556080820151816004015560a08201518160050155905050600060066000600254815260200190815260200160002060006101000a81548160ff021916908360028111156118995761189861328c565b5b021790555081600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020846040516118ec91906137c7565b9081526020016040518091039020819055507f9193cdda35362c821e3d4d240a5fcb0093ad192ac99028d18e5dff3414ee78716002543385858542604051611939969594939291906131b5565b60405180910390a1505050565b60066020528060005260406000206000915054906101000a900460ff1681565b60008211801561197857506002548211155b61198157600080fd5b600060028111156119955761199461328c565b5b6006600084815260200190815260200160002060009054906101000a900460ff1660028111156119c8576119c761328c565b5b146119d257600080fd5b60003390506000600560008581526020019081526020016000206040518060c0016040529081600082015481526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600282018054611a679061338d565b80601f0160208091040260200160405190810160405280929190818152602001828054611a939061338d565b8015611ae05780601f10611ab557610100808354040283529160200191611ae0565b820191906000526020600020905b815481529060010190602001808311611ac357829003601f168201915b50505050508152602001600382015481526020016004820154815260200160058201548152505090508060600151831115611b50576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611b479061382a565b60405180910390fd5b6000816080015184611b62919061384a565b905080600460008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020541015611be6576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611bdd906138f0565b60405180910390fd5b611bf285848684612807565b60016008600087815260200190815260200160002060006101000a81548160ff02191690831515021790555060016006600087815260200190815260200160002060006101000a81548160ff02191690836002811115611c5557611c5461328c565b5b021790555082600b600087815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600c60008781526020019081526020016000208190555083600d6000878152602001908152602001600020819055507f7717c4c0039d1e3b8c4e5fea24aea887c3b05f8f7f1e5fe6f041c5b4b58d94a185836020015185856040015188876080015142604051611d23979695949392919061342b565b60405180910390a15050505050565b6000600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905090565b60096020528060005260406000206000915054906101000a900460ff1681565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614611e1e576040517fbf91ead800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600e81908060018154018082558091505060019003906000526020600020016000909190919091509080519060200190611e59929190612aa4565b5050565b6000600560008381526020019081526020016000206040518060c0016040529081600082015481526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600282018054611eed9061338d565b80601f0160208091040260200160405190810160405280929190818152602001828054611f199061338d565b8015611f665780601f10611f3b57610100808354040283529160200191611f66565b820191906000526020600020905b815481529060010190602001808311611f4957829003601f168201915b50505050508152602001600382015481526020016004820154815260200160058201548152505090506000600b600084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690503373ffffffffffffffffffffffffffffffffffffffff16826020015173ffffffffffffffffffffffffffffffffffffffff16148061203057503373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16145b61206f576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016120669061340b565b60405180910390fd5b600160028111156120835761208261328c565b5b6006600085815260200190815260200160002060009054906101000a900460ff1660028111156120b6576120b561328c565b5b146120c057600080fd5b6000600c60008581526020019081526020016000205490506000600d600086815260200190815260200160002054905081600460008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461213b91906136c9565b600460008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555080600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002085604001516040516121d091906137c7565b9081526020016040518091039020546121e991906136c9565b600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020856040015160405161223a91906137c7565b90815260200160405180910390208190555060028081111561225f5761225e61328c565b5b6006600087815260200190815260200160002060009054906101000a900460ff1660028111156122925761229161328c565b5b505060016007600087815260200190815260200160002060006101000a81548160ff0219169083151502179055507f3f4cd73070ce25691a6ac562de84d1efbdfbb91a5f68c38178f1182736856b0985856020015185876040015185896080015142604051612307979695949392919061342b565b60405180910390a15050505050565b7f000000000000000000000000000000000000000000000000000000000000000081565b600d6020528060005260406000206000915090505481565b600a6020528060005260406000206000915054906101000a900460ff1681565b60076020528060005260406000206000915054906101000a900460ff1681565b6000805461239f9061338d565b80601f01602080910402602001604051908101604052809291908181526020018280546123cb9061338d565b80156124185780601f106123ed57610100808354040283529160200191612418565b820191906000526020600020905b8154815290600101906020018083116123fb57829003601f168201915b505050505081565b6000600560008681526020019081526020016000206040518060c0016040529081600082015481526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016002820180546124b09061338d565b80601f01602080910402602001604051908101604052809291908181526020018280546124dc9061338d565b80156125295780601f106124fe57610100808354040283529160200191612529565b820191906000526020600020905b81548152906001019060200180831161250c57829003601f168201915b50505050508152602001600382015481526020016004820154815260200160058201548152505090506064827f0000000000000000000000000000000000000000000000000000000000000000612580919061384a565b61258a9190613562565b8261259591906134d0565b91508160046000836020015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546125e691906136c9565b60046000836020015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555082600360008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020826040015160405161267f91906137c7565b90815260200160405180910390205461269891906136c9565b600360008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002082604001516040516126e991906137c7565b9081526020016040518091039020819055506064827f0000000000000000000000000000000000000000000000000000000000000000612729919061384a565b6127339190613562565b600460007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461279d91906136c9565b600460007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505050505050565b6000600560008681526020019081526020016000206040518060c0016040529081600082015481526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016002820180546128979061338d565b80601f01602080910402602001604051908101604052809291908181526020018280546128c39061338d565b80156129105780601f106128e557610100808354040283529160200191612910565b820191906000526020600020905b8154815290600101906020018083116128f357829003601f168201915b505050505081526020016003820154815260200160048201548152602001600582015481525050905081600460008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461298491906134d0565b600460008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508260036000836020015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208260400151604051612a1d91906137c7565b908152602001604051809103902054612a3691906134d0565b60036000836020015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208260400151604051612a8b91906137c7565b9081526020016040518091039020819055505050505050565b828054612ab09061338d565b90600052602060002090601f016020900481019282612ad25760008555612b19565b82601f10612aeb57805160ff1916838001178555612b19565b82800160010185558215612b19579182015b82811115612b18578251825591602001919060010190612afd565b5b509050612b269190612b2a565b5090565b5b80821115612b43576000816000905550600101612b2b565b5090565b6000604051905090565b600080fd5b600080fd5b6000819050919050565b612b6e81612b5b565b8114612b7957600080fd5b50565b600081359050612b8b81612b65565b92915050565b600060208284031215612ba757612ba6612b51565b5b6000612bb584828501612b7c565b91505092915050565b612bc781612b5b565b82525050565b6000602082019050612be26000830184612bbe565b92915050565b600081519050919050565b600082825260208201905092915050565b60005b83811015612c22578082015181840152602081019050612c07565b83811115612c31576000848401525b50505050565b6000601f19601f8301169050919050565b6000612c5382612be8565b612c5d8185612bf3565b9350612c6d818560208601612c04565b612c7681612c37565b840191505092915050565b60006020820190508181036000830152612c9b8184612c48565b905092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000612cce82612ca3565b9050919050565b612cde81612cc3565b8114612ce957600080fd5b50565b600081359050612cfb81612cd5565b92915050565b600060208284031215612d1757612d16612b51565b5b6000612d2584828501612cec565b91505092915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b612d6381612b5b565b82525050565b6000612d758383612d5a565b60208301905092915050565b6000602082019050919050565b6000612d9982612d2e565b612da38185612d39565b9350612dae83612d4a565b8060005b83811015612ddf578151612dc68882612d69565b9750612dd183612d81565b925050600181019050612db2565b5085935050505092915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b600082825260208201905092915050565b6000612e3482612be8565b612e3e8185612e18565b9350612e4e818560208601612c04565b612e5781612c37565b840191505092915050565b6000612e6e8383612e29565b905092915050565b6000602082019050919050565b6000612e8e82612dec565b612e988185612df7565b935083602082028501612eaa85612e08565b8060005b85811015612ee65784840389528151612ec78582612e62565b9450612ed283612e76565b925060208a01995050600181019050612eae565b50829750879550505050505092915050565b60006080820190508181036000830152612f128187612d8e565b90508181036020830152612f268186612e83565b90508181036040830152612f3a8185612d8e565b90508181036060830152612f4e8184612d8e565b905095945050505050565b60006020820190508181036000830152612f738184612e83565b905092915050565b60008115159050919050565b612f9081612f7b565b82525050565b6000602082019050612fab6000830184612f87565b92915050565b600080fd5b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b612ff382612c37565b810181811067ffffffffffffffff8211171561301257613011612fbb565b5b80604052505050565b6000613025612b47565b90506130318282612fea565b919050565b600067ffffffffffffffff82111561305157613050612fbb565b5b61305a82612c37565b9050602081019050919050565b82818337600083830152505050565b600061308961308484613036565b61301b565b9050828152602081018484840111156130a5576130a4612fb6565b5b6130b0848285613067565b509392505050565b600082601f8301126130cd576130cc612fb1565b5b81356130dd848260208601613076565b91505092915050565b6000602082840312156130fc576130fb612b51565b5b600082013567ffffffffffffffff81111561311a57613119612b56565b5b613126848285016130b8565b91505092915050565b6000806040838503121561314657613145612b51565b5b600061315485828601612cec565b925050602083013567ffffffffffffffff81111561317557613174612b56565b5b613181858286016130b8565b9150509250929050565b61319481612cc3565b82525050565b60006020820190506131af600083018461318b565b92915050565b600060c0820190506131ca6000830189612bbe565b6131d7602083018861318b565b81810360408301526131e98187612c48565b90506131f86060830186612bbe565b6132056080830185612bbe565b61321260a0830184612bbe565b979650505050505050565b60008060006060848603121561323657613235612b51565b5b600084013567ffffffffffffffff81111561325457613253612b56565b5b613260868287016130b8565b935050602061327186828701612b7c565b925050604061328286828701612b7c565b9150509250925092565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b600381106132cc576132cb61328c565b5b50565b60008190506132dd826132bb565b919050565b60006132ed826132cf565b9050919050565b6132fd816132e2565b82525050565b600060208201905061331860008301846132f4565b92915050565b6000806040838503121561333557613334612b51565b5b600061334385828601612b7c565b925050602061335485828601612b7c565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806133a557607f821691505b602082108114156133b9576133b861335e565b5b50919050565b7f4e6f7420796f7572206f72646572000000000000000000000000000000000000600082015250565b60006133f5600e83612bf3565b9150613400826133bf565b602082019050919050565b60006020820190508181036000830152613424816133e8565b9050919050565b600060e082019050613440600083018a612bbe565b61344d602083018961318b565b61345a604083018861318b565b818103606083015261346c8187612c48565b905061347b6080830186612bbe565b61348860a0830185612bbe565b61349560c0830184612bbe565b98975050505050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006134db82612b5b565b91506134e683612b5b565b9250828210156134f9576134f86134a1565b5b828203905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b600061356d82612b5b565b915061357883612b5b565b92508261358857613587613533565b5b828204905092915050565b600061359e82612b5b565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8214156135d1576135d06134a1565b5b600182019050919050565b60006060820190506135f1600083018661318b565b6135fe6020830185612bbe565b61360b6040830184612bbe565b949350505050565b600081905092915050565b60008190508160005260206000209050919050565b600081546136408161338d565b61364a8186613613565b945060018216600081146136655760018114613676576136a9565b60ff198316865281860193506136a9565b61367f8561361e565b60005b838110156136a157815481890152600182019150602081019050613682565b838801955050505b50505092915050565b60006136be8284613633565b915081905092915050565b60006136d482612b5b565b91506136df83612b5b565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115613714576137136134a1565b5b828201905092915050565b7f4974656d2069732063757272656e746c79206e6f7420616c6c6f776564000000600082015250565b6000613755601d83612bf3565b91506137608261371f565b602082019050919050565b6000602082019050818103600083015261378481613748565b9050919050565b600081905092915050565b60006137a182612be8565b6137ab818561378b565b93506137bb818560208601612c04565b80840191505092915050565b60006137d38284613796565b915081905092915050565b7f52656475636520746865207175616e7469747900000000000000000000000000600082015250565b6000613814601383612bf3565b915061381f826137de565b602082019050919050565b6000602082019050818103600083015261384381613807565b9050919050565b600061385582612b5b565b915061386083612b5b565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615613899576138986134a1565b5b828202905092915050565b7f596f75206e656564206d6f726520657468000000000000000000000000000000600082015250565b60006138da601183612bf3565b91506138e5826138a4565b602082019050919050565b60006020820190508181036000830152613909816138cd565b905091905056fea2646970667358221220437792f8045c11283dcb30e443c30a69e5479fe914ee439e8b04ee5d7c1118ec64736f6c63430008080033",
  "deployedBytecode": "",
  "devdoc": {
    "author": "Abolaji",
    "kind": "dev",
    "methods": {},
    "title": "A contract for buying and selling items",
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 143,
        "contract": "contracts/Marketplace.sol:Marketplace",
        "label": "item",
        "offset": 0,
        "slot": "0",
        "type": "t_string_storage"
      },
      {
        "astId": 145,
        "contract": "contracts/Marketplace.sol:Marketplace",
        "label": "user",
        "offset": 0,
        "slot": "1",
        "type": "t_address_payable"
      },
      {
        "astId": 147,
        "contract": "contracts/Marketplace.sol:Marketplace",
        "label": "orderCount",
        "offset": 0,
        "slot": "2",
        "type": "t_uint256"
      },
      {
        "astId": 166,
        "contract": "contracts/Marketplace.sol:Marketplace",
        "label": "goods",
        "offset": 0,
        "slot": "3",
        "type": "t_mapping(t_address,t_mapping(t_string_memory_ptr,t_uint256))"
      },
      {
        "astId": 170,
        "contract": "contracts/Marketplace.sol:Marketplace",
        "label": "getBal",
        "offset": 0,
        "slot": "4",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 175,
        "contract": "contracts/Marketplace.sol:Marketplace",
        "label": "orders",
        "offset": 0,
        "slot": "5",
        "type": "t_mapping(t_uint256,t_struct(_order)160_storage)"
      },
      {
        "astId": 180,
        "contract": "contracts/Marketplace.sol:Marketplace",
        "label": "orderStatus",
        "offset": 0,
        "slot": "6",
        "type": "t_mapping(t_uint256,t_enum(ORDER_STATE)307)"
      },
      {
        "astId": 184,
        "contract": "contracts/Marketplace.sol:Marketplace",
        "label": "orderCancelled",
        "offset": 0,
        "slot": "7",
        "type": "t_mapping(t_uint256,t_bool)"
      },
      {
        "astId": 188,
        "contract": "contracts/Marketplace.sol:Marketplace",
        "label": "orderFilled",
        "offset": 0,
        "slot": "8",
        "type": "t_mapping(t_uint256,t_bool)"
      },
      {
        "astId": 192,
        "contract": "contracts/Marketplace.sol:Marketplace",
        "label": "orderCreated",
        "offset": 0,
        "slot": "9",
        "type": "t_mapping(t_uint256,t_bool)"
      },
      {
        "astId": 196,
        "contract": "contracts/Marketplace.sol:Marketplace",
        "label": "orderDelivered",
        "offset": 0,
        "slot": "10",
        "type": "t_mapping(t_uint256,t_bool)"
      },
      {
        "astId": 200,
        "contract": "contracts/Marketplace.sol:Marketplace",
        "label": "Buyers",
        "offset": 0,
        "slot": "11",
        "type": "t_mapping(t_uint256,t_address)"
      },
      {
        "astId": 204,
        "contract": "contracts/Marketplace.sol:Marketplace",
        "label": "filledAmount",
        "offset": 0,
        "slot": "12",
        "type": "t_mapping(t_uint256,t_uint256)"
      },
      {
        "astId": 208,
        "contract": "contracts/Marketplace.sol:Marketplace",
        "label": "filledQuantity",
        "offset": 0,
        "slot": "13",
        "type": "t_mapping(t_uint256,t_uint256)"
      },
      {
        "astId": 211,
        "contract": "contracts/Marketplace.sol:Marketplace",
        "label": "allowedItems",
        "offset": 0,
        "slot": "14",
        "type": "t_array(t_string_storage)dyn_storage"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_address_payable": {
        "encoding": "inplace",
        "label": "address payable",
        "numberOfBytes": "20"
      },
      "t_array(t_string_storage)dyn_storage": {
        "base": "t_string_storage",
        "encoding": "dynamic_array",
        "label": "string[]",
        "numberOfBytes": "32"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_enum(ORDER_STATE)307": {
        "encoding": "inplace",
        "label": "enum Marketplace.ORDER_STATE",
        "numberOfBytes": "1"
      },
      "t_mapping(t_address,t_mapping(t_string_memory_ptr,t_uint256))": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => mapping(string => uint256))",
        "numberOfBytes": "32",
        "value": "t_mapping(t_string_memory_ptr,t_uint256)"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_mapping(t_string_memory_ptr,t_uint256)": {
        "encoding": "mapping",
        "key": "t_string_memory_ptr",
        "label": "mapping(string => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_mapping(t_uint256,t_address)": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => address)",
        "numberOfBytes": "32",
        "value": "t_address"
      },
      "t_mapping(t_uint256,t_bool)": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => bool)",
        "numberOfBytes": "32",
        "value": "t_bool"
      },
      "t_mapping(t_uint256,t_enum(ORDER_STATE)307)": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => enum Marketplace.ORDER_STATE)",
        "numberOfBytes": "32",
        "value": "t_enum(ORDER_STATE)307"
      },
      "t_mapping(t_uint256,t_struct(_order)160_storage)": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => struct Marketplace._order)",
        "numberOfBytes": "32",
        "value": "t_struct(_order)160_storage"
      },
      "t_mapping(t_uint256,t_uint256)": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_string_memory_ptr": {
        "encoding": "bytes",
        "label": "string",
        "numberOfBytes": "32"
      },
      "t_string_storage": {
        "encoding": "bytes",
        "label": "string",
        "numberOfBytes": "32"
      },
      "t_struct(_order)160_storage": {
        "encoding": "inplace",
        "label": "struct Marketplace._order",
        "members": [
          {
            "astId": 149,
            "contract": "contracts/Marketplace.sol:Marketplace",
            "label": "id",
            "offset": 0,
            "slot": "0",
            "type": "t_uint256"
          },
          {
            "astId": 151,
            "contract": "contracts/Marketplace.sol:Marketplace",
            "label": "seller",
            "offset": 0,
            "slot": "1",
            "type": "t_address"
          },
          {
            "astId": 153,
            "contract": "contracts/Marketplace.sol:Marketplace",
            "label": "item",
            "offset": 0,
            "slot": "2",
            "type": "t_string_storage"
          },
          {
            "astId": 155,
            "contract": "contracts/Marketplace.sol:Marketplace",
            "label": "qtty_to_sell",
            "offset": 0,
            "slot": "3",
            "type": "t_uint256"
          },
          {
            "astId": 157,
            "contract": "contracts/Marketplace.sol:Marketplace",
            "label": "price",
            "offset": 0,
            "slot": "4",
            "type": "t_uint256"
          },
          {
            "astId": 159,
            "contract": "contracts/Marketplace.sol:Marketplace",
            "label": "timestamp",
            "offset": 0,
            "slot": "5",
            "type": "t_uint256"
          }
        ],
        "numberOfBytes": "192"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}